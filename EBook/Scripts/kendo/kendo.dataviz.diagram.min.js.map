{"version":3,"sources":["kendo.dataviz.diagram.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals",1,10,100,2,20,200,3,30,300,4,40,400,5,50,500,6,60,600,7,70,700,8,80,800,9,90,900,1000,"values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","Math","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","loadFonts","fonts","callback","promises","document","font","load","e","logToConsole","Promise","all","then","doc","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","geometryChange","suspend","resume","_observerField","field","mixins","Range","start","stop","step","rangeIntegerScale","k","range","j","Utils","sign","Infinity","abs","findRadian","end","sngXComp","sngYComp","y","atan","Easing","Ticker","diagram","isArray","EPSILON","isNearZero","num","isDefined","obj","isUndefined","isObject","has","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","parseFloat","isEmpty","simpleExtend","destination","source","initArray","serializePoints","points","res","deserializePoints","s","Point","parseInt","randomInteger","lower","upper","floor","random","DFT","el","func","item","childNodes","getMatrixAngle","atan2","b","getMatrixScaling","sX","sqrt","a","sY","number","findAngle","center","forEach","iterator","thisRef","any","predicate","remove","what","ax","indexOf","contains","fold","list","acc","context","initial","find","constraint","insert","position","clear","bisort","sortfunc","addRange","easeInOut","cos","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","caller","onStep","seekTo","to","seekFromTo","from","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","movement","timePassed","ui","intersectLine","start1","end1","start2","end2","isSegment","num1","num2","tangensdiff","normalVariable","mean","deviation","log","randomId","chars","PathDefiner","Rect","Size","Intersect","RectAlign","Polar","Matrix","MatrixVector","Geometry","HashTable","Dictionary","Queue","Set","Node","Link","Graph","Point2D","isFunction","HITTESTAREA","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","halfpi","len","factor","isOnLine","temp","r1","r2","o1","u1","inflate","union","parse","tempStr","slice","xy","left","right","point","dx","dy","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","delta","scaled","thisCenter","zoom","overlaps","rectBottomRight","Empty","toRect","empty","fromPoints","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","container","align","content","alignment","alignValues","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","nums","trim","substr","fromMatrix","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","p1","p2","minimum","_buckets","add","_createGetBucket","_bucketExists","set","containsKey","hashId","_hash","bucket","hashes","_hashes","ht","_hashString","_objectHashId","ch","_hashId","Observable","dictionary","that","_hashTable","Error","forEachValue","forEachKey","keys","enqueue","next","dequeue","resource","kv","toArray","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","child","level","root","found","getConnectedComponents","componentId","components","graph","componentIndex","setItemIndices","_collectConnectedNodes","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","remaining","levelCount","ni","cn","newLink","treeLevels","tree","_addNode","pop","addLink","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","foundSource","foundTarget","addExistingLink","getNode","addNode","removeAllLinks","t","hasLink","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","sourceStack","targetStack","intensity","targets","li","targetLink","sources","si","sourceLink","maxdiff","ri","ril","u","vertexOrder","kk","reversedEdges","unshift","concat","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","previous","g","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","connect","createDiagramFromGraph","doLayout","randomSize","opt","gli","sourceShape","targetShape","shi","clientWidth","clientHeight","SpringLayout","layoutGraph","limitToView","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","diffNumericOptions","fields","elementOptions","hasChanges","sizeOptionsOrDefault","normalizeDrawingOptions","drawingOptions","getColor","TRANSPARENT","Color","toHex","lineAngle","xDiff","yDiff","createSegment","Segment","toDrawingRect","Scale","Translation","Rotation","CompositeTransform","AutoSizeableMixin","Element","VisualBase","TextBlock","Rectangle","MarkerBase","CircleMarker","ArrowMarker","MarkerPathMixin","Path","Line","Polyline","Image","Group","Layout","Circle","Canvas","geometry","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","toMatrix","format","invert","toMatrixVector","Length","ZERO","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","startPoint","_measured","_boundingBox","rawBBox","stroke","opacity","_fill","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","_textColor","_font","_initText","fontSize","fontFamily","Text","sizeChanged","textOptions","_initPath","_setPosition","_drawPath","closed","sizeOptions","elements","anchor","createElement","_transformToPath","path","transformCopy","positionMarker","targetSegment","_linePoints","endPoint","nextSegment","prevSegment","controlOut","controlIn","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","marker","_markers","_createMarkers","_createMarker","markerType","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","_createElements","_setData","multipath","_updatePath","_pointsDiffer","currentPoints","differ","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","selectSingle","meta","isSelected","ctrlKey","select","addToSelection","noMeta","altKey","shiftKey","tryActivateSelection","enabled","testKey","toUpperCase","hitToOppositeSide","hit","canDrag","editable","drag","hitTestShapeConnectors","connector","connectors","HIT_TEST_DISTANCE","PositionAdapter","LayoutUndoUnit","CompositeUnit","ConnectionEditUnit","ConnectionEditUndoUnit","DeleteConnectionUnit","DeleteShapeUnit","TransformUnit","AddConnectionUnit","AddShapeUnit","PanUndoUnit","RotateUnit","ToFrontUnit","ToBackUnit","UndoRedoService","EmptyTool","ScrollerTool","PointerTool","SelectionTool","ConnectionTool","ConnectionEditTool","ToolService","ConnectionRouterBase","LinearConnectionRouter","PolylineRouter","CascadingRouter","AdornerBase","ConnectionEditAdorner","ConnectorsAdorner","ResizingAdorner","Selector","ConnectorVisual","Movable","browser","support","proxy","Cursors","arrow","grip","cross","south","east","west","north","rowresize","colresize","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","layoutState","pusher","getShapeById","subjects","froms","tos","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","ticker","conn","units","undoUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","undoSource","undoTarget","targetConnector","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","deselect","initialPosition","finalPosition","finalPos","pan","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","items","initialIndices","_toIndex","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","toolService","tryActivate","getCursor","canvas","scroller","virtualScroll","tool","friction","mobileOS","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","dimension","makeVirtual","virtualSize","dimensions","disable","pannable","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","selectable","handle","_hitTest","_resizingAdorner","isDragHandle","connections","service","undoRedoService","triggerClick","_getCursor","selector","selectArea","_createConnection","_c","_connectionManipulation","_removeHover","activeConnection","sourceConnector","Shape","getConnector","_syncConnectionChanges","isActive","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","updateHovered","keyDown","toRemove","metaKey","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","newConnection","cursor","css","msie","version","cssText","disabledShape","isNew","selectedConnections","_connectorsAdorner","_visible","_selectedItems","Connection","_hitTestItems","_hitTestElements","mainLayer","shapeIdx","connectionIdx","shapeHit","connectionHit","hitTest","rec","getBounds","allPoints","route","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","horizontal","_adorners","sp","tp","_ts","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","rx","ry","sb","tb","modelToLayer","_refreshHandler","ctr","unbind","each","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","thr","newCenter","oldBounds","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","_truncateDistance","_displaceBounds","minWidth","minHeight","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","_diffStates","_syncShapeChanges","thumb","rotationThumb","_rotationThumbBounds","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","HyperTree","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","boundingRect","currentHeight","currentWidth","moveToOffset","nodeBounds","newpoints","pt","deltax","deltay","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","newEdge","areConnectedAlready","adapter","finalNodeSet","LayoutState","initialTemperature","guessBounds","temperature","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","_SquareForce","distance","av","squareSize","ratio","multiplier","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","startAngle","endAngle","previousRoot","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","pl","nl","col","basevalue","normalizeAngle","childNode","cp","childAngleFraction","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","sortedNodes","minLayer","layerMap","layerCount","o2","o1layer","o2layer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","classNodes","rightSibling","D","neighbor","leftPos","placeLeft","POSITIVE_INFINITY","nodeLeftClass","upNodes","downNodes","intDiv","placeRightToLeft","rightClasses","leftSibling","rightPos","placeRight","NEGATIVE_INFINITY","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","ndsinl","vnode","wings","currentWing","wing","_nodesInLink","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","maximumHeight","ctx","MIN_VALUE","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","fromLayerIndex","reachedFinalLayerIndex","layerIncrement","_gridPositionComparer","dest","virtualStartIndex","virtualStart","sequence","virtualEnd","virtualEndIndex","_firstVirtualNode","_sequencer","nextVirtualNode","adjustDirections","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","clayer","j1","j2","getNeighborOnLayer","dir","_sequenceSingle","combineSequences","pair","rightHeap","leftRes","rightRes","leftHeap","_positionDescendingComparer","_positionAscendingComparer","leftClass","_getComposite","rightClass","maxLayoutIterations","it","gridPos","layoutLayer","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","o","oLayer","dLayer","oPos","dPos","upLayer","downLayer","depthOfDumminess","prevLink","dedum","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","inode","compareValue","n1BaryCenter","n2BaryCenter","compareByIndex","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","countLinksCrossingBetweenTwoLayers","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","n11gp","n12gp","n21gp","n22gp","crossings","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","Array","GraphAdapter","mwDelta","origEvent","originalEvent","wheelDelta","detail","isAutoConnector","closestConnector","resCtr","minimumDistance","MAXINT","ctrs","distanceTo","indicesOfItems","filterShapeDataItem","dataItem","filterConnectionDataItem","fromConnector","fromX","fromY","toConnector","toX","toY","connectionSelector","textField","model","dataSource","reader","idField","appendTo","kendoDropDownList","dataValueField","dataTextField","toJSON","optionLabel","valuePrimitive","InactiveItem","callbacks","InactiveItemsCollection","cloneDataItem","Model","_defaultId","splitDiagramElements","createModel","ObservableObject","clearField","copyDefaultOptions","mainOptions","translateToOrigin","bbox","defaultButtons","DiagramElement","Connector","Diagram","DiagramToolBar","Editor","PopupEditor","QuadRoot","QuadNode","ShapesQuadTree","geom","Widget","HierarchicalDataSource","isPlainObject","NS","CASCADING","CHANGE","CLICK","ERROR","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","DefaultConnectors","getPosition","imageClass","className","iconClass","defaults","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_updateContentVisual","_createContentVisual","elementTemplate","_canSelect","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","modelOptions","redrawVisual","_isEditable","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","toConenctor","dataMap","_dataMap","connectionsDataSource","getByUid","uid","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","autoSourceShape","autoTargetShape","_resolveAutoConnectors","targetConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","sourceConnectors","_testRoutePoints","router","passRoute","_shapesQuadTree","hitTestRect","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_initCanvas","adornerLayer","_createHandlers","_fetchFreshData","_createGlobalToolBar","_clipboard","pauseMouseHandlers","_createOptionElements","theme","draggable","autoBind","tooltip","connectionDefaults","toolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","view","editor","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","connectionSelectorHandler","cancelEdit","shapeEditors","shapeTemplate","connectionEditors","connectionTemplate","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","userShapeDefaults","canvasContainer","viewPort","viewport","on","_wheel","touch","_userEvents","UserEvents","multiTouch","tap","_tap","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","_mouseMove","_mouseUp","_mouseDown","_mouseover","_mouseout","_keydown","_syncHandler","_resizeHandler","onResize","_caculateMobilePosition","_createToolBar","documentToModel","location","initialCenter","eventArgs","_gesture","_initialCenter","zoomedPoint","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","_panTransform","_updateAdorners","preventDefault","_kendoNode","srcElement","themes","themeName","themeOptions","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","scrollHeight","setOptions","added","removed","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","viewportVector","raw","_getPan","animatedScrollTo","scrollTo","outerHeight","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_calculatePosition","which","_meta","_addItem","padding","popupWidth","popupHeight","connectionBounds","singleToolBar","_popup","outerWidth","showAt","keyCode","pointEvent","pageX","pageY","_normalizePointZoom","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","open","newGroup","editTool","spriteCssClass","showText","attributes","_setAttributes","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","rotateClockwise","rotateAnticlockwise","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","deffered","Deferred","deferred","resolve","_add","_quadNode","_testRect","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","plugin"],"mappings":"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","file":"kendo.dataviz.diagram.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        function loadFonts(fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.loadFonts = loadFonts;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function (e) {\n                this.trigger('geometryChange', e);\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/utils', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram = {}, deepExtend = kendo.deepExtend, isArray = $.isArray, EPSILON = 0.000001;\n        var Utils = {};\n        deepExtend(Utils, {\n            isNearZero: function (num) {\n                return Math.abs(num) < EPSILON;\n            },\n            isDefined: function (obj) {\n                return typeof obj !== 'undefined';\n            },\n            isUndefined: function (obj) {\n                return typeof obj === 'undefined' || obj === null;\n            },\n            isObject: function (obj) {\n                return obj === Object(obj);\n            },\n            has: function (obj, key) {\n                return Object.hasOwnProperty.call(obj, key);\n            },\n            isString: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object String]';\n            },\n            isBoolean: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object Boolean]';\n            },\n            isType: function (obj, type) {\n                return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n            },\n            isNumber: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n            isEmpty: function (obj) {\n                if (obj === null) {\n                    return true;\n                }\n                if (isArray(obj) || Utils.isString(obj)) {\n                    return obj.length === 0;\n                }\n                for (var key in obj) {\n                    if (Utils.has(obj, key)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            simpleExtend: function (destination, source) {\n                if (!Utils.isObject(source)) {\n                    return;\n                }\n                for (var name in source) {\n                    destination[name] = source[name];\n                }\n            },\n            initArray: function createIdArray(size, value) {\n                var array = [];\n                for (var i = 0; i < size; ++i) {\n                    array[i] = value;\n                }\n                return array;\n            },\n            serializePoints: function (points) {\n                var res = [];\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    res.push(p.x + ';' + p.y);\n                }\n                return res.join(';');\n            },\n            deserializePoints: function (s) {\n                var v = s.split(';'), points = [];\n                if (v.length % 2 !== 0) {\n                    throw 'Not an array of points.';\n                }\n                for (var i = 0; i < v.length; i += 2) {\n                    points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n                }\n                return points;\n            },\n            randomInteger: function (lower, upper) {\n                return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n            },\n            DFT: function (el, func) {\n                func(el);\n                if (el.childNodes) {\n                    for (var i = 0; i < el.childNodes.length; i++) {\n                        var item = el.childNodes[i];\n                        this.DFT(item, func);\n                    }\n                }\n            },\n            getMatrixAngle: function (m) {\n                if (m === null || m.d === 0) {\n                    return 0;\n                }\n                return Math.atan2(m.b, m.d) * 180 / Math.PI;\n            },\n            getMatrixScaling: function (m) {\n                var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n                var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n                return [\n                    sX,\n                    sY\n                ];\n            }\n        });\n        function Range(start, stop, step) {\n            if (typeof start == 'undefined' || typeof stop == 'undefined') {\n                return [];\n            }\n            if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n                throw 'The sign of the increment should allow to reach the stop-value.';\n            }\n            step = step || 1;\n            start = start || 0;\n            stop = stop || start;\n            if ((stop - start) / step === Infinity) {\n                throw 'Infinite range defined.';\n            }\n            var range = [], i = -1, j;\n            function rangeIntegerScale(x) {\n                var k = 1;\n                while (x * k % 1) {\n                    k *= 10;\n                }\n                return k;\n            }\n            var k = rangeIntegerScale(Math.abs(step));\n            start *= k;\n            stop *= k;\n            step *= k;\n            if (start > stop && step > 0) {\n                step = -step;\n            }\n            if (step < 0) {\n                while ((j = start + step * ++i) >= stop) {\n                    range.push(j / k);\n                }\n            } else {\n                while ((j = start + step * ++i) <= stop) {\n                    range.push(j / k);\n                }\n            }\n            return range;\n        }\n        function findRadian(start, end) {\n            if (start == end) {\n                return 0;\n            }\n            var sngXComp = end.x - start.x, sngYComp = start.y - end.y, atan = Math.atan(sngXComp / sngYComp);\n            if (sngYComp >= 0) {\n                return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n            }\n            return atan + Math.PI;\n        }\n        Utils.sign = function (number) {\n            return number ? number < 0 ? -1 : 1 : 0;\n        };\n        Utils.findAngle = function (center, end) {\n            return findRadian(center, end) * 180 / Math.PI;\n        };\n        Utils.forEach = function (arr, iterator, thisRef) {\n            for (var i = 0; i < arr.length; i++) {\n                iterator.call(thisRef, arr[i], i, arr);\n            }\n        };\n        Utils.any = function (arr, predicate) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (predicate(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        Utils.remove = function (arr, what) {\n            var ax;\n            while ((ax = Utils.indexOf(arr, what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n            return arr;\n        };\n        Utils.contains = function (arr, obj) {\n            return Utils.indexOf(arr, obj) !== -1;\n        };\n        Utils.indexOf = function (arr, what) {\n            return $.inArray(what, arr);\n        };\n        Utils.fold = function (list, iterator, acc, context) {\n            var initial = arguments.length > 2;\n            for (var i = 0; i < list.length; i++) {\n                var value = list[i];\n                if (!initial) {\n                    acc = value;\n                    initial = true;\n                } else {\n                    acc = iterator.call(context, acc, value, i, list);\n                }\n            }\n            if (!initial) {\n                throw 'Reduce of empty array with no initial value';\n            }\n            return acc;\n        };\n        Utils.find = function (arr, iterator, context) {\n            var result;\n            Utils.any(arr, function (value, index, list) {\n                if (iterator.call(context, value, index, list)) {\n                    result = value;\n                    return true;\n                }\n                return false;\n            });\n            return result;\n        };\n        Utils.first = function (arr, constraint, context) {\n            if (arr.length === 0) {\n                return null;\n            }\n            if (Utils.isUndefined(constraint)) {\n                return arr[0];\n            }\n            return Utils.find(arr, constraint, context);\n        };\n        Utils.insert = function (arr, element, position) {\n            arr.splice(position, 0, element);\n            return arr;\n        };\n        Utils.all = function (arr, iterator, context) {\n            var result = true;\n            var value;\n            for (var i = 0; i < arr.length; i++) {\n                value = arr[i];\n                result = result && iterator.call(context, value, i, arr);\n                if (!result) {\n                    break;\n                }\n            }\n            return result;\n        };\n        Utils.clear = function (arr) {\n            arr.splice(0, arr.length);\n        };\n        Utils.bisort = function (a, b, sortfunc) {\n            if (Utils.isUndefined(a)) {\n                throw 'First array is not specified.';\n            }\n            if (Utils.isUndefined(b)) {\n                throw 'Second array is not specified.';\n            }\n            if (a.length != b.length) {\n                throw 'The two arrays should have equal length';\n            }\n            var all = [], i;\n            for (i = 0; i < a.length; i++) {\n                all.push({\n                    'x': a[i],\n                    'y': b[i]\n                });\n            }\n            if (Utils.isUndefined(sortfunc)) {\n                all.sort(function (m, n) {\n                    return m.x - n.x;\n                });\n            } else {\n                all.sort(function (m, n) {\n                    return sortfunc(m.x, n.x);\n                });\n            }\n            Utils.clear(a);\n            Utils.clear(b);\n            for (i = 0; i < all.length; i++) {\n                a.push(all[i].x);\n                b.push(all[i].y);\n            }\n        };\n        Utils.addRange = function (arr, range) {\n            arr.push.apply(arr, range);\n        };\n        var Easing = {\n            easeInOut: function (pos) {\n                return -Math.cos(pos * Math.PI) / 2 + 0.5;\n            }\n        };\n        var Ticker = kendo.Class.extend({\n            init: function () {\n                this.adapters = [];\n                this.target = 0;\n                this.tick = 0;\n                this.interval = 20;\n                this.duration = 800;\n                this.lastTime = null;\n                this.handlers = [];\n                var _this = this;\n                this.transition = Easing.easeInOut;\n                this.timerDelegate = function () {\n                    _this.onTimerEvent();\n                };\n            },\n            addAdapter: function (a) {\n                this.adapters.push(a);\n            },\n            onComplete: function (handler) {\n                this.handlers.push(handler);\n            },\n            removeHandler: function (handler) {\n                this.handlers = $.grep(this.handlers, function (h) {\n                    return h !== handler;\n                });\n            },\n            trigger: function () {\n                var _this = this;\n                if (this.handlers) {\n                    Utils.forEach(this.handlers, function (h) {\n                        return h.call(_this.caller !== null ? _this.caller : _this);\n                    });\n                }\n            },\n            onStep: function () {\n            },\n            seekTo: function (to) {\n                this.seekFromTo(this.tick, to);\n            },\n            seekFromTo: function (from, to) {\n                this.target = Math.max(0, Math.min(1, to));\n                this.tick = Math.max(0, Math.min(1, from));\n                this.lastTime = new Date().getTime();\n                if (!this.intervalId) {\n                    this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n                }\n            },\n            stop: function () {\n                if (this.intervalId) {\n                    window.clearInterval(this.intervalId);\n                    this.intervalId = null;\n                    this.trigger();\n                }\n            },\n            play: function (origin) {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                if (origin !== null) {\n                    this.caller = origin;\n                }\n                this.initState();\n                this.seekFromTo(0, 1);\n            },\n            reverse: function () {\n                this.seekFromTo(1, 0);\n            },\n            initState: function () {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].initState();\n                }\n            },\n            propagate: function () {\n                var value = this.transition(this.tick);\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].update(value);\n                }\n            },\n            onTimerEvent: function () {\n                var now = new Date().getTime();\n                var timePassed = now - this.lastTime;\n                this.lastTime = now;\n                var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n                if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                    this.tick = this.target;\n                } else {\n                    this.tick += movement;\n                }\n                try {\n                    this.propagate();\n                } finally {\n                    this.onStep.call(this);\n                    if (this.target == this.tick) {\n                        this.stop();\n                    }\n                }\n            }\n        });\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Utils: Utils,\n            Range: Range,\n            Ticker: Ticker\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/math', [\n        'dataviz/diagram/utils',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, Utils = diagram.Utils, Point = dataviz.Point2D, isFunction = kendo.isFunction, contains = Utils.contains, map = $.map;\n        var HITTESTAREA = 3, EPSILON = 0.000001;\n        deepExtend(Point.fn, {\n            plus: function (p) {\n                return new Point(this.x + p.x, this.y + p.y);\n            },\n            minus: function (p) {\n                return new Point(this.x - p.x, this.y - p.y);\n            },\n            offset: function (value) {\n                return new Point(this.x - value, this.y - value);\n            },\n            times: function (s) {\n                return new Point(this.x * s, this.y * s);\n            },\n            normalize: function () {\n                if (this.length() === 0) {\n                    return new Point();\n                }\n                return this.times(1 / this.length());\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            toString: function () {\n                return '(' + this.x + ',' + this.y + ')';\n            },\n            lengthSquared: function () {\n                return this.x * this.x + this.y * this.y;\n            },\n            middleOf: function MiddleOf(p, q) {\n                return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n            },\n            toPolar: function (useDegrees) {\n                var factor = 1;\n                if (useDegrees) {\n                    factor = 180 / Math.PI;\n                }\n                var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n                var halfpi = Math.PI / 2;\n                var len = this.length();\n                if (this.x === 0) {\n                    if (this.y === 0) {\n                        return new Polar(0, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * halfpi);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * 3 * halfpi);\n                    }\n                } else if (this.x > 0) {\n                    if (this.y === 0) {\n                        return new Polar(len, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * a);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (4 * halfpi - a));\n                    }\n                } else {\n                    if (this.y === 0) {\n                        return new Polar(len, 2 * halfpi);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * (2 * halfpi - a));\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (2 * halfpi + a));\n                    }\n                }\n            },\n            isOnLine: function (from, to) {\n                if (from.x > to.x) {\n                    var temp = to;\n                    to = from;\n                    from = temp;\n                }\n                var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA), r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n                if (r1.union(r2).contains(this)) {\n                    if (from.x === to.x || from.y === to.y) {\n                        return true;\n                    } else if (from.y < to.y) {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - r1.y) / (r2.y - r1.y);\n                    } else {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - r1.y) / (r2.y - r1.y);\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                    }\n                    return this.x > o1 && this.x < u1;\n                }\n                return false;\n            }\n        });\n        deepExtend(Point, {\n            parse: function (str) {\n                var tempStr = str.slice(1, str.length - 1), xy = tempStr.split(','), x = parseInt(xy[0], 10), y = parseInt(xy[1], 10);\n                if (!isNaN(x) && !isNaN(y)) {\n                    return new Point(x, y);\n                }\n            }\n        });\n        var PathDefiner = Class.extend({\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        });\n        var Rect = Class.extend({\n            init: function (x, y, width, height) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.width = width || 0;\n                this.height = height || 0;\n            },\n            contains: function (point) {\n                return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n            },\n            inflate: function (dx, dy) {\n                if (dy === undefined) {\n                    dy = dx;\n                }\n                this.x -= dx;\n                this.y -= dy;\n                this.width += 2 * dx + 1;\n                this.height += 2 * dy + 1;\n                return this;\n            },\n            offset: function (dx, dy) {\n                var x = dx, y = dy;\n                if (dx instanceof Point) {\n                    x = dx.x;\n                    y = dx.y;\n                }\n                this.x += x;\n                this.y += y;\n                return this;\n            },\n            union: function (r) {\n                var x1 = Math.min(this.x, r.x);\n                var y1 = Math.min(this.y, r.y);\n                var x2 = Math.max(this.x + this.width, r.x + r.width);\n                var y2 = Math.max(this.y + this.height, r.y + r.height);\n                return new Rect(x1, y1, x2 - x1, y2 - y1);\n            },\n            center: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height / 2);\n            },\n            top: function () {\n                return new Point(this.x + this.width / 2, this.y);\n            },\n            right: function () {\n                return new Point(this.x + this.width, this.y + this.height / 2);\n            },\n            bottom: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height);\n            },\n            left: function () {\n                return new Point(this.x, this.y + this.height / 2);\n            },\n            topLeft: function () {\n                return new Point(this.x, this.y);\n            },\n            topRight: function () {\n                return new Point(this.x + this.width, this.y);\n            },\n            bottomLeft: function () {\n                return new Point(this.x, this.y + this.height);\n            },\n            bottomRight: function () {\n                return new Point(this.x + this.width, this.y + this.height);\n            },\n            clone: function () {\n                return new Rect(this.x, this.y, this.width, this.height);\n            },\n            isEmpty: function () {\n                return !this.width && !this.height;\n            },\n            equals: function (rect) {\n                return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n            },\n            rotatedBounds: function (angle) {\n                var rect = this.clone(), points = this.rotatedPoints(angle), tl = points[0], tr = points[1], br = points[2], bl = points[3];\n                rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n                rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n                rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n                rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n                return rect;\n            },\n            rotatedPoints: function (angle) {\n                var rect = this, c = rect.center(), br = rect.bottomRight().rotate(c, 360 - angle), tl = rect.topLeft().rotate(c, 360 - angle), tr = rect.topRight().rotate(c, 360 - angle), bl = rect.bottomLeft().rotate(c, 360 - angle);\n                return [\n                    tl,\n                    tr,\n                    br,\n                    bl\n                ];\n            },\n            toString: function (delimiter) {\n                delimiter = delimiter || ' ';\n                return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n            },\n            scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n                var tl = this.topLeft();\n                var thisCenter = this.center();\n                tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n                var delta = staicPoint.minus(tl);\n                var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n                var position = delta.minus(scaled);\n                tl = tl.plus(position);\n                tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n                this.x = tl.x;\n                this.y = tl.y;\n                this.width *= scaleX;\n                this.height *= scaleY;\n            },\n            zoom: function (zoom) {\n                this.x *= zoom;\n                this.y *= zoom;\n                this.width *= zoom;\n                this.height *= zoom;\n                return this;\n            },\n            overlaps: function (rect) {\n                var bottomRight = this.bottomRight();\n                var rectBottomRight = rect.bottomRight();\n                var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y || rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n                return overlaps;\n            }\n        });\n        var Size = Class.extend({\n            init: function (width, height) {\n                this.width = width;\n                this.height = height;\n            }\n        });\n        Size.prototype.Empty = new Size(0, 0);\n        Rect.toRect = function (rect) {\n            if (!(rect instanceof Rect)) {\n                rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            }\n            return rect;\n        };\n        Rect.empty = function () {\n            return new Rect(0, 0, 0, 0);\n        };\n        Rect.fromPoints = function (p, q) {\n            if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n                throw 'Some values are NaN.';\n            }\n            return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n        };\n        function isNearZero(num) {\n            return Math.abs(num) < EPSILON;\n        }\n        function intersectLine(start1, end1, start2, end2, isSegment) {\n            var tangensdiff = (end1.x - start1.x) * (end2.y - start2.y) - (end1.y - start1.y) * (end2.x - start2.x);\n            if (isNearZero(tangensdiff)) {\n                return;\n            }\n            var num1 = (start1.y - start2.y) * (end2.x - start2.x) - (start1.x - start2.x) * (end2.y - start2.y);\n            var num2 = (start1.y - start2.y) * (end1.x - start1.x) - (start1.x - start2.x) * (end1.y - start1.y);\n            var r = num1 / tangensdiff;\n            var s = num2 / tangensdiff;\n            if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n                return;\n            }\n            return new Point(start1.x + r * (end1.x - start1.x), start1.y + r * (end1.y - start1.y));\n        }\n        var Intersect = {\n            lines: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2);\n            },\n            segments: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2, true);\n            },\n            rectWithLine: function (rect, start, end) {\n                return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) || Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) || Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) || Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n            },\n            rects: function (rect1, rect2, angle) {\n                var tl = rect2.topLeft(), tr = rect2.topRight(), bl = rect2.bottomLeft(), br = rect2.bottomRight();\n                var center = rect2.center();\n                if (angle) {\n                    tl = tl.rotate(center, angle);\n                    tr = tr.rotate(center, angle);\n                    bl = bl.rotate(center, angle);\n                    br = br.rotate(center, angle);\n                }\n                var intersect = rect1.contains(tl) || rect1.contains(tr) || rect1.contains(bl) || rect1.contains(br) || Intersect.rectWithLine(rect1, tl, tr) || Intersect.rectWithLine(rect1, tl, bl) || Intersect.rectWithLine(rect1, tr, br) || Intersect.rectWithLine(rect1, bl, br);\n                if (!intersect) {\n                    tl = rect1.topLeft();\n                    tr = rect1.topRight();\n                    bl = rect1.bottomLeft();\n                    br = rect1.bottomRight();\n                    if (angle) {\n                        var reverseAngle = 360 - angle;\n                        tl = tl.rotate(center, reverseAngle);\n                        tr = tr.rotate(center, reverseAngle);\n                        bl = bl.rotate(center, reverseAngle);\n                        br = br.rotate(center, reverseAngle);\n                    }\n                    intersect = rect2.contains(tl) || rect2.contains(tr) || rect2.contains(bl) || rect2.contains(br);\n                }\n                return intersect;\n            }\n        };\n        var RectAlign = Class.extend({\n            init: function (container) {\n                this.container = Rect.toRect(container);\n            },\n            align: function (content, alignment) {\n                var alignValues = alignment.toLowerCase().split(' ');\n                for (var i = 0; i < alignValues.length; i++) {\n                    content = this._singleAlign(content, alignValues[i]);\n                }\n                return content;\n            },\n            _singleAlign: function (content, alignment) {\n                if (isFunction(this[alignment])) {\n                    return this[alignment](content);\n                } else {\n                    return content;\n                }\n            },\n            left: function (content) {\n                return this._align(content, this._left);\n            },\n            center: function (content) {\n                return this._align(content, this._center);\n            },\n            right: function (content) {\n                return this._align(content, this._right);\n            },\n            stretch: function (content) {\n                return this._align(content, this._stretch);\n            },\n            top: function (content) {\n                return this._align(content, this._top);\n            },\n            middle: function (content) {\n                return this._align(content, this._middle);\n            },\n            bottom: function (content) {\n                return this._align(content, this._bottom);\n            },\n            _left: function (container, content) {\n                content.x = container.x;\n            },\n            _center: function (container, content) {\n                content.x = (container.width - content.width) / 2 || 0;\n            },\n            _right: function (container, content) {\n                content.x = container.width - content.width;\n            },\n            _top: function (container, content) {\n                content.y = container.y;\n            },\n            _middle: function (container, content) {\n                content.y = (container.height - content.height) / 2 || 0;\n            },\n            _bottom: function (container, content) {\n                content.y = container.height - content.height;\n            },\n            _stretch: function (container, content) {\n                content.x = 0;\n                content.y = 0;\n                content.height = container.height;\n                content.width = container.width;\n            },\n            _align: function (content, alignCalc) {\n                content = Rect.toRect(content);\n                alignCalc(this.container, content);\n                return content;\n            }\n        });\n        var Polar = Class.extend({\n            init: function (r, a) {\n                this.r = r;\n                this.angle = a;\n            }\n        });\n        var Matrix = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            plus: function (m) {\n                this.a += m.a;\n                this.b += m.b;\n                this.c += m.c;\n                this.d += m.d;\n                this.e += m.e;\n                this.f += m.f;\n            },\n            minus: function (m) {\n                this.a -= m.a;\n                this.b -= m.b;\n                this.c -= m.c;\n                this.d -= m.d;\n                this.e -= m.e;\n                this.f -= m.f;\n            },\n            times: function (m) {\n                return new Matrix(this.a * m.a + this.c * m.b, this.b * m.a + this.d * m.b, this.a * m.c + this.c * m.d, this.b * m.c + this.d * m.d, this.a * m.e + this.c * m.f + this.e, this.b * m.e + this.d * m.f + this.f);\n            },\n            apply: function (p) {\n                return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n            },\n            applyRect: function (r) {\n                return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n            },\n            toString: function () {\n                return 'matrix(' + this.a + ' ' + this.b + ' ' + this.c + ' ' + this.d + ' ' + this.e + ' ' + this.f + ')';\n            }\n        });\n        deepExtend(Matrix, {\n            fromSVGMatrix: function (vm) {\n                var m = new Matrix();\n                m.a = vm.a;\n                m.b = vm.b;\n                m.c = vm.c;\n                m.d = vm.d;\n                m.e = vm.e;\n                m.f = vm.f;\n                return m;\n            },\n            fromMatrixVector: function (v) {\n                var m = new Matrix();\n                m.a = v.a;\n                m.b = v.b;\n                m.c = v.c;\n                m.d = v.d;\n                m.e = v.e;\n                m.f = v.f;\n                return m;\n            },\n            fromList: function (v) {\n                if (v.length !== 6) {\n                    throw 'The given list should consist of six elements.';\n                }\n                var m = new Matrix();\n                m.a = v[0];\n                m.b = v[1];\n                m.c = v[2];\n                m.d = v[3];\n                m.e = v[4];\n                m.f = v[5];\n                return m;\n            },\n            translation: function (x, y) {\n                var m = new Matrix();\n                m.a = 1;\n                m.b = 0;\n                m.c = 0;\n                m.d = 1;\n                m.e = x;\n                m.f = y;\n                return m;\n            },\n            unit: function () {\n                return new Matrix(1, 0, 0, 1, 0, 0);\n            },\n            rotation: function (angle, x, y) {\n                var m = new Matrix();\n                m.a = Math.cos(angle * Math.PI / 180);\n                m.b = Math.sin(angle * Math.PI / 180);\n                m.c = -m.b;\n                m.d = m.a;\n                m.e = x - x * m.a + y * m.b || 0;\n                m.f = y - y * m.a - x * m.b || 0;\n                return m;\n            },\n            scaling: function (scaleX, scaleY) {\n                var m = new Matrix();\n                m.a = scaleX;\n                m.b = 0;\n                m.c = 0;\n                m.d = scaleY;\n                m.e = 0;\n                m.f = 0;\n                return m;\n            },\n            parse: function (v) {\n                var parts, nums;\n                if (v) {\n                    v = v.trim();\n                    if (v.slice(0, 6).toLowerCase() === 'matrix') {\n                        nums = v.slice(7, v.length - 1).trim();\n                        parts = nums.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                        parts = nums.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.slice(0, 1) === '(' && v.slice(v.length - 1) === ')') {\n                        v = v.substr(1, v.length - 1);\n                    }\n                    if (v.indexOf(',') > 0) {\n                        parts = v.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.indexOf(' ') > 0) {\n                        parts = v.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                }\n                return parts;\n            }\n        });\n        var MatrixVector = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            fromMatrix: function FromMatrix(m) {\n                var v = new MatrixVector();\n                v.a = m.a;\n                v.b = m.b;\n                v.c = m.c;\n                v.d = m.d;\n                v.e = m.e;\n                v.f = m.f;\n                return v;\n            }\n        });\n        function normalVariable(mean, deviation) {\n            var x, y, r;\n            do {\n                x = Math.random() * 2 - 1;\n                y = Math.random() * 2 - 1;\n                r = x * x + y * y;\n            } while (!r || r > 1);\n            return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n        }\n        function randomId(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        }\n        var Geometry = {\n            _distanceToLineSquared: function (p, a, b) {\n                function d2(pt1, pt2) {\n                    return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n                }\n                if (a === b) {\n                    return d2(p, a);\n                }\n                var vx = b.x - a.x, vy = b.y - a.y, dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n                if (dot < 0) {\n                    return d2(a, p);\n                }\n                dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n                if (dot < 0) {\n                    return d2(b, p);\n                }\n                dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n                return dot * dot / (vx * vx + vy * vy);\n            },\n            distanceToLine: function (p, a, b) {\n                return Math.sqrt(this._distanceToLineSquared(p, a, b));\n            },\n            distanceToPolyline: function (p, points) {\n                var minimum = Number.MAX_VALUE;\n                if (Utils.isUndefined(points) || points.length === 0) {\n                    return Number.MAX_VALUE;\n                }\n                for (var s = 0; s < points.length - 1; s++) {\n                    var p1 = points[s];\n                    var p2 = points[s + 1];\n                    var d = this._distanceToLineSquared(p, p1, p2);\n                    if (d < minimum) {\n                        minimum = d;\n                    }\n                }\n                return Math.sqrt(minimum);\n            }\n        };\n        var HashTable = kendo.Class.extend({\n            init: function () {\n                this._buckets = [];\n                this.length = 0;\n            },\n            add: function (key, value) {\n                var obj = this._createGetBucket(key);\n                if (Utils.isDefined(value)) {\n                    obj.value = value;\n                }\n                return obj;\n            },\n            get: function (key) {\n                if (this._bucketExists(key)) {\n                    return this._createGetBucket(key);\n                }\n                return null;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            containsKey: function (key) {\n                return this._bucketExists(key);\n            },\n            remove: function (key) {\n                if (this._bucketExists(key)) {\n                    var hashId = this._hash(key);\n                    delete this._buckets[hashId];\n                    this.length--;\n                    return key;\n                }\n            },\n            forEach: function (func) {\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    func(bucket);\n                }\n            },\n            clone: function () {\n                var ht = new HashTable();\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    ht.add(bucket.key, bucket.value);\n                }\n                return ht;\n            },\n            _hashes: function () {\n                var hashes = [];\n                for (var hash in this._buckets) {\n                    if (this._buckets.hasOwnProperty(hash)) {\n                        hashes.push(hash);\n                    }\n                }\n                return hashes;\n            },\n            _bucketExists: function (key) {\n                var hashId = this._hash(key);\n                return Utils.isDefined(this._buckets[hashId]);\n            },\n            _createGetBucket: function (key) {\n                var hashId = this._hash(key);\n                var bucket = this._buckets[hashId];\n                if (Utils.isUndefined(bucket)) {\n                    bucket = { key: key };\n                    this._buckets[hashId] = bucket;\n                    this.length++;\n                }\n                return bucket;\n            },\n            _hash: function (key) {\n                if (Utils.isNumber(key)) {\n                    return key;\n                }\n                if (Utils.isString(key)) {\n                    return this._hashString(key);\n                }\n                if (Utils.isObject(key)) {\n                    return this._objectHashId(key);\n                }\n                throw 'Unsupported key type.';\n            },\n            _hashString: function (s) {\n                var result = 0;\n                if (s.length === 0) {\n                    return result;\n                }\n                for (var i = 0; i < s.length; i++) {\n                    var ch = s.charCodeAt(i);\n                    result = result * 32 - result + ch;\n                }\n                return result;\n            },\n            _objectHashId: function (key) {\n                var id = key._hashId;\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                    key._hashId = id;\n                }\n                return id;\n            }\n        });\n        var Dictionary = kendo.Observable.extend({\n            init: function (dictionary) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(dictionary)) {\n                    if ($.isArray(dictionary)) {\n                        for (var i = 0; i < dictionary.length; i++) {\n                            this.add(dictionary[i]);\n                        }\n                    } else {\n                        dictionary.forEach(function (k, v) {\n                            this.add(k, v);\n                        }, this);\n                    }\n                }\n            },\n            add: function (key, value) {\n                var entry = this._hashTable.get(key);\n                if (!entry) {\n                    entry = this._hashTable.add(key);\n                    this.length++;\n                    this.trigger('changed');\n                }\n                entry.value = value;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            get: function (key) {\n                var entry = this._hashTable.get(key);\n                if (entry) {\n                    return entry.value;\n                }\n                throw new Error('Cannot find key ' + key);\n            },\n            containsKey: function (key) {\n                return this._hashTable.containsKey(key);\n            },\n            remove: function (key) {\n                if (this.containsKey(key)) {\n                    this.trigger('changed');\n                    this.length--;\n                    return this._hashTable.remove(key);\n                }\n            },\n            forEach: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key, entry.value);\n                });\n            },\n            forEachValue: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.value);\n                });\n            },\n            forEachKey: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key);\n                });\n            },\n            keys: function () {\n                var keys = [];\n                this.forEachKey(function (key) {\n                    keys.push(key);\n                });\n                return keys;\n            }\n        });\n        var Queue = kendo.Class.extend({\n            init: function () {\n                this._tail = null;\n                this._head = null;\n                this.length = 0;\n            },\n            enqueue: function (value) {\n                var entry = {\n                    value: value,\n                    next: null\n                };\n                if (!this._head) {\n                    this._head = entry;\n                    this._tail = this._head;\n                } else {\n                    this._tail.next = entry;\n                    this._tail = this._tail.next;\n                }\n                this.length++;\n            },\n            dequeue: function () {\n                if (this.length < 1) {\n                    throw new Error('The queue is empty.');\n                }\n                var value = this._head.value;\n                this._head = this._head.next;\n                this.length--;\n                return value;\n            },\n            contains: function (item) {\n                var current = this._head;\n                while (current) {\n                    if (current.value === item) {\n                        return true;\n                    }\n                    current = current.next;\n                }\n                return false;\n            }\n        });\n        var Set = kendo.Observable.extend({\n            init: function (resource) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(resource)) {\n                    if (resource instanceof HashTable) {\n                        resource.forEach(function (d) {\n                            this.add(d);\n                        });\n                    } else if (resource instanceof Dictionary) {\n                        resource.forEach(function (k, v) {\n                            this.add({\n                                key: k,\n                                value: v\n                            });\n                        }, this);\n                    }\n                }\n            },\n            contains: function (item) {\n                return this._hashTable.containsKey(item);\n            },\n            add: function (item) {\n                var entry = this._hashTable.get(item);\n                if (!entry) {\n                    this._hashTable.add(item, item);\n                    this.length++;\n                    this.trigger('changed');\n                }\n            },\n            get: function (item) {\n                if (this.contains(item)) {\n                    return this._hashTable.get(item).value;\n                } else {\n                    return null;\n                }\n            },\n            hash: function (item) {\n                return this._hashTable._hash(item);\n            },\n            remove: function (item) {\n                if (this.contains(item)) {\n                    this._hashTable.remove(item);\n                    this.length--;\n                    this.trigger('changed');\n                }\n            },\n            forEach: function (func, context) {\n                this._hashTable.forEach(function (kv) {\n                    func(kv.value);\n                }, context);\n            },\n            toArray: function () {\n                var r = [];\n                this.forEach(function (d) {\n                    r.push(d);\n                });\n                return r;\n            }\n        });\n        var Node = kendo.Class.extend({\n            init: function (id, shape) {\n                this.links = [];\n                this.outgoing = [];\n                this.incoming = [];\n                this.weight = 1;\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(shape)) {\n                    this.associatedShape = shape;\n                    var b = shape.bounds();\n                    this.width = b.width;\n                    this.height = b.height;\n                    this.x = b.x;\n                    this.y = b.y;\n                } else {\n                    this.associatedShape = null;\n                }\n                this.data = null;\n                this.type = 'Node';\n                this.shortForm = 'Node \\'' + this.id + '\\'';\n                this.isVirtual = false;\n            },\n            isIsolated: function () {\n                return Utils.isEmpty(this.links);\n            },\n            bounds: function (r) {\n                if (!Utils.isDefined(r)) {\n                    return new diagram.Rect(this.x, this.y, this.width, this.height);\n                }\n                this.x = r.x;\n                this.y = r.y;\n                this.width = r.width;\n                this.height = r.height;\n            },\n            isLinkedTo: function (node) {\n                var that = this;\n                return Utils.any(that.links, function (link) {\n                    return link.getComplement(that) === node;\n                });\n            },\n            getChildren: function () {\n                if (this.outgoing.length === 0) {\n                    return [];\n                }\n                var children = [];\n                for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                    var link = this.outgoing[i];\n                    children.push(link.getComplement(this));\n                }\n                return children;\n            },\n            getParents: function () {\n                if (this.incoming.length === 0) {\n                    return [];\n                }\n                var parents = [];\n                for (var i = 0, len = this.incoming.length; i < len; i++) {\n                    var link = this.incoming[i];\n                    parents.push(link.getComplement(this));\n                }\n                return parents;\n            },\n            clone: function () {\n                var copy = new Node();\n                if (Utils.isDefined(this.weight)) {\n                    copy.weight = this.weight;\n                }\n                if (Utils.isDefined(this.balance)) {\n                    copy.balance = this.balance;\n                }\n                if (Utils.isDefined(this.owner)) {\n                    copy.owner = this.owner;\n                }\n                copy.associatedShape = this.associatedShape;\n                copy.x = this.x;\n                copy.y = this.y;\n                copy.width = this.width;\n                copy.height = this.height;\n                return copy;\n            },\n            adjacentTo: function (node) {\n                return this.isLinkedTo(node) !== null;\n            },\n            removeLink: function (link) {\n                if (link.source === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.outgoing, link);\n                    link.source = null;\n                }\n                if (link.target === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.incoming, link);\n                    link.target = null;\n                }\n            },\n            hasLinkTo: function (node) {\n                return Utils.any(this.outgoing, function (link) {\n                    return link.target === node;\n                });\n            },\n            degree: function () {\n                return this.links.length;\n            },\n            incidentWith: function (link) {\n                return contains(this.links, link);\n            },\n            getLinksWith: function (node) {\n                return Utils.all(this.links, function (link) {\n                    return link.getComplement(this) === node;\n                }, this);\n            },\n            getNeighbors: function () {\n                var neighbors = [];\n                Utils.forEach(this.incoming, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                Utils.forEach(this.outgoing, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                return neighbors;\n            }\n        });\n        var Link = kendo.Class.extend({\n            init: function (source, target, id, connection) {\n                if (Utils.isUndefined(source)) {\n                    throw 'The source of the new link is not set.';\n                }\n                if (Utils.isUndefined(target)) {\n                    throw 'The target of the new link is not set.';\n                }\n                var sourceFound, targetFound;\n                if (Utils.isString(source)) {\n                    sourceFound = new Node(source);\n                } else {\n                    sourceFound = source;\n                }\n                if (Utils.isString(target)) {\n                    targetFound = new Node(target);\n                } else {\n                    targetFound = target;\n                }\n                this.source = sourceFound;\n                this.target = targetFound;\n                this.source.links.push(this);\n                this.target.links.push(this);\n                this.source.outgoing.push(this);\n                this.target.incoming.push(this);\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(connection)) {\n                    this.associatedConnection = connection;\n                } else {\n                    this.associatedConnection = null;\n                }\n                this.type = 'Link';\n                this.shortForm = 'Link \\'' + this.source.id + '->' + this.target.id + '\\'';\n            },\n            getComplement: function (node) {\n                if (this.source !== node && this.target !== node) {\n                    throw 'The given node is not incident with this link.';\n                }\n                return this.source === node ? this.target : this.source;\n            },\n            getCommonNode: function (link) {\n                if (this.source === link.source || this.source === link.target) {\n                    return this.source;\n                }\n                if (this.target === link.source || this.target === link.target) {\n                    return this.target;\n                }\n                return null;\n            },\n            isBridging: function (v1, v2) {\n                return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n            },\n            getNodes: function () {\n                return [\n                    this.source,\n                    this.target\n                ];\n            },\n            incidentWith: function (node) {\n                return this.source === node || this.target === node;\n            },\n            adjacentTo: function (link) {\n                return contains(this.source.links, link) || contains(this.target.links, link);\n            },\n            changeSource: function (node) {\n                Utils.remove(this.source.links, this);\n                Utils.remove(this.source.outgoing, this);\n                node.links.push(this);\n                node.outgoing.push(this);\n                this.source = node;\n            },\n            changeTarget: function (node) {\n                Utils.remove(this.target.links, this);\n                Utils.remove(this.target.incoming, this);\n                node.links.push(this);\n                node.incoming.push(this);\n                this.target = node;\n            },\n            changesNodes: function (v, w) {\n                if (this.source === v) {\n                    this.changeSource(w);\n                } else if (this.target === v) {\n                    this.changeTarget(w);\n                }\n            },\n            reverse: function () {\n                var oldSource = this.source;\n                var oldTarget = this.target;\n                this.source = oldTarget;\n                Utils.remove(oldSource.outgoing, this);\n                this.source.outgoing.push(this);\n                this.target = oldSource;\n                Utils.remove(oldTarget.incoming, this);\n                this.target.incoming.push(this);\n                return this;\n            },\n            directTo: function (target) {\n                if (this.source !== target && this.target !== target) {\n                    throw 'The given node is not incident with this link.';\n                }\n                if (this.target !== target) {\n                    this.reverse();\n                }\n            },\n            createReverseEdge: function () {\n                var r = this.clone();\n                r.reverse();\n                r.reversed = true;\n                return r;\n            },\n            clone: function () {\n                var clone = new Link(this.source, this.target);\n                return clone;\n            }\n        });\n        var Graph = kendo.Class.extend({\n            init: function (idOrDiagram) {\n                this.links = [];\n                this.nodes = [];\n                this._nodeMap = new Dictionary();\n                this.diagram = null;\n                this._root = null;\n                if (Utils.isDefined(idOrDiagram)) {\n                    if (Utils.isString(idOrDiagram)) {\n                        this.id = idOrDiagram;\n                    } else {\n                        this.diagram = idOrDiagram;\n                        this.id = idOrDiagram.id;\n                    }\n                } else {\n                    this.id = randomId();\n                }\n                this.bounds = new Rect();\n                this._hasCachedRelationships = false;\n                this.type = 'Graph';\n            },\n            cacheRelationships: function (forceRebuild) {\n                if (Utils.isUndefined(forceRebuild)) {\n                    forceRebuild = false;\n                }\n                if (this._hasCachedRelationships && !forceRebuild) {\n                    return;\n                }\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    node.children = this.getChildren(node);\n                    node.parents = this.getParents(node);\n                }\n                this._hasCachedRelationships = true;\n            },\n            assignLevels: function (startNode, offset, visited) {\n                if (!startNode) {\n                    throw 'Start node not specified.';\n                }\n                if (Utils.isUndefined(offset)) {\n                    offset = 0;\n                }\n                this.cacheRelationships();\n                if (Utils.isUndefined(visited)) {\n                    visited = new Dictionary();\n                    Utils.forEach(this.nodes, function (n) {\n                        visited.add(n, false);\n                    });\n                }\n                visited.set(startNode, true);\n                startNode.level = offset;\n                var children = startNode.children;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (!child || visited.get(child)) {\n                        continue;\n                    }\n                    this.assignLevels(child, offset + 1, visited);\n                }\n            },\n            root: function (value) {\n                if (Utils.isUndefined(value)) {\n                    if (!this._root) {\n                        var found = Utils.first(this.nodes, function (n) {\n                            return n.incoming.length === 0;\n                        });\n                        if (found) {\n                            return found;\n                        }\n                        return Utils.first(this.nodes);\n                    } else {\n                        return this._root;\n                    }\n                } else {\n                    this._root = value;\n                }\n            },\n            getConnectedComponents: function () {\n                this.componentIndex = 0;\n                this.setItemIndices();\n                var componentId = Utils.initArray(this.nodes.length, -1);\n                for (var v = 0; v < this.nodes.length; v++) {\n                    if (componentId[v] === -1) {\n                        this._collectConnectedNodes(componentId, v);\n                        this.componentIndex++;\n                    }\n                }\n                var components = [], i;\n                for (i = 0; i < this.componentIndex; ++i) {\n                    components[i] = new Graph();\n                }\n                for (i = 0; i < componentId.length; ++i) {\n                    var graph = components[componentId[i]];\n                    graph.addNodeAndOutgoings(this.nodes[i]);\n                }\n                components.sort(function (a, b) {\n                    return b.nodes.length - a.nodes.length;\n                });\n                return components;\n            },\n            _collectConnectedNodes: function (setIds, nodeIndex) {\n                setIds[nodeIndex] = this.componentIndex;\n                var node = this.nodes[nodeIndex];\n                Utils.forEach(node.links, function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n            },\n            calcBounds: function () {\n                if (this.isEmpty()) {\n                    this.bounds = new Rect();\n                    return this.bounds;\n                }\n                var b = null;\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (!b) {\n                        b = node.bounds();\n                    } else {\n                        b = b.union(node.bounds());\n                    }\n                }\n                this.bounds = b;\n                return this.bounds;\n            },\n            getSpanningTree: function (root) {\n                var tree = new Graph();\n                var map = new Dictionary(), source, target;\n                tree.root = root.clone();\n                tree.root.level = 0;\n                tree.root.id = root.id;\n                map.add(root, tree.root);\n                root.level = 0;\n                var visited = [];\n                var remaining = [];\n                tree._addNode(tree.root);\n                visited.push(root);\n                remaining.push(root);\n                var levelCount = 1;\n                while (remaining.length > 0) {\n                    var next = remaining.pop();\n                    for (var ni = 0; ni < next.links.length; ni++) {\n                        var link = next.links[ni];\n                        var cn = link.getComplement(next);\n                        if (contains(visited, cn)) {\n                            continue;\n                        }\n                        cn.level = next.level + 1;\n                        if (levelCount < cn.level + 1) {\n                            levelCount = cn.level + 1;\n                        }\n                        if (!contains(remaining, cn)) {\n                            remaining.push(cn);\n                        }\n                        if (!contains(visited, cn)) {\n                            visited.push(cn);\n                        }\n                        if (map.containsKey(next)) {\n                            source = map.get(next);\n                        } else {\n                            source = next.clone();\n                            source.level = next.level;\n                            source.id = next.id;\n                            map.add(next, source);\n                        }\n                        if (map.containsKey(cn)) {\n                            target = map.get(cn);\n                        } else {\n                            target = cn.clone();\n                            target.level = cn.level;\n                            target.id = cn.id;\n                            map.add(cn, target);\n                        }\n                        var newLink = new Link(source, target);\n                        tree.addLink(newLink);\n                    }\n                }\n                var treeLevels = [];\n                for (var i = 0; i < levelCount; i++) {\n                    treeLevels.push([]);\n                }\n                Utils.forEach(tree.nodes, function (node) {\n                    treeLevels[node.level].push(node);\n                });\n                tree.treeLevels = treeLevels;\n                tree.cacheRelationships();\n                return tree;\n            },\n            takeRandomNode: function (excludedNodes, incidenceLessThan) {\n                if (Utils.isUndefined(excludedNodes)) {\n                    excludedNodes = [];\n                }\n                if (Utils.isUndefined(incidenceLessThan)) {\n                    incidenceLessThan = 4;\n                }\n                if (this.nodes.length === 0) {\n                    return null;\n                }\n                if (this.nodes.length === 1) {\n                    return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n                }\n                var pool = $.grep(this.nodes, function (node) {\n                    return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n                });\n                if (Utils.isEmpty(pool)) {\n                    return null;\n                }\n                return pool[Utils.randomInteger(0, pool.length)];\n            },\n            isEmpty: function () {\n                return Utils.isEmpty(this.nodes);\n            },\n            isHealthy: function () {\n                return Utils.all(this.links, function (link) {\n                    return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n                }, this);\n            },\n            getParents: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getParents();\n            },\n            getChildren: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getChildren();\n            },\n            addLink: function (sourceOrLink, target, owner) {\n                if (Utils.isUndefined(sourceOrLink)) {\n                    throw 'The source of the link is not defined.';\n                }\n                if (Utils.isUndefined(target)) {\n                    if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === 'Link') {\n                        this.addExistingLink(sourceOrLink);\n                        return;\n                    } else {\n                        throw 'The target of the link is not defined.';\n                    }\n                }\n                var foundSource = this.getNode(sourceOrLink);\n                if (Utils.isUndefined(foundSource)) {\n                    foundSource = this.addNode(sourceOrLink);\n                }\n                var foundTarget = this.getNode(target);\n                if (Utils.isUndefined(foundTarget)) {\n                    foundTarget = this.addNode(target);\n                }\n                var newLink = new Link(foundSource, foundTarget);\n                if (Utils.isDefined(owner)) {\n                    newLink.owner = owner;\n                }\n                this.links.push(newLink);\n                return newLink;\n            },\n            removeAllLinks: function () {\n                while (this.links.length > 0) {\n                    var link = this.links[0];\n                    this.removeLink(link);\n                }\n            },\n            addExistingLink: function (link) {\n                if (this.hasLink(link)) {\n                    return;\n                }\n                this.links.push(link);\n                if (this.hasNode(link.source.id)) {\n                    var s = this.getNode(link.source.id);\n                    link.changeSource(s);\n                } else {\n                    this.addNode(link.source);\n                }\n                if (this.hasNode(link.target.id)) {\n                    var t = this.getNode(link.target.id);\n                    link.changeTarget(t);\n                } else {\n                    this.addNode(link.target);\n                }\n            },\n            hasLink: function (linkOrId) {\n                if (Utils.isString(linkOrId)) {\n                    return Utils.any(this.links, function (link) {\n                        return link.id === linkOrId;\n                    });\n                }\n                if (linkOrId.type === 'Link') {\n                    return contains(this.links, linkOrId);\n                }\n                throw 'The given object is neither an identifier nor a Link.';\n            },\n            getNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                if (this._nodeMap.containsKey(id)) {\n                    return this._nodeMap.get(id);\n                }\n            },\n            hasNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                return this._nodeMap.containsKey(id);\n            },\n            _addNode: function (node) {\n                this.nodes.push(node);\n                this._nodeMap.add(node.id, node);\n            },\n            _removeNode: function (node) {\n                Utils.remove(this.nodes, node);\n                this._nodeMap.remove(node.id);\n            },\n            removeNode: function (nodeOrId) {\n                var n = nodeOrId;\n                if (Utils.isString(nodeOrId)) {\n                    n = this.getNode(nodeOrId);\n                }\n                if (Utils.isDefined(n)) {\n                    var links = n.links;\n                    n.links = [];\n                    for (var i = 0, len = links.length; i < len; i++) {\n                        var link = links[i];\n                        this.removeLink(link);\n                    }\n                    this._removeNode(n);\n                } else {\n                    throw 'The identifier should be a Node or the Id (string) of a node.';\n                }\n            },\n            areConnected: function (n1, n2) {\n                return Utils.any(this.links, function (link) {\n                    return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n                });\n            },\n            removeLink: function (link) {\n                Utils.remove(this.links, link);\n                Utils.remove(link.source.outgoing, link);\n                Utils.remove(link.source.links, link);\n                Utils.remove(link.target.incoming, link);\n                Utils.remove(link.target.links, link);\n            },\n            addNode: function (nodeOrId, layoutRect, owner) {\n                var newNode = null;\n                if (!Utils.isDefined(nodeOrId)) {\n                    throw 'No Node or identifier for a new Node is given.';\n                }\n                if (Utils.isString(nodeOrId)) {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = new Node(nodeOrId);\n                } else {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = nodeOrId;\n                }\n                if (Utils.isDefined(layoutRect)) {\n                    newNode.bounds(layoutRect);\n                }\n                if (Utils.isDefined(owner)) {\n                    newNode.owner = owner;\n                }\n                this._addNode(newNode);\n                return newNode;\n            },\n            addNodeAndOutgoings: function (node) {\n                if (!this.hasNode(node)) {\n                    this._addNode(node);\n                }\n                var newLinks = node.outgoing;\n                node.outgoing = [];\n                Utils.forEach(newLinks, function (link) {\n                    this.addExistingLink(link);\n                }, this);\n            },\n            setItemIndices: function () {\n                var i;\n                for (i = 0; i < this.nodes.length; ++i) {\n                    this.nodes[i].index = i;\n                }\n                for (i = 0; i < this.links.length; ++i) {\n                    this.links[i].index = i;\n                }\n            },\n            clone: function (saveMapping) {\n                var copy = new Graph();\n                var save = Utils.isDefined(saveMapping) && saveMapping === true;\n                if (save) {\n                    copy.nodeMap = new Dictionary();\n                    copy.linkMap = new Dictionary();\n                }\n                var map = new Dictionary();\n                Utils.forEach(this.nodes, function (nOriginal) {\n                    var nCopy = nOriginal.clone();\n                    map.set(nOriginal, nCopy);\n                    copy._addNode(nCopy);\n                    if (save) {\n                        copy.nodeMap.set(nCopy, nOriginal);\n                    }\n                });\n                Utils.forEach(this.links, function (linkOriginal) {\n                    if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                        var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                        if (save) {\n                            copy.linkMap.set(linkCopy, linkOriginal);\n                        }\n                    }\n                });\n                return copy;\n            },\n            linearize: function (addIds) {\n                return Graph.Utils.linearize(this, addIds);\n            },\n            depthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var visited = [];\n                this._dftIterator(foundNode, action, visited);\n            },\n            _dftIterator: function (node, action, visited) {\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child)) {\n                        continue;\n                    }\n                    this._dftIterator(child, action, visited);\n                }\n            },\n            breadthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var queue = new Queue();\n                var visited = [];\n                queue.enqueue(foundNode);\n                while (queue.length > 0) {\n                    var node = queue.dequeue();\n                    action(node);\n                    visited.push(node);\n                    var children = node.getChildren();\n                    for (var i = 0, len = children.length; i < len; i++) {\n                        var child = children[i];\n                        if (contains(visited, child) || contains(queue, child)) {\n                            continue;\n                        }\n                        queue.enqueue(child);\n                    }\n                }\n            },\n            _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n                indices.add(node, index);\n                lowLinks.add(node, index);\n                index++;\n                stack.push(node);\n                var children = node.getChildren(), next;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    next = children[i];\n                    if (!indices.containsKey(next)) {\n                        this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                        lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                    } else if (contains(stack, next)) {\n                        lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                    }\n                }\n                if (lowLinks.get(node) === indices.get(node)) {\n                    var component = [];\n                    do {\n                        next = stack.pop();\n                        component.push(next);\n                    } while (next !== node);\n                    if (!excludeSingleItems || component.length > 1) {\n                        connected.push(component);\n                    }\n                }\n            },\n            findCycles: function (excludeSingleItems) {\n                if (Utils.isUndefined(excludeSingleItems)) {\n                    excludeSingleItems = true;\n                }\n                var indices = new Dictionary();\n                var lowLinks = new Dictionary();\n                var connected = [];\n                var stack = [];\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (indices.containsKey(node)) {\n                        continue;\n                    }\n                    this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n                }\n                return connected;\n            },\n            isAcyclic: function () {\n                return Utils.isEmpty(this.findCycles());\n            },\n            isSubGraph: function (other) {\n                var otherArray = other.linearize();\n                var thisArray = this.linearize();\n                return Utils.all(otherArray, function (s) {\n                    return contains(thisArray, s);\n                });\n            },\n            makeAcyclic: function () {\n                if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                    return [];\n                }\n                if (this.nodes.length == 2) {\n                    var result = [];\n                    if (this.links.length > 1) {\n                        var oneLink = this.links[0];\n                        var oneNode = oneLink.source;\n                        for (var i = 0, len = this.links.length; i < len; i++) {\n                            var link = this.links[i];\n                            if (link.source == oneNode) {\n                                continue;\n                            }\n                            var rev = link.reverse();\n                            result.push(rev);\n                        }\n                    }\n                    return result;\n                }\n                var copy = this.clone(true);\n                var N = this.nodes.length;\n                var intensityCatalog = new Dictionary();\n                var flowIntensity = function (node) {\n                    if (node.outgoing.length === 0) {\n                        return 2 - N;\n                    } else if (node.incoming.length === 0) {\n                        return N - 2;\n                    } else {\n                        return node.outgoing.length - node.incoming.length;\n                    }\n                };\n                var catalogEqualIntensity = function (node, intensityCatalog) {\n                    var intensity = flowIntensity(node, N);\n                    if (!intensityCatalog.containsKey(intensity)) {\n                        intensityCatalog.set(intensity, []);\n                    }\n                    intensityCatalog.get(intensity).push(node);\n                };\n                Utils.forEach(copy.nodes, function (v) {\n                    catalogEqualIntensity(v, intensityCatalog);\n                });\n                var sourceStack = [];\n                var targetStack = [];\n                while (copy.nodes.length > 0) {\n                    var source, target, intensity;\n                    if (intensityCatalog.containsKey(2 - N)) {\n                        var targets = intensityCatalog.get(2 - N);\n                        while (targets.length > 0) {\n                            target = targets.pop();\n                            for (var li = 0; li < target.links.length; li++) {\n                                var targetLink = target.links[li];\n                                source = targetLink.getComplement(target);\n                                intensity = flowIntensity(source, N);\n                                Utils.remove(intensityCatalog.get(intensity), source);\n                                source.removeLink(targetLink);\n                                catalogEqualIntensity(source, intensityCatalog);\n                            }\n                            copy._removeNode(target);\n                            targetStack.unshift(target);\n                        }\n                    }\n                    if (intensityCatalog.containsKey(N - 2)) {\n                        var sources = intensityCatalog.get(N - 2);\n                        while (sources.length > 0) {\n                            source = sources.pop();\n                            for (var si = 0; si < source.links.length; si++) {\n                                var sourceLink = source.links[si];\n                                target = sourceLink.getComplement(source);\n                                intensity = flowIntensity(target, N);\n                                Utils.remove(intensityCatalog.get(intensity), target);\n                                target.removeLink(sourceLink);\n                                catalogEqualIntensity(target, intensityCatalog);\n                            }\n                            sourceStack.push(source);\n                            copy._removeNode(source);\n                        }\n                    }\n                    if (copy.nodes.length > 0) {\n                        for (var k = N - 3; k > 2 - N; k--) {\n                            if (intensityCatalog.containsKey(k) && intensityCatalog.get(k).length > 0) {\n                                var maxdiff = intensityCatalog.get(k);\n                                var v = maxdiff.pop();\n                                for (var ri = 0; ri < v.links.length; ri++) {\n                                    var ril = v.links[ri];\n                                    var u = ril.getComplement(v);\n                                    intensity = flowIntensity(u, N);\n                                    Utils.remove(intensityCatalog.get(intensity), u);\n                                    u.removeLink(ril);\n                                    catalogEqualIntensity(u, intensityCatalog);\n                                }\n                                sourceStack.push(v);\n                                copy._removeNode(v);\n                                break;\n                            }\n                        }\n                    }\n                }\n                sourceStack = sourceStack.concat(targetStack);\n                var vertexOrder = new Dictionary();\n                for (var kk = 0; kk < this.nodes.length; kk++) {\n                    vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n                }\n                var reversedEdges = [];\n                Utils.forEach(this.links, function (link) {\n                    if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                        link.reverse();\n                        reversedEdges.push(link);\n                    }\n                });\n                return reversedEdges;\n            }\n        });\n        Graph.Predefined = {\n            EightGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->4',\n                    '4->1',\n                    '3->5',\n                    '5->6',\n                    '6->7',\n                    '7->3'\n                ]);\n            },\n            Mindmap: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '0->2',\n                    '0->3',\n                    '0->4',\n                    '0->5',\n                    '1->6',\n                    '1->7',\n                    '7->8',\n                    '2->9',\n                    '9->10',\n                    '9->11',\n                    '3->12',\n                    '12->13',\n                    '13->14',\n                    '4->15',\n                    '4->16',\n                    '15->17',\n                    '15->18',\n                    '18->19',\n                    '18->20',\n                    '14->21',\n                    '14->22',\n                    '5->23',\n                    '23->24',\n                    '23->25',\n                    '6->26'\n                ]);\n            },\n            ThreeGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->1'\n                ]);\n            },\n            BinaryTree: function (levels) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 5;\n                }\n                return Graph.Utils.createBalancedTree(levels, 2);\n            },\n            Linear: function (length) {\n                if (Utils.isUndefined(length)) {\n                    length = 10;\n                }\n                return Graph.Utils.createBalancedTree(length, 1);\n            },\n            Tree: function (levels, siblingsCount) {\n                return Graph.Utils.createBalancedTree(levels, siblingsCount);\n            },\n            Forest: function (levels, siblingsCount, trees) {\n                return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n            },\n            Workflow: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '1->2',\n                    '2->3',\n                    '1->4',\n                    '4->3',\n                    '3->5',\n                    '5->6',\n                    '6->3',\n                    '6->7',\n                    '5->4'\n                ]);\n            },\n            Grid: function (n, m) {\n                var g = new diagram.Graph();\n                if (n <= 0 && m <= 0) {\n                    return g;\n                }\n                for (var i = 0; i < n + 1; i++) {\n                    var previous = null;\n                    for (var j = 0; j < m + 1; j++) {\n                        var node = new Node(i.toString() + '.' + j.toString());\n                        g.addNode(node);\n                        if (previous) {\n                            g.addLink(previous, node);\n                        }\n                        if (i > 0) {\n                            var left = g.getNode((i - 1).toString() + '.' + j.toString());\n                            g.addLink(left, node);\n                        }\n                        previous = node;\n                    }\n                }\n                return g;\n            }\n        };\n        Graph.Utils = {\n            parse: function (graphString) {\n                var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n                for (var i = 0, len = parts.length; i < len; i++) {\n                    var part = parts[i];\n                    if (Utils.isString(part)) {\n                        if (part.indexOf('->') < 0) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        var p = part.split('->');\n                        if (p.length != 2) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        previousLink = new Link(p[0], p[1]);\n                        graph.addLink(previousLink);\n                    }\n                    if (Utils.isObject(part)) {\n                        if (!previousLink) {\n                            throw 'Specification found before Link definition.';\n                        }\n                        kendo.deepExtend(previousLink, part);\n                    }\n                }\n                return graph;\n            },\n            linearize: function (graph, addIds) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'Expected an instance of a Graph object in slot one.';\n                }\n                if (Utils.isUndefined(addIds)) {\n                    addIds = false;\n                }\n                var lin = [];\n                for (var i = 0, len = graph.links.length; i < len; i++) {\n                    var link = graph.links[i];\n                    lin.push(link.source.id + '->' + link.target.id);\n                    if (addIds) {\n                        lin.push({ id: link.id });\n                    }\n                }\n                return lin;\n            },\n            _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n                if (Utils.isUndefined(p)) {\n                    p = new diagram.Point(0, 0);\n                }\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                }\n                shapeDefaults = kendo.deepExtend({\n                    width: 20,\n                    height: 20,\n                    id: id,\n                    radius: 10,\n                    fill: '#778899',\n                    data: 'circle',\n                    undoable: false,\n                    x: p.x,\n                    y: p.y\n                }, shapeDefaults);\n                return kendoDiagram.addShape(shapeDefaults);\n            },\n            _addConnection: function (diagram, from, to, options) {\n                return diagram.connect(from, to, options);\n            },\n            createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'The diagram surface is undefined.';\n                }\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph specification defined.';\n                }\n                if (Utils.isUndefined(doLayout)) {\n                    doLayout = true;\n                }\n                if (Utils.isUndefined(randomSize)) {\n                    randomSize = false;\n                }\n                var width = diagram.element.clientWidth || 200;\n                var height = diagram.element.clientHeight || 200;\n                var map = [], node, shape;\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    node = graph.nodes[i];\n                    var p = node.position;\n                    if (Utils.isUndefined(p)) {\n                        if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                            p = new Point(node.x, node.y);\n                        } else {\n                            p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                        }\n                    }\n                    var opt = {};\n                    if (node.id === '0') {\n                    } else if (randomSize) {\n                        kendo.deepExtend(opt, {\n                            width: Math.random() * 150 + 20,\n                            height: Math.random() * 80 + 50,\n                            data: 'rectangle',\n                            fill: { color: '#778899' }\n                        });\n                    }\n                    shape = this._addShape(diagram, p, node.id, opt);\n                    var bounds = shape.bounds();\n                    if (Utils.isDefined(bounds)) {\n                        node.x = bounds.x;\n                        node.y = bounds.y;\n                        node.width = bounds.width;\n                        node.height = bounds.height;\n                    }\n                    map[node.id] = shape;\n                }\n                for (var gli = 0; gli < graph.links.length; gli++) {\n                    var link = graph.links[gli];\n                    var sourceShape = map[link.source.id];\n                    if (Utils.isUndefined(sourceShape)) {\n                        continue;\n                    }\n                    var targetShape = map[link.target.id];\n                    if (Utils.isUndefined(targetShape)) {\n                        continue;\n                    }\n                    this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n                }\n                if (doLayout) {\n                    var l = new diagram.SpringLayout(diagram);\n                    l.layoutGraph(graph, { limitToView: false });\n                    for (var shi = 0; shi < graph.nodes.length; shi++) {\n                        node = graph.nodes[shi];\n                        shape = map[node.id];\n                        shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            },\n            createBalancedTree: function (levels, siblingsCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                g.root = root;\n                lastAdded.push(root);\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n                return g;\n            },\n            createBalancedForest: function (levels, siblingsCount, treeCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                if (Utils.isUndefined(treeCount)) {\n                    treeCount = 5;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                    return g;\n                }\n                for (var t = 0; t < treeCount; t++) {\n                    var root = new Node((++counter).toString());\n                    g.addNode(root);\n                    lastAdded = [root];\n                    for (var i = 0; i < levels; i++) {\n                        news = [];\n                        for (var j = 0; j < lastAdded.length; j++) {\n                            var parent = lastAdded[j];\n                            for (var k = 0; k < siblingsCount; k++) {\n                                var item = new Node((++counter).toString());\n                                g.addLink(parent, item);\n                                news.push(item);\n                            }\n                        }\n                        lastAdded = news;\n                    }\n                }\n                return g;\n            },\n            createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n                if (Utils.isUndefined(nodeCount)) {\n                    nodeCount = 40;\n                }\n                if (Utils.isUndefined(maxIncidence)) {\n                    maxIncidence = 4;\n                }\n                if (Utils.isUndefined(isTree)) {\n                    isTree = false;\n                }\n                var g = new diagram.Graph(), counter = -1;\n                if (nodeCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                if (nodeCount === 1) {\n                    return g;\n                }\n                if (nodeCount > 1) {\n                    for (var i = 1; i < nodeCount; i++) {\n                        var poolNode = g.takeRandomNode([], maxIncidence);\n                        if (!poolNode) {\n                            break;\n                        }\n                        var newNode = g.addNode(i.toString());\n                        g.addLink(poolNode, newNode);\n                    }\n                    if (!isTree && nodeCount > 1) {\n                        var randomAdditions = Utils.randomInteger(1, nodeCount);\n                        for (var ri = 0; ri < randomAdditions; ri++) {\n                            var n1 = g.takeRandomNode([], maxIncidence);\n                            var n2 = g.takeRandomNode([], maxIncidence);\n                            if (n1 && n2 && !g.areConnected(n1, n2)) {\n                                g.addLink(n1, n2);\n                            }\n                        }\n                    }\n                    return g;\n                }\n            },\n            randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n                var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n                Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n            }\n        };\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Point: Point,\n            Intersect: Intersect,\n            Geometry: Geometry,\n            Rect: Rect,\n            Size: Size,\n            RectAlign: RectAlign,\n            Matrix: Matrix,\n            MatrixVector: MatrixVector,\n            normalVariable: normalVariable,\n            randomId: randomId,\n            Dictionary: Dictionary,\n            HashTable: HashTable,\n            Queue: Queue,\n            Set: Set,\n            Node: Node,\n            Link: Link,\n            Graph: Graph,\n            PathDefiner: PathDefiner\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/svg', [\n        'kendo.drawing',\n        'dataviz/diagram/math'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, Point = diagram.Point, Rect = diagram.Rect, Matrix = diagram.Matrix, Utils = diagram.Utils, isNumber = Utils.isNumber, isString = Utils.isString, MatrixVector = diagram.MatrixVector, g = kendo.geometry, d = kendo.drawing, defined = kendo.util.defined, inArray = $.inArray;\n        var TRANSPARENT = 'transparent', Markers = {\n                none: 'none',\n                arrowStart: 'ArrowStart',\n                filledCircle: 'FilledCircle',\n                arrowEnd: 'ArrowEnd'\n            }, FULL_CIRCLE_ANGLE = 360, START = 'start', END = 'end', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y';\n        diagram.Markers = Markers;\n        function diffNumericOptions(options, fields) {\n            var elementOptions = this.options;\n            var hasChanges = false;\n            var value, field;\n            for (var i = 0; i < fields.length; i++) {\n                field = fields[i];\n                value = options[field];\n                if (isNumber(value) && elementOptions[field] !== value) {\n                    elementOptions[field] = value;\n                    hasChanges = true;\n                }\n            }\n            return hasChanges;\n        }\n        var Scale = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrix: function () {\n                return Matrix.scaling(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('scale({0},{1})', this.x, this.y);\n            },\n            invert: function () {\n                return new Scale(1 / this.x, 1 / this.y);\n            }\n        });\n        var Translation = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrixVector: function () {\n                return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n            },\n            toMatrix: function () {\n                return Matrix.translation(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('translate({0},{1})', this.x, this.y);\n            },\n            plus: function (delta) {\n                this.x += delta.x;\n                this.y += delta.y;\n            },\n            times: function (factor) {\n                this.x *= factor;\n                this.y *= factor;\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            normalize: function () {\n                if (this.Length === 0) {\n                    return;\n                }\n                this.times(1 / this.length());\n            },\n            invert: function () {\n                return new Translation(-this.x, -this.y);\n            }\n        });\n        var Rotation = Class.extend({\n            init: function (angle, x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.angle = angle;\n            },\n            toString: function () {\n                if (this.x && this.y) {\n                    return kendo.format('rotate({0},{1},{2})', this.angle, this.x, this.y);\n                } else {\n                    return kendo.format('rotate({0})', this.angle);\n                }\n            },\n            toMatrix: function () {\n                return Matrix.rotation(this.angle, this.x, this.y);\n            },\n            center: function () {\n                return new Point(this.x, this.y);\n            },\n            invert: function () {\n                return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n            }\n        });\n        Rotation.ZERO = new Rotation(0);\n        Rotation.create = function (rotation) {\n            return new Rotation(rotation.angle, rotation.x, rotation.y);\n        };\n        Rotation.parse = function (str) {\n            var values = str.slice(1, str.length - 1).split(','), angle = values[0], x = values[1], y = values[2];\n            var rotation = new Rotation(angle, x, y);\n            return rotation;\n        };\n        var CompositeTransform = Class.extend({\n            init: function (x, y, scaleX, scaleY, angle, center) {\n                this.translate = new Translation(x, y);\n                if (scaleX !== undefined && scaleY !== undefined) {\n                    this.scale = new Scale(scaleX, scaleY);\n                }\n                if (angle !== undefined) {\n                    this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n                }\n            },\n            toString: function () {\n                var toString = function (transform) {\n                    return transform ? transform.toString() : '';\n                };\n                return toString(this.translate) + toString(this.rotate) + toString(this.scale);\n            },\n            render: function (visual) {\n                visual._transform = this;\n                visual._renderTransform();\n            },\n            toMatrix: function () {\n                var m = Matrix.unit();\n                if (this.translate) {\n                    m = m.times(this.translate.toMatrix());\n                }\n                if (this.rotate) {\n                    m = m.times(this.rotate.toMatrix());\n                }\n                if (this.scale) {\n                    m = m.times(this.scale.toMatrix());\n                }\n                return m;\n            },\n            invert: function () {\n                var rotate = this.rotate ? this.rotate.invert() : undefined, rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(), scale = this.scale ? this.scale.invert() : undefined, scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n                var translatePoint = new Point(-this.translate.x, -this.translate.y);\n                translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n                var translate = new Translation(translatePoint.x, translatePoint.y);\n                var transform = new CompositeTransform();\n                transform.translate = translate;\n                transform.rotate = rotate;\n                transform.scale = scale;\n                return transform;\n            }\n        });\n        var AutoSizeableMixin = {\n            _setScale: function () {\n                var options = this.options;\n                var originWidth = this._originWidth;\n                var originHeight = this._originHeight;\n                var scaleX = options.width / originWidth;\n                var scaleY = options.height / originHeight;\n                if (!isNumber(scaleX)) {\n                    scaleX = 1;\n                }\n                if (!isNumber(scaleY)) {\n                    scaleY = 1;\n                }\n                this._transform.scale = new Scale(scaleX, scaleY);\n            },\n            _setTranslate: function () {\n                var options = this.options;\n                var x = options.x || 0;\n                var y = options.y || 0;\n                this._transform.translate = new Translation(x, y);\n            },\n            _initSize: function () {\n                var options = this.options;\n                var transform = false;\n                if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                    this._measure(true);\n                    this._setScale();\n                    transform = true;\n                }\n                if (defined(options.x) || defined(options.y)) {\n                    this._setTranslate();\n                    transform = true;\n                }\n                if (transform) {\n                    this._renderTransform();\n                }\n            },\n            _updateSize: function (options) {\n                var update = false;\n                if (this.options.autoSize !== false && this._diffNumericOptions(options, [\n                        WIDTH,\n                        HEIGHT\n                    ])) {\n                    update = true;\n                    this._measure(true);\n                    this._setScale();\n                }\n                if (this._diffNumericOptions(options, [\n                        X,\n                        Y\n                    ])) {\n                    update = true;\n                    this._setTranslate();\n                }\n                if (update) {\n                    this._renderTransform();\n                }\n                return update;\n            }\n        };\n        var Element = Class.extend({\n            init: function (options) {\n                var element = this;\n                element.options = deepExtend({}, element.options, options);\n                element.id = element.options.id;\n                element._originSize = Rect.empty();\n                element._transform = new CompositeTransform();\n            },\n            visible: function (value) {\n                return this.drawingContainer().visible(value);\n            },\n            redraw: function (options) {\n                if (options && options.id) {\n                    this.id = options.id;\n                }\n            },\n            position: function (x, y) {\n                var options = this.options;\n                if (!defined(x)) {\n                    return new Point(options.x, options.y);\n                }\n                if (defined(y)) {\n                    options.x = x;\n                    options.y = y;\n                } else if (x instanceof Point) {\n                    options.x = x.x;\n                    options.y = x.y;\n                }\n                this._transform.translate = new Translation(options.x, options.y);\n                this._renderTransform();\n            },\n            rotate: function (angle, center) {\n                if (defined(angle)) {\n                    this._transform.rotate = new Rotation(angle, center.x, center.y);\n                    this._renderTransform();\n                }\n                return this._transform.rotate || Rotation.ZERO;\n            },\n            drawingContainer: function () {\n                return this.drawingElement;\n            },\n            _renderTransform: function () {\n                var matrix = this._transform.toMatrix();\n                this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n            },\n            _hover: function () {\n            },\n            _diffNumericOptions: diffNumericOptions,\n            _measure: function (force) {\n                var rect;\n                if (!this._measured || force) {\n                    var box = this._boundingBox() || new g.Rect();\n                    var startPoint = box.topLeft();\n                    rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                    this._originSize = rect;\n                    this._originWidth = rect.width;\n                    this._originHeight = rect.height;\n                    this._measured = true;\n                } else {\n                    rect = this._originSize;\n                }\n                return rect;\n            },\n            _boundingBox: function () {\n                return this.drawingElement.rawBBox();\n            }\n        });\n        var VisualBase = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                options = this.options;\n                options.fill = normalizeDrawingOptions(options.fill);\n                options.stroke = normalizeDrawingOptions(options.stroke);\n            },\n            options: {\n                stroke: {\n                    color: 'gray',\n                    width: 1\n                },\n                fill: { color: TRANSPARENT }\n            },\n            fill: function (color, opacity) {\n                this._fill({\n                    color: getColor(color),\n                    opacity: opacity\n                });\n            },\n            stroke: function (color, width, opacity) {\n                this._stroke({\n                    color: getColor(color),\n                    width: width,\n                    opacity: opacity\n                });\n            },\n            redraw: function (options) {\n                if (options) {\n                    var stroke = options.stroke;\n                    var fill = options.fill;\n                    if (stroke) {\n                        this._stroke(normalizeDrawingOptions(stroke));\n                    }\n                    if (fill) {\n                        this._fill(normalizeDrawingOptions(fill));\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _hover: function (show) {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var hover = options.hover;\n                if (hover && hover.fill) {\n                    var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                    drawingElement.fill(fill.color, fill.opacity);\n                }\n            },\n            _stroke: function (strokeOptions) {\n                var options = this.options;\n                deepExtend(options, { stroke: strokeOptions });\n                strokeOptions = options.stroke;\n                var stroke = null;\n                if (strokeOptions.width > 0) {\n                    stroke = {\n                        color: strokeOptions.color,\n                        width: strokeOptions.width,\n                        opacity: strokeOptions.opacity,\n                        dashType: strokeOptions.dashType\n                    };\n                }\n                this.drawingElement.options.set('stroke', stroke);\n            },\n            _fill: function (fillOptions) {\n                var options = this.options;\n                deepExtend(options, { fill: fillOptions || {} });\n                var fill = options.fill;\n                if (fill.gradient) {\n                    var gradient = fill.gradient;\n                    var GradientClass = gradient.type === 'radial' ? d.RadialGradient : d.LinearGradient;\n                    this.drawingElement.fill(new GradientClass(gradient));\n                } else {\n                    this.drawingElement.fill(fill.color, fill.opacity);\n                }\n            }\n        });\n        var TextBlock = VisualBase.extend({\n            init: function (options) {\n                this._textColor(options);\n                VisualBase.fn.init.call(this, options);\n                this._font();\n                this._initText();\n                this._initSize();\n            },\n            options: {\n                fontSize: 15,\n                fontFamily: 'sans-serif',\n                stroke: { width: 0 },\n                fill: { color: 'black' },\n                autoSize: true\n            },\n            _initText: function () {\n                var options = this.options;\n                this.drawingElement = new d.Text(defined(options.text) ? options.text : '', new g.Point(), { font: options.font });\n                this._fill();\n                this._stroke();\n            },\n            _textColor: function (options) {\n                if (options && options.color) {\n                    deepExtend(options, { fill: { color: options.color } });\n                }\n            },\n            _font: function () {\n                var options = this.options;\n                if (options.fontFamily && defined(options.fontSize)) {\n                    options.font = options.fontSize + 'px ' + options.fontFamily;\n                } else {\n                    delete options.font;\n                }\n            },\n            content: function (text) {\n                return this.drawingElement.content(text);\n            },\n            redraw: function (options) {\n                if (options) {\n                    var sizeChanged = false;\n                    var textOptions = this.options;\n                    this._textColor(options);\n                    VisualBase.fn.redraw.call(this, options);\n                    if (options.fontFamily || defined(options.fontSize)) {\n                        deepExtend(textOptions, {\n                            fontFamily: options.fontFamily,\n                            fontSize: options.fontSize\n                        });\n                        this._font();\n                        this.drawingElement.options.set('font', textOptions.font);\n                        sizeChanged = true;\n                    }\n                    if (options.text) {\n                        this.content(options.text);\n                        sizeChanged = true;\n                    }\n                    if (!this._updateSize(options) && sizeChanged) {\n                        this._initSize();\n                    }\n                }\n            }\n        });\n        deepExtend(TextBlock.fn, AutoSizeableMixin);\n        var Rectangle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initPath();\n                this._setPosition();\n            },\n            _setPosition: function () {\n                var options = this.options;\n                var x = options.x;\n                var y = options.y;\n                if (defined(x) || defined(y)) {\n                    this.position(x || 0, y || 0);\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT\n                        ])) {\n                        this._drawPath();\n                    }\n                    if (this._diffNumericOptions(options, [\n                            X,\n                            Y\n                        ])) {\n                        this._setPosition();\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({\n                    stroke: options.stroke,\n                    closed: true\n                });\n                this._fill();\n                this._drawPath();\n            },\n            _drawPath: function () {\n                var drawingElement = this.drawingElement;\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var width = sizeOptions.width;\n                var height = sizeOptions.height;\n                drawingElement.segments.elements([\n                    createSegment(0, 0),\n                    createSegment(width, 0),\n                    createSegment(width, height),\n                    createSegment(0, height)\n                ]);\n            }\n        });\n        var MarkerBase = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                var anchor = this.options.anchor;\n                this.anchor = new g.Point(anchor.x, anchor.y);\n                this.createElement();\n            },\n            options: {\n                stroke: {\n                    color: TRANSPARENT,\n                    width: 0\n                },\n                fill: { color: 'black' }\n            },\n            _transformToPath: function (point, path) {\n                var transform = path.transform();\n                if (point && transform) {\n                    point = point.transformCopy(transform);\n                }\n                return point;\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.position) {\n                        this.options.position = options.position;\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            }\n        });\n        var CircleMarker = MarkerBase.extend({\n            options: {\n                radius: 4,\n                anchor: {\n                    x: 0,\n                    y: 0\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var options = this.options;\n                var position = options.position;\n                var segments = path.segments;\n                var targetSegment;\n                var point;\n                if (position == START) {\n                    targetSegment = segments[0];\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                }\n                if (targetSegment) {\n                    point = this._transformToPath(targetSegment.anchor(), path);\n                    this.drawingElement.transform(g.transform().translate(point.x, point.y));\n                }\n            }\n        });\n        var ArrowMarker = MarkerBase.extend({\n            options: {\n                path: 'M 0 0 L 10 5 L 0 10 L 3 5 z',\n                anchor: {\n                    x: 10,\n                    y: 5\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.path, {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var points = this._linePoints(path);\n                var start = points.start;\n                var end = points.end;\n                var transform = g.transform();\n                if (start) {\n                    transform.rotate(lineAngle(start, end), end);\n                }\n                if (end) {\n                    var anchor = this.anchor;\n                    var translate = end.clone().translate(-anchor.x, -anchor.y);\n                    transform.translate(translate.x, translate.y);\n                }\n                this.drawingElement.transform(transform);\n            },\n            _linePoints: function (path) {\n                var options = this.options;\n                var segments = path.segments;\n                var startPoint, endPoint, targetSegment;\n                if (options.position == START) {\n                    targetSegment = segments[0];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlOut();\n                        var nextSegment = segments[1];\n                        if (!startPoint && nextSegment) {\n                            startPoint = nextSegment.anchor();\n                        }\n                    }\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlIn();\n                        var prevSegment = segments[segments.length - 2];\n                        if (!startPoint && prevSegment) {\n                            startPoint = prevSegment.anchor();\n                        }\n                    }\n                }\n                if (endPoint) {\n                    return {\n                        start: this._transformToPath(startPoint, path),\n                        end: this._transformToPath(endPoint, path)\n                    };\n                }\n            }\n        });\n        var MarkerPathMixin = {\n            _getPath: function (position) {\n                var path = this.drawingElement;\n                if (path instanceof d.MultiPath) {\n                    if (position == START) {\n                        path = path.paths[0];\n                    } else {\n                        path = path.paths[path.paths.length - 1];\n                    }\n                }\n                if (path && path.segments.length) {\n                    return path;\n                }\n            },\n            _normalizeMarkerOptions: function (options) {\n                var startCap = options.startCap;\n                var endCap = options.endCap;\n                if (isString(startCap)) {\n                    options.startCap = { type: startCap };\n                }\n                if (isString(endCap)) {\n                    options.endCap = { type: endCap };\n                }\n            },\n            _removeMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    this.drawingContainer().remove(marker.drawingElement);\n                    delete this._markers[position];\n                }\n            },\n            _createMarkers: function () {\n                var options = this.options;\n                this._normalizeMarkerOptions(options);\n                this._markers = {};\n                this._markers[START] = this._createMarker(options.startCap, START);\n                this._markers[END] = this._createMarker(options.endCap, END);\n            },\n            _createMarker: function (options, position) {\n                var type = (options || {}).type;\n                var path = this._getPath(position);\n                var markerType, marker;\n                if (!path) {\n                    this._removeMarker(position);\n                    return;\n                }\n                if (type == Markers.filledCircle) {\n                    markerType = CircleMarker;\n                } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                    markerType = ArrowMarker;\n                } else {\n                    this._removeMarker(position);\n                }\n                if (markerType) {\n                    marker = new markerType(deepExtend({}, options, { position: position }));\n                    marker.positionMarker(path);\n                    this.drawingContainer().append(marker.drawingElement);\n                    return marker;\n                }\n            },\n            _positionMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    var path = this._getPath(position);\n                    if (path) {\n                        marker.positionMarker(path);\n                    } else {\n                        this._removeMarker(position);\n                    }\n                }\n            },\n            _capMap: {\n                start: 'startCap',\n                end: 'endCap'\n            },\n            _redrawMarker: function (pathChange, position, options) {\n                this._normalizeMarkerOptions(options);\n                var pathOptions = this.options;\n                var cap = this._capMap[position];\n                var pathCapType = (pathOptions[cap] || {}).type;\n                var optionsCap = options[cap];\n                var created = false;\n                if (optionsCap) {\n                    pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                    if (optionsCap.type && pathCapType != optionsCap.type) {\n                        this._removeMarker(position);\n                        this._markers[position] = this._createMarker(pathOptions[cap], position);\n                        created = true;\n                    } else if (this._markers[position]) {\n                        this._markers[position].redraw(optionsCap);\n                    }\n                } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                }\n                return created;\n            },\n            _redrawMarkers: function (pathChange, options) {\n                if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                    this._positionMarker(START);\n                }\n                if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                    this._positionMarker(END);\n                }\n            }\n        };\n        var Path = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._createElements();\n                this._initSize();\n            },\n            options: { autoSize: true },\n            drawingContainer: function () {\n                return this.container;\n            },\n            data: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (options.data != value) {\n                        options.data = value;\n                        this._setData(value);\n                        this._initSize();\n                        this._redrawMarkers(true, {});\n                    }\n                } else {\n                    return options.data;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    var pathOptions = this.options;\n                    var data = options.data;\n                    if (defined(data) && pathOptions.data != data) {\n                        pathOptions.data = data;\n                        this._setData(data);\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._updateSize(options);\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _createElements: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.data || '', { stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                this._createMarkers();\n            },\n            _setData: function (data) {\n                var drawingElement = this.drawingElement;\n                var multipath = d.Path.parse(data || '');\n                var paths = multipath.paths.slice(0);\n                multipath.paths.elements([]);\n                drawingElement.paths.elements(paths);\n            }\n        });\n        deepExtend(Path.fn, AutoSizeableMixin);\n        deepExtend(Path.fn, MarkerPathMixin);\n        var Line = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            redraw: function (options) {\n                if (options) {\n                    options = options || {};\n                    var from = options.from;\n                    var to = options.to;\n                    if (from) {\n                        this.options.from = from;\n                    }\n                    if (to) {\n                        this.options.to = to;\n                    }\n                    if (from || to) {\n                        this._drawPath();\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this._drawPath();\n                this.container.append(drawingElement);\n            },\n            _drawPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement;\n                var from = options.from || new Point();\n                var to = options.to || new Point();\n                drawingElement.segments.elements([\n                    createSegment(from.x, from.y),\n                    createSegment(to.x, to.y)\n                ]);\n            }\n        });\n        deepExtend(Line.fn, MarkerPathMixin);\n        var Polyline = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            points: function (points) {\n                var options = this.options;\n                if (points) {\n                    options.points = points;\n                    this._updatePath();\n                } else {\n                    return options.points;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    var points = options.points;\n                    VisualBase.fn.redraw.call(this, options);\n                    if (points && this._pointsDiffer(points)) {\n                        this.points(points);\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                if (options.points) {\n                    this._updatePath();\n                }\n            },\n            _pointsDiffer: function (points) {\n                var currentPoints = this.options.points;\n                var differ = currentPoints.length !== points.length;\n                if (!differ) {\n                    for (var i = 0; i < points.length; i++) {\n                        if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                            differ = true;\n                            break;\n                        }\n                    }\n                }\n                return differ;\n            },\n            _updatePath: function () {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var points = options.points;\n                var segments = [];\n                var point;\n                for (var i = 0; i < points.length; i++) {\n                    point = points[i];\n                    segments.push(createSegment(point.x, point.y));\n                }\n                drawingElement.segments.elements(segments);\n            },\n            options: { points: [] }\n        });\n        deepExtend(Polyline.fn, MarkerPathMixin);\n        var Image = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                this._initImage();\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.source) {\n                        this.drawingElement.src(options.source);\n                    }\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.drawingElement.rect(this._rect());\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _initImage: function () {\n                var options = this.options;\n                var rect = this._rect();\n                this.drawingElement = new d.Image(options.source, rect, {});\n            },\n            _rect: function () {\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n                var size = new g.Size(sizeOptions.width, sizeOptions.height);\n                return new g.Rect(origin, size);\n            }\n        });\n        var Group = Element.extend({\n            init: function (options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Group();\n                this._initSize();\n            },\n            options: { autoSize: false },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                this.children.push(visual);\n                this._childrenChange = true;\n            },\n            remove: function (visual) {\n                if (this._remove(visual)) {\n                    this._childrenChange = true;\n                }\n            },\n            _remove: function (visual) {\n                var index = inArray(visual, this.children);\n                if (index >= 0) {\n                    this.drawingElement.removeAt(index);\n                    this.children.splice(index, 1);\n                    return true;\n                }\n            },\n            clear: function () {\n                this.drawingElement.clear();\n                this.children = [];\n                this._childrenChange = true;\n            },\n            toFront: function (visuals) {\n                var visual;\n                for (var i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    if (this._remove(visual)) {\n                        this.append(visual);\n                    }\n                }\n            },\n            toBack: function (visuals) {\n                this._reorderChildren(visuals, 0);\n            },\n            toIndex: function (visuals, indices) {\n                this._reorderChildren(visuals, indices);\n            },\n            _reorderChildren: function (visuals, indices) {\n                var group = this.drawingElement;\n                var drawingChildren = group.children.slice(0);\n                var children = this.children;\n                var fixedPosition = isNumber(indices);\n                var i, index, toIndex, drawingElement, visual;\n                for (i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    drawingElement = visual.drawingContainer();\n                    index = inArray(visual, children);\n                    if (index >= 0) {\n                        drawingChildren.splice(index, 1);\n                        children.splice(index, 1);\n                        toIndex = fixedPosition ? indices : indices[i];\n                        drawingChildren.splice(toIndex, 0, drawingElement);\n                        children.splice(toIndex, 0, visual);\n                    }\n                }\n                group.clear();\n                group.append.apply(group, drawingChildren);\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (this._childrenChange) {\n                        this._childrenChange = false;\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                    } else {\n                        this._updateSize(options);\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _boundingBox: function () {\n                var children = this.children;\n                var boundingBox;\n                var visual, childBoundingBox;\n                for (var i = 0; i < children.length; i++) {\n                    visual = children[i];\n                    if (visual.visible() && visual._includeInBBox !== false) {\n                        childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                        if (childBoundingBox) {\n                            if (boundingBox) {\n                                boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                            } else {\n                                boundingBox = childBoundingBox;\n                            }\n                        }\n                    }\n                }\n                return boundingBox;\n            }\n        });\n        deepExtend(Group.fn, AutoSizeableMixin);\n        var Layout = Group.extend({\n            init: function (rect, options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n                this._initSize();\n            },\n            rect: function (rect) {\n                if (rect) {\n                    this.drawingElement.rect(toDrawingRect(rect));\n                } else {\n                    var drawingRect = this.drawingElement.rect();\n                    if (drawingRect) {\n                        return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                    }\n                }\n            },\n            reflow: function () {\n                this.drawingElement.reflow();\n            },\n            redraw: function (options) {\n                kendo.deepExtend(this.drawingElement.options, options);\n                Group.fn.redraw.call(this, options);\n            }\n        });\n        var Circle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initCircle();\n                this._initSize();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var circleOptions = this.options;\n                    if (options.center) {\n                        deepExtend(circleOptions, { center: options.center });\n                        this._center.move(circleOptions.center.x, circleOptions.center.y);\n                    }\n                    if (this._diffNumericOptions(options, ['radius'])) {\n                        this._circle.setRadius(circleOptions.radius);\n                    }\n                    this._updateSize(options);\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initCircle: function () {\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var radius = options.radius;\n                if (!defined(radius)) {\n                    if (!defined(width)) {\n                        width = height;\n                    }\n                    if (!defined(height)) {\n                        height = width;\n                    }\n                    options.radius = radius = Math.min(width, height) / 2;\n                }\n                var center = options.center || {\n                    x: radius,\n                    y: radius\n                };\n                this._center = new g.Point(center.x, center.y);\n                this._circle = new g.Circle(this._center, radius);\n                this.drawingElement = new d.Circle(this._circle, { stroke: options.stroke });\n                this._fill();\n            }\n        });\n        deepExtend(Circle.fn, AutoSizeableMixin);\n        var Canvas = Class.extend({\n            init: function (element, options) {\n                options = options || {};\n                this.element = element;\n                this.surface = d.Surface.create(element, options);\n                if (kendo.isFunction(this.surface.translate)) {\n                    this.translate = this._translate;\n                }\n                this.drawingElement = new d.Group();\n                this._viewBox = new Rect(0, 0, options.width, options.height);\n                this.size(this._viewBox);\n            },\n            bounds: function () {\n                var box = this.drawingElement.clippedBBox();\n                return new Rect(0, 0, box.width(), box.height());\n            },\n            size: function (size) {\n                var viewBox = this._viewBox;\n                if (defined(size)) {\n                    viewBox.width = size.width;\n                    viewBox.height = size.height;\n                    this.surface.setSize(size);\n                }\n                return {\n                    width: viewBox.width,\n                    height: viewBox.height\n                };\n            },\n            _translate: function (x, y) {\n                var viewBox = this._viewBox;\n                if (defined(x) && defined(y)) {\n                    viewBox.x = x;\n                    viewBox.y = y;\n                    this.surface.translate({\n                        x: x,\n                        y: y\n                    });\n                }\n                return {\n                    x: viewBox.x,\n                    y: viewBox.y\n                };\n            },\n            draw: function () {\n                this.surface.draw(this.drawingElement);\n            },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                return this;\n            },\n            remove: function (visual) {\n                this.drawingElement.remove(visual.drawingContainer());\n            },\n            insertBefore: function () {\n            },\n            clear: function () {\n                this.drawingElement.clear();\n            },\n            destroy: function (clearHtml) {\n                this.surface.destroy();\n                if (clearHtml) {\n                    $(this.element).remove();\n                }\n            }\n        });\n        function sizeOptionsOrDefault(options) {\n            return {\n                x: options.x || 0,\n                y: options.y || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n        }\n        function normalizeDrawingOptions(options) {\n            if (options) {\n                var drawingOptions = options;\n                if (isString(drawingOptions)) {\n                    drawingOptions = { color: drawingOptions };\n                }\n                if (drawingOptions.color) {\n                    drawingOptions.color = getColor(drawingOptions.color);\n                }\n                return drawingOptions;\n            }\n        }\n        function getColor(value) {\n            var color;\n            if (value != TRANSPARENT) {\n                color = new d.Color(value).toHex();\n            } else {\n                color = value;\n            }\n            return color;\n        }\n        function lineAngle(p1, p2) {\n            var xDiff = p2.x - p1.x;\n            var yDiff = p2.y - p1.y;\n            var angle = kendo.util.deg(Math.atan2(yDiff, xDiff));\n            return angle;\n        }\n        function createSegment(x, y) {\n            return new d.Segment(new g.Point(x, y));\n        }\n        function toDrawingRect(rect) {\n            if (rect) {\n                return new g.Rect([\n                    rect.x,\n                    rect.y\n                ], [\n                    rect.width,\n                    rect.height\n                ]);\n            }\n        }\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            diffNumericOptions: diffNumericOptions,\n            Element: Element,\n            Scale: Scale,\n            Translation: Translation,\n            Rotation: Rotation,\n            Circle: Circle,\n            Group: Group,\n            Rectangle: Rectangle,\n            Canvas: Canvas,\n            Path: Path,\n            Layout: Layout,\n            Line: Line,\n            MarkerBase: MarkerBase,\n            ArrowMarker: ArrowMarker,\n            CircleMarker: CircleMarker,\n            Polyline: Polyline,\n            CompositeTransform: CompositeTransform,\n            TextBlock: TextBlock,\n            Image: Image,\n            VisualBase: VisualBase\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/services', [\n        'kendo.drawing',\n        'dataviz/diagram/svg'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, dataviz = kendo.dataviz, diagram = dataviz.diagram, Class = kendo.Class, Group = diagram.Group, Rect = diagram.Rect, Rectangle = diagram.Rectangle, Utils = diagram.Utils, isUndefined = Utils.isUndefined, Point = diagram.Point, Circle = diagram.Circle, Ticker = diagram.Ticker, deepExtend = kendo.deepExtend, Movable = kendo.ui.Movable, browser = kendo.support.browser, defined = kendo.util.defined, inArray = $.inArray, proxy = $.proxy;\n        var Cursors = {\n                arrow: 'default',\n                grip: 'pointer',\n                cross: 'pointer',\n                add: 'pointer',\n                move: 'move',\n                select: 'pointer',\n                south: 's-resize',\n                east: 'e-resize',\n                west: 'w-resize',\n                north: 'n-resize',\n                rowresize: 'row-resize',\n                colresize: 'col-resize'\n            }, HIT_TEST_DISTANCE = 10, AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', DEFAULT_SNAP_SIZE = 10, DEFAULT_SNAP_ANGLE = 10, DRAG_START = 'dragStart', DRAG = 'drag', DRAG_END = 'dragEnd', ITEMROTATE = 'itemRotate', ITEMBOUNDSCHANGE = 'itemBoundsChange', MIN_SNAP_SIZE = 5, MIN_SNAP_ANGLE = 5, MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', SCROLL_MIN = -20000, SCROLL_MAX = 20000, FRICTION = 0.9, FRICTION_MOBILE = 0.93, VELOCITY_MULTIPLIER = 5, TRANSPARENT = 'transparent', PAN = 'pan', ROTATED = 'rotated';\n        diagram.Cursors = Cursors;\n        function selectSingle(item, meta) {\n            if (item.isSelected) {\n                if (meta.ctrlKey) {\n                    item.select(false);\n                }\n            } else {\n                item.diagram.select(item, { addToSelection: meta.ctrlKey });\n            }\n        }\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    this.subjects[i].position(new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick));\n                }\n            }\n        });\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                } else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = 'Diagram layout';\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        conn.visible(false);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(function (id) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(true);\n                        });\n                    });\n                    ticker.play();\n                } else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                }\n            }\n        });\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = 'Composite unit';\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, 'source');\n                }\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, 'target');\n                }\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, 'source');\n                }\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, 'target');\n                }\n                this.item.updateModel();\n            }\n        });\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, 'source');\n                this.item._updateConnector(this._undoTarget, 'target');\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, 'source');\n                this.item._updateConnector(this._redoTarget, 'target');\n                this.item.updateModel();\n            }\n        });\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = 'Delete connection';\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = 'Deletion';\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = 'Transformation';\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = 'New connection';\n            },\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = 'New shape';\n            },\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = 'Pan Unit';\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = 'Rotation';\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n            events: [\n                'undone',\n                'redone'\n            ],\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n            cancel: function () {\n                this.composite = undefined;\n            },\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n            pop: function () {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n            count: function () {\n                return this.stack.length;\n            },\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger('undone');\n                }\n            },\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger('redone');\n                }\n            },\n            _restart: function (composite, execute) {\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity;\n                }\n            },\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n        function tryActivateSelection(options, meta) {\n            var enabled = options !== false;\n            if (options.key && options.key != 'none') {\n                enabled = meta[options.key + 'Key'];\n            }\n            return enabled;\n        }\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n                var diagram = tool.toolService.diagram, canvas = diagram.canvas;\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data('kendoMobileScroller');\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n                if (defined(options.key)) {\n                    if (!options.key || options.key == 'none') {\n                        enabled = noMeta(meta);\n                    } else {\n                        enabled = meta[options.key + 'Key'] && !(meta.ctrlKey && defined(toolService.hoveredItem));\n                    }\n                }\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },\n            _move: function (args) {\n                var tool = this, diagram = tool.toolService.diagram, canvas = diagram.canvas, scrollPos = new Point(args.scrollLeft, args.scrollTop);\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, hoveredItem = toolService.hoveredItem, selectable = diagram.options.selectable;\n                if (hoveredItem) {\n                    if (tryActivateSelection(selectable, meta)) {\n                        selectSingle(hoveredItem, meta);\n                    }\n                    if (hoveredItem.adorner) {\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        });\n                    }\n                }\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, service = this.toolService, adorner = this.adorner, unit;\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, {\n                            shapes: adorner.shapes,\n                            connections: []\n                        })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n                if (service.hoveredItem) {\n                    this.toolService.triggerClick({\n                        item: service.hoveredItem,\n                        point: p,\n                        meta: meta\n                    });\n                }\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var enabled = tryActivateSelection(toolService.diagram.options.selectable, meta);\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function () {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var diagram = this.toolService.diagram, connector = this.toolService._hoveredConnector, connection = diagram._createConnection({}, connector._c, p);\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection]\n                    }) && diagram._addConnection(connection)) {\n                    this.toolService._connectionManipulation(connection, connector._c.shape, true);\n                    this.toolService._removeHover();\n                    selectSingle(this.toolService.activeConnection, meta);\n                } else {\n                    connection.source(null);\n                    this.toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, {\n                    shapes: [],\n                    connections: [connection]\n                });\n                return true;\n            },\n            end: function (p) {\n                var toolService = this.toolService, d = toolService.diagram, connection = toolService.activeConnection, hoveredItem = toolService.hoveredItem, connector = toolService._hoveredConnector, target;\n                if (!connection) {\n                    return;\n                }\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n                connection.target(target);\n                if (!d.trigger(DRAG_END, {\n                        shapes: [],\n                        connections: [connection]\n                    })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, selectable = diagram.options.selectable, item = toolService.hoveredItem, isActive = tryActivateSelection(selectable, meta) && item && item.path && !(item.isSelected && meta.ctrlKey);\n                if (isActive) {\n                    this._c = item;\n                }\n                return isActive;\n            },\n            start: function (p, meta) {\n                var connection = this._c;\n                selectSingle(connection, meta);\n                var adorner = connection.adorner;\n                if (canDrag(connection) && adorner && !this.toolService.diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection]\n                    })) {\n                    this.handle = adorner._hitTest(p);\n                    adorner.start(p);\n                } else {\n                    this.toolService.startPoint = p;\n                    this.toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, {\n                        shapes: [],\n                        connections: [this._c]\n                    });\n                    return true;\n                }\n            },\n            end: function (p, meta) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n                if (adorner) {\n                    toolService.triggerClick({\n                        item: connection,\n                        point: p,\n                        meta: meta\n                    });\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, {\n                                shapes: [],\n                                connections: [connection]\n                            })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ];\n                this.activeTool = undefined;\n            },\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.startPoint = p;\n                return true;\n            },\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {\n                    if (testKey(key, 'a')) {\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'z')) {\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'y')) {\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'c')) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'x')) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'v')) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'l')) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'd')) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n                    return true;\n                } else if (key === 27) {\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram, delta = meta.delta, z = diagram.zoom(), options = diagram.options, zoomRate = options.zoomRate, zoomOptions = {\n                        point: p,\n                        meta: meta,\n                        zoom: z\n                    };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n            triggerClick: function (data) {\n                if (this.startPoint.equals(data.point)) {\n                    this.diagram.trigger('click', data);\n                }\n            },\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break;\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow;\n                element.css({ cursor: cursor });\n                if (browser.msie && browser.version == 7) {\n                    element[0].style.cssText = element[0].style.cssText;\n                }\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n                        this.hoveredItem = hit;\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) {\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n                if (!this.activeTool || this.activeTool.type !== 'ConnectionTool') {\n                    var selectedConnections = [];\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n                return hit || this._hitTestElements(point);\n            },\n            _hitTestElements: function (point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n                if ((!this.activeTool || this.activeTool.type != 'ConnectionTool') && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n        });\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n            getBounds: function () {\n                var points = this.connection.allPoints(), s = points[0], e = points[points.length - 1], right = Math.max(s.x, e.x), left = Math.min(s.x, e.x), top = Math.min(s.y, e.y), bottom = Math.max(s.y, e.y);\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n            }\n        });\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            routePoints: function (start, end, sourceConnector, targetConnector) {\n                var result;\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n            _connectorSides: [\n                {\n                    name: 'Top',\n                    axis: 'y',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Left',\n                    axis: 'x',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Bottom',\n                    axis: 'y',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                },\n                {\n                    name: 'Right',\n                    axis: 'x',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                }\n            ],\n            _connectorSide: function (connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = kendo.util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min && (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n            _sameSideDistance: function (connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n            _connectorPoints: function (start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(start.x, pointY),\n                                new Point(end.x, pointY)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x, start.y + deltaY / 2),\n                                new Point(end.x, start.y + deltaY / 2)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(pointX, start.y),\n                                new Point(pointX, end.y)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x + deltaX / 2, start.y),\n                                new Point(start.x + deltaX / 2, start.y + deltaY)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n            _floatingPoints: function (start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [\n                    start,\n                    start,\n                    end,\n                    end\n                ];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        } else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    } else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        } else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                idx--;\n                if (cascadeStartHorizontal && idx % 2 !== 0 || !cascadeStartHorizontal && idx % 2 === 0) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n                return [\n                    points[1],\n                    points[2]\n                ];\n            },\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n                return horizontal;\n            }\n        });\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n            }\n        });\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n            options: { handles: {} },\n            _getCursor: function () {\n                return Cursors.move;\n            },\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                case -1:\n                    if (this.connection.targetConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                    }\n                    break;\n                case 1:\n                    if (this.connection.sourceConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                    }\n                    break;\n                }\n            },\n            move: function (handle, p) {\n                switch (handle) {\n                case -1:\n                    this.connection.source(p);\n                    break;\n                case 1:\n                    this.connection.target(p);\n                    break;\n                default:\n                    var delta = p.minus(this.startPoint);\n                    this.startPoint = p;\n                    if (!this.connection.sourceConnector) {\n                        this.connection.source(this.connection.sourcePoint().plus(delta));\n                    }\n                    if (!this.connection.targetConnector) {\n                        this.connection.target(this.connection.targetPoint().plus(delta));\n                    }\n                    break;\n                }\n                this.refresh();\n                return true;\n            },\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n            _hitTest: function (p) {\n                var sp = this.connection.sourcePoint(), tp = this.connection.targetPoint(), rx = this.options.handles.width / 2, ry = this.options.handles.height / 2, sb = new Rect(sp.x, sp.y).inflate(rx, ry), tb = new Rect(tp.x, tp.y).inflate(rx, ry);\n                return sb.contains(p) ? -1 : tb.contains(p) ? 1 : 0;\n            },\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that.visual.clear();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                    bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n            return result;\n        }\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind('select', function (e) {\n                    that._initialize(e.selected);\n                });\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n            options: {\n                handles: {\n                    fill: { color: '#fff' },\n                    stroke: { color: '#282828' },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: { color: '#282828' },\n                        stroke: { color: '#282828' }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: '#778899',\n                        width: 1,\n                        dashType: 'dash'\n                    },\n                    fill: { color: TRANSPARENT }\n                },\n                offset: 10\n            },\n            _initSelection: function () {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n            _resizable: function () {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n            _handleOptions: function () {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n            _createHandles: function () {\n                var handles, item, y, x;\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if (x !== 0 || y !== 0) {\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({\n                                    x: x,\n                                    y: y,\n                                    visual: item\n                                });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p), i, hit, handleBounds, handlesCount = this.map.length, handle;\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit);\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(), w = handles.width, h = handles.height, r = new Rect(0, 0, w, h);\n                    if (p.x < 0) {\n                        r.x = -w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1 - w / 2;\n                    }\n                    if (p.y < 0) {\n                        r.y = -h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1 - h / 2;\n                    }\n                    return r;\n                }\n            },\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && hit.x >= -1 && hit.x <= 1 && hit.y >= -1 && hit.y <= 1 && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n                    if (hit.x == -1 && hit.y == -1) {\n                        return 'nw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return 'se-resize';\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return 'sw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return 'ne-resize';\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return 'n-resize';\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return 's-resize';\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return 'e-resize';\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return 'w-resize';\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n            _initialize: function () {\n                var that = this, i, item, items = that.diagram.select();\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n            _hover: function (value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(), hover = handleOptions.hover, stroke = handleOptions.stroke, fill = handleOptions.fill;\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n            redraw: function () {\n                var i, handle, visibleHandles = this._resizable();\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n            angle: function (value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n                return this._angle;\n            },\n            rotate: function () {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n            move: function (handle, p) {\n                var delta, dragging, dtl = new Point(), dbr = new Point(), bounds, center, shape, i, angle, newBounds, changed = 0, staticPoint, scaleX, scaleY;\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty('layout')) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta;\n                        dragging = true;\n                    } else {\n                        if (this._angle) {\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center();\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) {\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty('layout')) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle);\n                            }\n                            changed += 1;\n                        }\n                    }\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n                    this._positions();\n                }\n                this._cp = p;\n            },\n            isDragHandle: function (handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n            cancel: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor(a % 360 / snapAngle) * snapAngle : a % 360;\n            },\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n            snapOptions: function () {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n            shouldSnap: function () {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl), br = bounds.bottomRight().plus(dbr), newBounds = Rect.fromPoints(tl, br), newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n            _diffStates: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ? this.shapes[0].bounds().clone() : this.diagram.boundingBox(this.shapes, true);\n                this.bounds(bounds);\n            },\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({\n                        width: bounds.width,\n                        height: bounds.height\n                    });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: '#778899',\n                    width: 1,\n                    dashType: 'dash'\n                },\n                fill: { color: TRANSPARENT }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({\n                        height: visualBounds.height + 1,\n                        width: visualBounds.width + 1\n                    });\n                }\n            }\n        });\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()), relative = p.minus(this._c.shape.bounds('transformed').topLeft()), value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/layout', ['dataviz/diagram/math'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Graph = diagram.Graph, Node = diagram.Node, Link = diagram.Link, deepExtend = kendo.deepExtend, Size = diagram.Size, Rect = diagram.Rect, Dictionary = diagram.Dictionary, Set = diagram.Set, HyperTree = diagram.Graph, Utils = diagram.Utils, Point = diagram.Point, EPSILON = 0.000001, DEG_TO_RAD = Math.PI / 180, contains = Utils.contains, grep = $.grep;\n        var LayoutBase = kendo.Class.extend({\n            defaultOptions: {\n                type: 'Tree',\n                subtype: 'Down',\n                roots: null,\n                animate: false,\n                limitToView: false,\n                friction: 0.9,\n                nodeDistance: 50,\n                iterations: 300,\n                horizontalSeparation: 90,\n                verticalSeparation: 50,\n                underneathVerticalTopOffset: 15,\n                underneathHorizontalOffset: 15,\n                underneathVerticalSeparation: 15,\n                grid: {\n                    width: 1500,\n                    offsetX: 50,\n                    offsetY: 50,\n                    componentSpacingX: 20,\n                    componentSpacingY: 20\n                },\n                layerSeparation: 50,\n                layeredIterations: 2,\n                startRadialAngle: 0,\n                endRadialAngle: 360,\n                radialSeparation: 150,\n                radialFirstLevelSeparation: 200,\n                keepComponentsInOneRadialLayout: false,\n                ignoreContainers: true,\n                layoutContainerChildren: false,\n                ignoreInvisible: true,\n                animateTransitions: false\n            },\n            init: function () {\n            },\n            gridLayoutComponents: function (components) {\n                if (!components) {\n                    throw 'No components supplied.';\n                }\n                Utils.forEach(components, function (c) {\n                    c.calcBounds();\n                });\n                components.sort(function (a, b) {\n                    return b.bounds.width - a.bounds.width;\n                });\n                var maxWidth = this.options.grid.width, offsetX = this.options.grid.componentSpacingX, offsetY = this.options.grid.componentSpacingY, height = 0, startX = this.options.grid.offsetX, startY = this.options.grid.offsetY, x = startX, y = startY, i, resultLinkSet = [], resultNodeSet = [];\n                while (components.length > 0) {\n                    if (x >= maxWidth) {\n                        x = startX;\n                        y += height + offsetY;\n                        height = 0;\n                    }\n                    var component = components.pop();\n                    this.moveToOffset(component, new Point(x, y));\n                    for (i = 0; i < component.nodes.length; i++) {\n                        resultNodeSet.push(component.nodes[i]);\n                    }\n                    for (i = 0; i < component.links.length; i++) {\n                        resultLinkSet.push(component.links[i]);\n                    }\n                    var boundingRect = component.bounds;\n                    var currentHeight = boundingRect.height;\n                    if (currentHeight <= 0 || isNaN(currentHeight)) {\n                        currentHeight = 0;\n                    }\n                    var currentWidth = boundingRect.width;\n                    if (currentWidth <= 0 || isNaN(currentWidth)) {\n                        currentWidth = 0;\n                    }\n                    if (currentHeight >= height) {\n                        height = currentHeight;\n                    }\n                    x += currentWidth + offsetX;\n                }\n                return {\n                    nodes: resultNodeSet,\n                    links: resultLinkSet\n                };\n            },\n            moveToOffset: function (component, p) {\n                var i, j, bounds = component.bounds, deltax = p.x - bounds.x, deltay = p.y - bounds.y;\n                for (i = 0; i < component.nodes.length; i++) {\n                    var node = component.nodes[i];\n                    var nodeBounds = node.bounds();\n                    if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                        nodeBounds = new Rect(0, 0, 0, 0);\n                    }\n                    nodeBounds.x += deltax;\n                    nodeBounds.y += deltay;\n                    node.bounds(nodeBounds);\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    var link = component.links[i];\n                    if (link.points) {\n                        var newpoints = [];\n                        var points = link.points;\n                        for (j = 0; j < points.length; j++) {\n                            var pt = points[j];\n                            pt.x += deltax;\n                            pt.y += deltay;\n                            newpoints.push(pt);\n                        }\n                        link.points = newpoints;\n                    }\n                }\n                this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n                return new Point(deltax, deltay);\n            },\n            transferOptions: function (options) {\n                this.options = kendo.deepExtend({}, this.defaultOptions);\n                if (Utils.isUndefined(options)) {\n                    return;\n                }\n                this.options = kendo.deepExtend(this.options, options || {});\n            }\n        });\n        var DiagramToHyperTreeAdapter = kendo.Class.extend({\n            init: function (diagram) {\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.finalNodes = [];\n                this.finalLinks = [];\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.hyperMap = new Dictionary();\n                this.hyperTree = new Graph();\n                this.finalGraph = null;\n                this.diagram = diagram;\n            },\n            convert: function (options) {\n                if (Utils.isUndefined(this.diagram)) {\n                    throw 'No diagram to convert.';\n                }\n                this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                }, options || {});\n                this.clear();\n                this._renormalizeShapes();\n                this._renormalizeConnections();\n                this.finalNodes = new Dictionary(this.nodes);\n                this.finalLinks = new Dictionary(this.edges);\n                this.finalGraph = new Graph();\n                this.finalNodes.forEach(function (n) {\n                    this.finalGraph.addNode(n);\n                }, this);\n                this.finalLinks.forEach(function (l) {\n                    this.finalGraph.addExistingLink(l);\n                }, this);\n                return this.finalGraph;\n            },\n            mapConnection: function (connection) {\n                return this.edgeMap.get(connection.id);\n            },\n            mapShape: function (shape) {\n                return this.nodeMap.get(shape.id);\n            },\n            getEdge: function (a, b) {\n                return Utils.first(a.links, function (link) {\n                    return link.getComplement(a) === b;\n                });\n            },\n            clear: function () {\n                this.finalGraph = null;\n                this.hyperTree = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new HyperTree() : null;\n                this.hyperMap = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new Dictionary() : null;\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.finalNodes = [];\n                this.finalLinks = [];\n            },\n            listToRoot: function (containerGraph) {\n                var list = [];\n                var s = containerGraph.container;\n                if (!s) {\n                    return list;\n                }\n                list.push(s);\n                while (s.parentContainer) {\n                    s = s.parentContainer;\n                    list.push(s);\n                }\n                list.reverse();\n                return list;\n            },\n            firstNonIgnorableContainer: function (shape) {\n                if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                    return shape;\n                }\n                return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n            },\n            isContainerConnection: function (a, b) {\n                if (a.isContainer && this.isDescendantOf(a, b)) {\n                    return true;\n                }\n                return b.isContainer && this.isDescendantOf(b, a);\n            },\n            isDescendantOf: function (scope, a) {\n                if (!scope.isContainer) {\n                    throw 'Expecting a container.';\n                }\n                if (scope === a) {\n                    return false;\n                }\n                if (contains(scope.children, a)) {\n                    return true;\n                }\n                var containers = [];\n                for (var i = 0, len = scope.children.length; i < len; i++) {\n                    var c = scope.children[i];\n                    if (c.isContainer && this.isDescendantOf(c, a)) {\n                        containers.push(c);\n                    }\n                }\n                return containers.length > 0;\n            },\n            isIgnorableItem: function (shape) {\n                if (this.options.ignoreInvisible) {\n                    if (shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    if (!shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    return true;\n                } else {\n                    return shape.isCollapsed && !this._isTop(shape);\n                }\n            },\n            isShapeMapped: function (shape) {\n                return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n            },\n            leastCommonAncestor: function (a, b) {\n                if (!a) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!b) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!this.hyperTree) {\n                    throw 'No hypertree available.';\n                }\n                var al = this.listToRoot(a);\n                var bl = this.listToRoot(b);\n                var found = null;\n                if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                    return this.hyperTree.root.data;\n                }\n                var xa = al[0];\n                var xb = bl[0];\n                var i = 0;\n                while (xa === xb) {\n                    found = al[i];\n                    i++;\n                    if (i >= al.length || i >= bl.length) {\n                        break;\n                    }\n                    xa = al[i];\n                    xb = bl[i];\n                }\n                if (!found) {\n                    return this.hyperTree.root.data;\n                } else {\n                    return grep(this.hyperTree.nodes, function (n) {\n                        return n.data.container === found;\n                    });\n                }\n            },\n            _isTop: function (item) {\n                return !item.parentContainer;\n            },\n            _isVisible: function (shape) {\n                if (!shape.visible()) {\n                    return false;\n                }\n                return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n            },\n            _isCollapsed: function (shape) {\n                if (shape.isContainer && shape.isCollapsed) {\n                    return true;\n                }\n                return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n            },\n            _renormalizeShapes: function () {\n                if (this.options.ignoreContainers) {\n                    for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                        var shape = this.diagram.shapes[i];\n                        if (this.options.ignoreInvisible && !this._isVisible(shape) || shape.isContainer) {\n                            this.ignoredShapes.push(shape);\n                            continue;\n                        }\n                        var node = new Node(shape.id, shape);\n                        node.isVirtual = false;\n                        this.nodeMap.add(shape.id, node);\n                        this.nodes.push(node);\n                    }\n                } else {\n                    throw 'Containers are not supported yet, but stay tuned.';\n                }\n            },\n            _renormalizeConnections: function () {\n                if (this.diagram.connections.length === 0) {\n                    return;\n                }\n                for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                    var conn = this.diagram.connections[i];\n                    if (this.isIgnorableItem(conn)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                    var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n                    if (!source || !sink) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (this.shapeMap.containsKey(source)) {\n                        source = this.shapeMap[source];\n                    }\n                    if (this.shapeMap.containsKey(sink)) {\n                        sink = this.shapeMap[sink];\n                    }\n                    var sourceNode = this.mapShape(source);\n                    var sinkNode = this.mapShape(sink);\n                    if (sourceNode === sinkNode || this.areConnectedAlready(sourceNode, sinkNode)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (sourceNode === null || sinkNode === null) {\n                        throw 'A shape was not mapped to a node.';\n                    }\n                    if (this.options.ignoreContainers) {\n                        if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                            this.ignoredConnections.push(conn);\n                            continue;\n                        }\n                        var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n                        this.edgeMap.add(conn.id, newEdge);\n                        this.edges.push(newEdge);\n                    } else {\n                        throw 'Containers are not supported yet, but stay tuned.';\n                    }\n                }\n            },\n            areConnectedAlready: function (n, m) {\n                return Utils.any(this.edges, function (l) {\n                    return l.source === n && l.target === m || l.source === m && l.target === n;\n                });\n            }\n        });\n        var SpringLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                var initialTemperature = this.options.nodeDistance * 9;\n                this.temperature = initialTemperature;\n                var guessBounds = this._expectedBounds();\n                this.width = guessBounds.width;\n                this.height = guessBounds.height;\n                for (var step = 0; step < this.options.iterations; step++) {\n                    this.refineStage = step >= this.options.iterations * 5 / 6;\n                    this.tick();\n                    this.temperature = this.refineStage ? initialTemperature / 30 : initialTemperature * (1 - step / (2 * this.options.iterations));\n                }\n            },\n            tick: function () {\n                var i;\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    this._repulsion(this.graph.nodes[i]);\n                }\n                for (i = 0; i < this.graph.links.length; i++) {\n                    this._attraction(this.graph.links[i]);\n                }\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    var node = this.graph.nodes[i];\n                    var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                    if (offset === 0) {\n                        return;\n                    }\n                    node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                    node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                    if (this.options.limitToView) {\n                        node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                        node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                    }\n                }\n            },\n            _shake: function (node) {\n                var rho = Math.random() * this.options.nodeDistance / 4;\n                var alpha = Math.random() * 2 * Math.PI;\n                node.x += rho * Math.cos(alpha);\n                node.y -= rho * Math.sin(alpha);\n            },\n            _InverseSquareForce: function (d, n, m) {\n                var force;\n                if (!this.refineStage) {\n                    force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n                } else {\n                    var deltax = n.x - m.x;\n                    var deltay = n.y - m.y;\n                    var wn = n.width / 2;\n                    var hn = n.height / 2;\n                    var wm = m.width / 2;\n                    var hm = m.height / 2;\n                    force = Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2) + Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2);\n                }\n                return force * 4 / 3;\n            },\n            _SquareForce: function (d, n, m) {\n                return 1 / this._InverseSquareForce(d, n, m);\n            },\n            _repulsion: function (n) {\n                n.dx = 0;\n                n.dy = 0;\n                Utils.forEach(this.graph.nodes, function (m) {\n                    if (m === n) {\n                        return;\n                    }\n                    while (n.x === m.x && n.y === m.y) {\n                        this._shake(m);\n                    }\n                    var vx = n.x - m.x;\n                    var vy = n.y - m.y;\n                    var distance = Math.sqrt(vx * vx + vy * vy);\n                    var r = this._SquareForce(distance, n, m) * 2;\n                    n.dx += vx / distance * r;\n                    n.dy += vy / distance * r;\n                }, this);\n            },\n            _attraction: function (link) {\n                var t = link.target;\n                var s = link.source;\n                if (s === t) {\n                    return;\n                }\n                while (s.x === t.x && s.y === t.y) {\n                    this._shake(t);\n                }\n                var vx = s.x - t.x;\n                var vy = s.y - t.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var a = this._InverseSquareForce(distance, s, t) * 5;\n                var dx = vx / distance * a;\n                var dy = vy / distance * a;\n                t.dx += dx;\n                t.dy += dy;\n                s.dx -= dx;\n                s.dy -= dy;\n            },\n            _expectedBounds: function () {\n                var size, N = this.graph.nodes.length, ratio = 1.5, multiplier = 4;\n                if (N === 0) {\n                    return size;\n                }\n                size = Utils.fold(this.graph.nodes, function (s, node) {\n                    var area = node.width * node.height;\n                    if (area > 0) {\n                        s += Math.sqrt(area);\n                        return s;\n                    }\n                    return 0;\n                }, 0, this);\n                var av = size / N;\n                var squareSize = av * Math.ceil(Math.sqrt(N));\n                var width = squareSize * Math.sqrt(ratio);\n                var height = squareSize / Math.sqrt(ratio);\n                return {\n                    width: width * multiplier,\n                    height: height * multiplier\n                };\n            }\n        });\n        var TreeLayoutProcessor = kendo.Class.extend({\n            init: function (options) {\n                this.center = null;\n                this.options = options;\n            },\n            layout: function (treeGraph, root) {\n                this.graph = treeGraph;\n                if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                    return;\n                }\n                if (!contains(this.graph.nodes, root)) {\n                    throw 'The given root is not in the graph.';\n                }\n                this.center = root;\n                this.graph.cacheRelationships();\n                this.layoutSwitch();\n            },\n            layoutLeft: function (left) {\n                this.setChildrenDirection(this.center, 'Left', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    node.TreeDirection = 'Left';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x - this.options.horizontalSeparation;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    var p = new Point(x - node.Size.width, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutRight: function (right) {\n                this.setChildrenDirection(this.center, 'Right', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    node.TreeDirection = 'Right';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutUp: function (up) {\n                this.setChildrenDirection(this.center, 'Up', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y, node, i;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    node.TreeDirection = 'Up';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutDown: function (down) {\n                var node, i;\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.treeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutRadialTree: function () {\n                this.setChildrenDirection(this.center, 'Radial', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.previousRoot = null;\n                var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n                var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n                if (endAngle <= startAngle) {\n                    throw 'Final angle should not be less than the start angle.';\n                }\n                this.maxDepth = 0;\n                this.origin = new Point(this.center.x, this.center.y);\n                this.calculateAngularWidth(this.center, 0);\n                if (this.maxDepth > 0) {\n                    this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n                }\n                this.center.Angle = endAngle - startAngle;\n            },\n            tipOverTree: function (down, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.setChildrenLayout(this.center, 'Underneath', false, startFromLevel);\n                var w = 0, y, node, i;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.TreeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                w -= down[down.length - 1].width;\n                w += down[down.length - 1].associatedShape.bounds().width;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            calculateAngularWidth: function (n, d) {\n                if (d > this.maxDepth) {\n                    this.maxDepth = d;\n                }\n                var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt(w * w + h * h) / d;\n                if (n.children.length > 0) {\n                    for (var i = 0, len = n.children.length; i < len; i++) {\n                        var child = n.children[i];\n                        aw += this.calculateAngularWidth(child, d + 1);\n                    }\n                    aw = Math.max(diameter, aw);\n                } else {\n                    aw = diameter;\n                }\n                n.sectorAngle = aw;\n                return aw;\n            },\n            sortChildren: function (n) {\n                var basevalue = 0, i;\n                if (n.parents.length > 1) {\n                    throw 'Node is not part of a tree.';\n                }\n                var p = n.parents[0];\n                if (p) {\n                    var pl = new Point(p.x, p.y);\n                    var nl = new Point(n.x, n.y);\n                    basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n                }\n                var count = n.children.length;\n                if (count === 0) {\n                    return null;\n                }\n                var angle = [];\n                var idx = [];\n                for (i = 0; i < count; ++i) {\n                    var c = n.children[i];\n                    var l = new Point(c.x, c.y);\n                    idx[i] = i;\n                    angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n                }\n                Utils.bisort(angle, idx);\n                var col = [];\n                var children = n.children;\n                for (i = 0; i < count; ++i) {\n                    col.push(children[idx[i]]);\n                }\n                return col;\n            },\n            normalizeAngle: function (angle) {\n                while (angle > Math.PI * 2) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < 0) {\n                    angle += Math.PI * 2;\n                }\n                return angle;\n            },\n            radialLayout: function (node, radius, startAngle, endAngle) {\n                var deltaTheta = endAngle - startAngle;\n                var deltaThetaHalf = deltaTheta / 2;\n                var parentSector = node.sectorAngle;\n                var fraction = 0;\n                var sorted = this.sortChildren(node);\n                for (var i = 0, len = sorted.length; i < len; i++) {\n                    var childNode = sorted[i];\n                    var cp = childNode;\n                    var childAngleFraction = cp.sectorAngle / parentSector;\n                    if (childNode.children.length > 0) {\n                        this.radialLayout(childNode, radius + this.options.radialSeparation, startAngle + fraction * deltaTheta, startAngle + (fraction + childAngleFraction) * deltaTheta);\n                    }\n                    this.setPolarLocation(childNode, radius, startAngle + fraction * deltaTheta + childAngleFraction * deltaThetaHalf);\n                    cp.angle = childAngleFraction * deltaTheta;\n                    fraction += childAngleFraction;\n                }\n            },\n            setPolarLocation: function (node, radius, angle) {\n                node.x = this.origin.x + radius * Math.cos(angle);\n                node.y = this.origin.y + radius * Math.sin(angle);\n                node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n            },\n            setChildrenDirection: function (node, direction, includeStart) {\n                var rootDirection = node.treeDirection;\n                this.graph.depthFirstTraversal(node, function (n) {\n                    n.treeDirection = direction;\n                });\n                if (!includeStart) {\n                    node.treeDirection = rootDirection;\n                }\n            },\n            setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                var rootLayout = node.childrenLayout;\n                if (startFromLevel > 0) {\n                    this.graph.assignLevels(node);\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    });\n                } else {\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        s.childrenLayout = layout;\n                    });\n                    if (!includeStart) {\n                        node.childrenLayout = rootLayout;\n                    }\n                }\n            },\n            measure: function (node, givenSize) {\n                var w = 0, h = 0, s;\n                var result = new Size(0, 0);\n                if (!node) {\n                    throw '';\n                }\n                var b = node.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (node.parents.length !== 1) {\n                    throw 'Node not in a spanning tree.';\n                }\n                var parent = node.parents[0];\n                if (node.treeDirection === 'Undefined') {\n                    node.treeDirection = parent.treeDirection;\n                }\n                if (Utils.isEmpty(node.children)) {\n                    result = new Size(Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth, Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n                } else if (node.children.length === 1) {\n                    switch (node.treeDirection) {\n                    case 'Radial':\n                        s = this.measure(node.children[0], givenSize);\n                        w = shapeWidth + this.options.radialSeparation * Math.cos(node.AngleToParent) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                            break;\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + this.options.horizontalSeparation + s.width;\n                            h = Math.max(shapeHeight, s.height);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Radial layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            h = shapeHeight + this.options.verticalSeparation + s.height;\n                            w = Math.max(shapeWidth, s.width);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                } else {\n                    var i, childNode;\n                    switch (node.treeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = shapeWidth;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                h += s.height + this.options.verticalSeparation;\n                            }\n                            h -= this.options.verticalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Right layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = 0;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w += s.width + this.options.horizontalSeparation;\n                                h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                            }\n                            w -= this.options.horizontalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                }\n                node.SectorAngle = Math.sqrt(w * w / 4 + h * h / 4);\n                node.Size = result;\n                return result;\n            },\n            arrange: function (n, p) {\n                var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (Utils.isEmpty(n.children)) {\n                    n.x = p.x;\n                    n.y = p.y;\n                    n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n                } else {\n                    var x, y;\n                    var selfLocation;\n                    switch (n.treeDirection) {\n                    case 'Left':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                node = node.children[i];\n                                x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = selfLocation.x - this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x - node.Size.width, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Right':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Up':\n                        selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + (shapeWidth - childrenwidth) / 2;\n                        } else {\n                            x = p.x;\n                        }\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n                    case 'Down':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                childrenwidth = 0;\n                                for (i = 0; i < n.children.length; i++) {\n                                    child = n.children[i];\n                                    childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                }\n                                childrenwidth -= this.options.horizontalSeparation;\n                                x = p.x + (shapeWidth - childrenwidth) / 2;\n                            } else {\n                                x = p.x;\n                            }\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                x += node.Size.width + this.options.horizontalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'None':\n                        break;\n                    default:\n                        throw 'Unsupported TreeDirection';\n                    }\n                }\n            },\n            layoutSwitch: function () {\n                if (!this.center) {\n                    return;\n                }\n                if (Utils.isEmpty(this.center.children)) {\n                    return;\n                }\n                var type = this.options.subtype;\n                if (Utils.isUndefined(type)) {\n                    type = 'Down';\n                }\n                var single, male, female, leftcount;\n                var children = this.center.children;\n                switch (type.toLowerCase()) {\n                case 'radial':\n                case 'radialtree':\n                    this.layoutRadialTree();\n                    break;\n                case 'mindmaphorizontal':\n                case 'mindmap':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n                case 'mindmapvertical':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n                case 'right':\n                    this.layoutRight(this.center.children);\n                    break;\n                case 'left':\n                    this.layoutLeft(this.center.children);\n                    break;\n                case 'up':\n                case 'bottom':\n                    this.layoutUp(this.center.children);\n                    break;\n                case 'down':\n                case 'top':\n                    this.layoutDown(this.center.children);\n                    break;\n                case 'tipover':\n                case 'tipovertree':\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw 'The tip-over level should be a positive integer.';\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n                case 'undefined':\n                case 'none':\n                    break;\n                }\n            }\n        });\n        var TreeLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                this.graph = adapter.convert();\n                var finalNodeSet = this.layoutComponents();\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutComponents: function () {\n                if (this.graph.isEmpty()) {\n                    return;\n                }\n                var components = this.graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                var layout = new TreeLayoutProcessor(this.options);\n                var trees = [];\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    var treeGraph = this.getTree(component);\n                    if (!treeGraph) {\n                        throw 'Failed to find a spanning tree for the component.';\n                    }\n                    var root = treeGraph.root;\n                    var tree = treeGraph.tree;\n                    layout.layout(tree, root);\n                    trees.push(tree);\n                }\n                return this.gridLayoutComponents(trees);\n            },\n            getTree: function (graph) {\n                var root = null;\n                if (this.options.roots && this.options.roots.length > 0) {\n                    for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                        var node = graph.nodes[i];\n                        for (var j = 0; j < this.options.roots.length; j++) {\n                            var givenRootShape = this.options.roots[j];\n                            if (givenRootShape === node.associatedShape) {\n                                root = node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!root) {\n                    root = graph.root();\n                    if (!root) {\n                        throw 'Unable to find a root for the tree.';\n                    }\n                }\n                return this.getTreeForRoot(graph, root);\n            },\n            getTreeForRoot: function (graph, root) {\n                var tree = graph.getSpanningTree(root);\n                if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                    return null;\n                }\n                return {\n                    tree: tree,\n                    root: tree.root\n                };\n            }\n        });\n        var LayeredLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            _initRuntimeProperties: function () {\n                for (var k = 0; k < this.graph.nodes.length; k++) {\n                    var node = this.graph.nodes[k];\n                    node.layer = -1;\n                    node.downstreamLinkCount = 0;\n                    node.upstreamLinkCount = 0;\n                    node.isVirtual = false;\n                    node.uBaryCenter = 0;\n                    node.dBaryCenter = 0;\n                    node.upstreamPriority = 0;\n                    node.downstreamPriority = 0;\n                    node.gridPosition = 0;\n                }\n            },\n            _prepare: function (graph) {\n                var current = [], i, l, link;\n                var layerMap = new Dictionary();\n                var layerCount = 0;\n                var targetLayer, next, target;\n                Utils.forEach(graph.nodes, function (node) {\n                    if (node.incoming.length === 0) {\n                        layerMap.set(node, 0);\n                        current.push(node);\n                    }\n                });\n                while (current.length > 0) {\n                    next = current.shift();\n                    for (i = 0; i < next.outgoing.length; i++) {\n                        link = next.outgoing[i];\n                        target = link.target;\n                        if (layerMap.containsKey(target)) {\n                            targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                        } else {\n                            targetLayer = layerMap.get(next) + 1;\n                        }\n                        layerMap.set(target, targetLayer);\n                        if (targetLayer > layerCount) {\n                            layerCount = targetLayer;\n                        }\n                        if (!contains(current, target)) {\n                            current.push(target);\n                        }\n                    }\n                }\n                var sortedNodes = layerMap.keys();\n                sortedNodes.sort(function (o1, o2) {\n                    var o1layer = layerMap.get(o1);\n                    var o2layer = layerMap.get(o2);\n                    return Utils.sign(o2layer - o1layer);\n                });\n                for (var n = 0; n < sortedNodes.length; ++n) {\n                    var node = sortedNodes[n];\n                    var minLayer = Number.MAX_VALUE;\n                    if (node.outgoing.length === 0) {\n                        continue;\n                    }\n                    for (l = 0; l < node.outgoing.length; ++l) {\n                        link = node.outgoing[l];\n                        minLayer = Math.min(minLayer, layerMap.get(link.target));\n                    }\n                    if (minLayer > 1) {\n                        layerMap.set(node, minLayer - 1);\n                    }\n                }\n                this.layers = [];\n                var layer;\n                for (i = 0; i < layerCount + 1; i++) {\n                    layer = [];\n                    layer.linksTo = {};\n                    this.layers.push(layer);\n                }\n                layerMap.forEach(function (node, layer) {\n                    node.layer = layer;\n                    this.layers[layer].push(node);\n                }, this);\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (i = 0; i < layer.length; i++) {\n                        layer[i].gridPosition = i;\n                    }\n                }\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph given or graph analysis of the diagram failed.';\n                }\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                graph.setItemIndices();\n                var reversedEdges = graph.makeAcyclic();\n                this._initRuntimeProperties();\n                this._prepare(graph, options);\n                this._dummify();\n                this._optimizeCrossings();\n                this._swapPairs();\n                this.arrangeNodes();\n                this._moveThingsAround();\n                this._dedummify();\n                Utils.forEach(reversedEdges, function (e) {\n                    if (e.points) {\n                        e.points.reverse();\n                    }\n                });\n            },\n            setMinDist: function (m, n, minDist) {\n                var l = m.layer;\n                var i = m.layerIndex;\n                this.minDistances[l][i] = minDist;\n            },\n            getMinDist: function (m, n) {\n                var dist = 0, i1 = m.layerIndex, i2 = n.layerIndex, l = m.layer, min = Math.min(i1, i2), max = Math.max(i1, i2);\n                for (var k = min; k < max; ++k) {\n                    dist += this.minDistances[l][k];\n                }\n                return dist;\n            },\n            placeLeftToRight: function (leftClasses) {\n                var leftPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = leftClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!leftPos.containsKey(node)) {\n                            this.placeLeft(node, leftPos, c);\n                        }\n                    }\n                    var d = Number.POSITIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var rightSibling = this.rightSibling(node);\n                        if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                            d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                        }\n                    }\n                    if (d === Number.POSITIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeLeftClass.get(neighbor) < c) {\n                                    D.push(leftPos.get(neighbor) - leftPos.get(node));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        leftPos.set(node, leftPos.get(node) + d);\n                    }\n                }\n                return leftPos;\n            },\n            placeRightToLeft: function (rightClasses) {\n                var rightPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = rightClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!rightPos.containsKey(node)) {\n                            this.placeRight(node, rightPos, c);\n                        }\n                    }\n                    var d = Number.NEGATIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var leftSibling = this.leftSibling(node);\n                        if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                            d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                        }\n                    }\n                    if (d === Number.NEGATIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeRightClass.get(neighbor) < c) {\n                                    D.push(rightPos.get(node) - rightPos.get(neighbor));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        rightPos.set(node, rightPos.get(node) + d);\n                    }\n                }\n                return rightPos;\n            },\n            _getLeftWing: function () {\n                var leftWing = { value: null };\n                var result = this.computeClasses(leftWing, 1);\n                this.nodeLeftClass = leftWing.value;\n                return result;\n            },\n            _getRightWing: function () {\n                var rightWing = { value: null };\n                var result = this.computeClasses(rightWing, -1);\n                this.nodeRightClass = rightWing.value;\n                return result;\n            },\n            computeClasses: function (wingPair, d) {\n                var currentWing = 0, wing = wingPair.value = new Dictionary();\n                for (var l = 0; l < this.layers.length; ++l) {\n                    currentWing = l;\n                    var layer = this.layers[l];\n                    for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                        var node = layer[n];\n                        if (!wing.containsKey(node)) {\n                            wing.set(node, currentWing);\n                            if (node.isVirtual) {\n                                var ndsinl = this._nodesInLink(node);\n                                for (var kk = 0; kk < ndsinl.length; kk++) {\n                                    var vnode = ndsinl[kk];\n                                    wing.set(vnode, currentWing);\n                                }\n                            }\n                        } else {\n                            currentWing = wing.get(node);\n                        }\n                    }\n                }\n                var wings = [];\n                for (var i = 0; i < this.layers.length; i++) {\n                    wings.push(null);\n                }\n                wing.forEach(function (node, classIndex) {\n                    if (wings[classIndex] === null) {\n                        wings[classIndex] = [];\n                    }\n                    wings[classIndex].push(node);\n                });\n                return wings;\n            },\n            _isVerticalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'up' || this.options.subtype.toLowerCase() === 'down' || this.options.subtype.toLowerCase() === 'vertical';\n            },\n            _isHorizontalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'left' || this.options.subtype.toLowerCase() === 'horizontal';\n            },\n            _isIncreasingLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'down';\n            },\n            _moveThingsAround: function () {\n                var i, l, node, layer, n, w;\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    layer.sort(this._gridPositionComparer);\n                }\n                this.minDistances = [];\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    this.minDistances[l] = [];\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        node.layerIndex = n;\n                        this.minDistances[l][n] = this.options.nodeDistance;\n                        if (n < layer.length - 1) {\n                            if (this._isVerticalLayout()) {\n                                this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                            } else {\n                                this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                            }\n                        }\n                    }\n                }\n                this.downNodes = new Dictionary();\n                this.upNodes = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    this.downNodes.set(node, []);\n                    this.upNodes.set(node, []);\n                }, this);\n                Utils.forEach(this.graph.links, function (link) {\n                    var origin = link.source;\n                    var dest = link.target;\n                    var down = null, up = null;\n                    if (origin.layer > dest.layer) {\n                        down = link.source;\n                        up = link.target;\n                    } else {\n                        up = link.source;\n                        down = link.target;\n                    }\n                    this.downNodes.get(up).push(down);\n                    this.upNodes.get(down).push(up);\n                }, this);\n                this.downNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                this.upNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                for (l = 0; l < this.layers.length - 1; ++l) {\n                    layer = this.layers[l];\n                    for (w = 0; w < layer.length - 1; w++) {\n                        var currentNode = layer[w];\n                        if (!currentNode.isVirtual) {\n                            continue;\n                        }\n                        var currDown = this.downNodes.get(currentNode)[0];\n                        if (!currDown.isVirtual) {\n                            continue;\n                        }\n                        for (n = w + 1; n < layer.length; ++n) {\n                            node = layer[n];\n                            if (!node.isVirtual) {\n                                continue;\n                            }\n                            var downNode = this.downNodes.get(node)[0];\n                            if (!downNode.isVirtual) {\n                                continue;\n                            }\n                            if (currDown.gridPosition > downNode.gridPosition) {\n                                var pos = currDown.gridPosition;\n                                currDown.gridPosition = downNode.gridPosition;\n                                downNode.gridPosition = pos;\n                                var i1 = currDown.layerIndex;\n                                var i2 = downNode.layerIndex;\n                                this.layers[l + 1][i1] = downNode;\n                                this.layers[l + 1][i2] = currDown;\n                                currDown.layerIndex = i2;\n                                downNode.layerIndex = i1;\n                            }\n                        }\n                    }\n                }\n                var leftClasses = this._getLeftWing();\n                var rightClasses = this._getRightWing();\n                var leftPos = this.placeLeftToRight(leftClasses);\n                var rightPos = this.placeRightToLeft(rightClasses);\n                var x = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n                });\n                var order = new Dictionary();\n                var placed = new Dictionary();\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    var sequenceStart = -1, sequenceEnd = -1;\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        order.set(node, 0);\n                        placed.set(node, false);\n                        if (node.isVirtual) {\n                            if (sequenceStart === -1) {\n                                sequenceStart = n;\n                            } else if (sequenceStart === n - 1) {\n                                sequenceStart = n;\n                            } else {\n                                sequenceEnd = n;\n                                order.set(layer[sequenceStart], 0);\n                                if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                    placed.set(layer[sequenceStart], true);\n                                } else {\n                                    placed.set(layer[sequenceStart], false);\n                                }\n                                sequenceStart = n;\n                            }\n                        }\n                    }\n                }\n                var directions = [\n                    1,\n                    -1\n                ];\n                Utils.forEach(directions, function (d) {\n                    var start = d === 1 ? 0 : this.layers.length - 1;\n                    for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                        var layer = this.layers[l];\n                        var virtualStartIndex = this._firstVirtualNode(layer);\n                        var virtualStart = null;\n                        var sequence = null;\n                        if (virtualStartIndex !== -1) {\n                            virtualStart = layer[virtualStartIndex];\n                            sequence = [];\n                            for (i = 0; i < virtualStartIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                        } else {\n                            virtualStart = null;\n                            sequence = layer;\n                        }\n                        if (sequence.length > 0) {\n                            this._sequencer(x, null, virtualStart, d, sequence);\n                            for (i = 0; i < sequence.length - 1; ++i) {\n                                this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                            }\n                            if (virtualStart) {\n                                this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                            }\n                        }\n                        while (virtualStart) {\n                            var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                            if (!virtualEnd) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, null, d, sequence);\n                                    for (i = 0; i < sequence.length - 1; ++i) {\n                                        this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                    }\n                                    this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                                }\n                            } else if (order.get(virtualStart) === d) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                var virtualEndIndex = virtualEnd.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                                }\n                                placed.set(virtualStart, true);\n                            }\n                            virtualStart = virtualEnd;\n                        }\n                        this.adjustDirections(l, d, order, placed);\n                    }\n                }, this);\n                var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n                var reachedFinalLayerIndex = function (k, ctx) {\n                    if (ctx._isIncreasingLayout()) {\n                        return k < ctx.layers.length;\n                    } else {\n                        return k >= 0;\n                    }\n                };\n                var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n                function maximumHeight(layer, ctx) {\n                    var height = Number.MIN_VALUE;\n                    for (var n = 0; n < layer.length; ++n) {\n                        var node = layer[n];\n                        if (ctx._isVerticalLayout()) {\n                            height = Math.max(height, node.height);\n                        } else {\n                            height = Math.max(height, node.width);\n                        }\n                    }\n                    return height;\n                }\n                for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                    layer = this.layers[i];\n                    var height = maximumHeight(layer, this);\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (this._isVerticalLayout()) {\n                            node.x = x.get(node);\n                            node.y = offset + height / 2;\n                        } else {\n                            node.x = offset + height / 2;\n                            node.y = x.get(node);\n                        }\n                    }\n                    offset += this.options.layerSeparation + height;\n                }\n            },\n            adjustDirections: function (l, d, order, placed) {\n                if (l + d < 0 || l + d >= this.layers.length) {\n                    return;\n                }\n                var prevBridge = null, prevBridgeTarget = null;\n                var layer = this.layers[l + d];\n                for (var n = 0; n < layer.length; ++n) {\n                    var nextBridge = layer[n];\n                    if (nextBridge.isVirtual) {\n                        var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                        if (nextBridgeTarget.isVirtual) {\n                            if (prevBridge) {\n                                var p = placed.get(prevBridgeTarget);\n                                var clayer = this.layers[l];\n                                var i1 = prevBridgeTarget.layerIndex;\n                                var i2 = nextBridgeTarget.layerIndex;\n                                for (var i = i1 + 1; i < i2; ++i) {\n                                    if (clayer[i].isVirtual) {\n                                        p = p && placed.get(clayer[i]);\n                                    }\n                                }\n                                if (p) {\n                                    order.set(prevBridge, d);\n                                    var j1 = prevBridge.layerIndex;\n                                    var j2 = nextBridge.layerIndex;\n                                    for (var j = j1 + 1; j < j2; ++j) {\n                                        if (layer[j].isVirtual) {\n                                            order.set(layer[j], d);\n                                        }\n                                    }\n                                }\n                            }\n                            prevBridge = nextBridge;\n                            prevBridgeTarget = nextBridgeTarget;\n                        }\n                    }\n                }\n            },\n            getNeighborOnLayer: function (node, l) {\n                var neighbor = this.upNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                neighbor = this.downNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                return null;\n            },\n            _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n                if (sequence.length === 1) {\n                    this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n                }\n                if (sequence.length > 1) {\n                    var r = sequence.length, t = this.intDiv(r, 2);\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                    this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n                }\n            },\n            _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n                var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n                var n = neighbors.length;\n                if (n !== 0) {\n                    if (n % 2 === 1) {\n                        x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                    } else {\n                        x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                    }\n                    if (virtualStart) {\n                        x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                    }\n                    if (virtualEnd) {\n                        x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                    }\n                }\n            },\n            combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n                for (i = 0; i < t; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) >= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            leftHeap.push({\n                                k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]),\n                                v: 2\n                            });\n                        }\n                    }\n                    leftHeap.push({\n                        k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]),\n                        v: c\n                    });\n                }\n                if (virtualStart) {\n                    leftHeap.push({\n                        k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                leftHeap.sort(this._positionDescendingComparer);\n                var rightHeap = [];\n                for (i = t; i < r; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) <= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            rightHeap.push({\n                                k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]),\n                                v: 2\n                            });\n                        }\n                    }\n                    rightHeap.push({\n                        k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]),\n                        v: c\n                    });\n                }\n                if (virtualEnd) {\n                    rightHeap.push({\n                        k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                rightHeap.sort(this._positionAscendingComparer);\n                var leftRes = 0, rightRes = 0;\n                var m = this.getMinDist(sequence[t - 1], sequence[t]);\n                while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                    if (leftRes < rightRes) {\n                        if (leftHeap.length === 0) {\n                            x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                            break;\n                        } else {\n                            pair = leftHeap.shift();\n                            leftRes = leftRes + pair.v;\n                            x.set(sequence[t - 1], pair.k);\n                            x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                        }\n                    } else {\n                        if (rightHeap.length === 0) {\n                            x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                            break;\n                        } else {\n                            pair = rightHeap.shift();\n                            rightRes = rightRes + pair.v;\n                            x.set(sequence[t], pair.k);\n                            x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                        }\n                    }\n                }\n                for (i = t - 2; i >= 0; i--) {\n                    x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n                }\n                for (i = t + 1; i < r; i++) {\n                    x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n                }\n            },\n            placeLeft: function (node, leftPos, leftClass) {\n                var pos = Number.NEGATIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var leftSibling = this.leftSibling(v);\n                    if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                        if (!leftPos.containsKey(leftSibling)) {\n                            this.placeLeft(leftSibling, leftPos, leftClass);\n                        }\n                        pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                    }\n                }, this);\n                if (pos === Number.NEGATIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    leftPos.set(v, pos);\n                });\n            },\n            placeRight: function (node, rightPos, rightClass) {\n                var pos = Number.POSITIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var rightSibling = this.rightSibling(v);\n                    if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                        if (!rightPos.containsKey(rightSibling)) {\n                            this.placeRight(rightSibling, rightPos, rightClass);\n                        }\n                        pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                    }\n                }, this);\n                if (pos === Number.POSITIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    rightPos.set(v, pos);\n                });\n            },\n            leftSibling: function (node) {\n                var layer = this.layers[node.layer], layerIndex = node.layerIndex;\n                return layerIndex === 0 ? null : layer[layerIndex - 1];\n            },\n            rightSibling: function (node) {\n                var layer = this.layers[node.layer];\n                var layerIndex = node.layerIndex;\n                return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n            },\n            _getComposite: function (node) {\n                return node.isVirtual ? this._nodesInLink(node) : [node];\n            },\n            arrangeNodes: function () {\n                var i, l, ni, layer, node;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.upstreamPriority = node.upstreamLinkCount;\n                        node.downstreamPriority = node.downstreamLinkCount;\n                    }\n                }\n                var maxLayoutIterations = 2;\n                for (var it = 0; it < maxLayoutIterations; it++) {\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        this.layoutLayer(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        this.layoutLayer(true, i);\n                    }\n                }\n                var gridPos = Number.MAX_VALUE;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        gridPos = Math.min(gridPos, node.gridPosition);\n                    }\n                }\n                if (gridPos < 0) {\n                    for (l = 0; l < this.layers.length; l++) {\n                        layer = this.layers[l];\n                        for (ni = 0; ni < layer.length; ni++) {\n                            node = layer[ni];\n                            node.gridPosition = node.gridPosition - gridPos;\n                        }\n                    }\n                }\n            },\n            layoutLayer: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var sorted = [];\n                for (var n = 0; n < considered.length; n++) {\n                    sorted.push(considered[n]);\n                }\n                sorted.sort(function (n1, n2) {\n                    var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                    var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n                    if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                        return 0;\n                    }\n                    if (n1Priority < n2Priority) {\n                        return 1;\n                    }\n                    return -1;\n                });\n                Utils.forEach(sorted, function (node) {\n                    var nodeGridPos = node.gridPosition;\n                    var nodeBaryCenter = this.calcBaryCenter(node);\n                    var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                        return;\n                    }\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                        return;\n                    }\n                    if (nodeGridPos < nodeBaryCenter) {\n                        while (nodeGridPos < nodeBaryCenter) {\n                            if (!this.moveRight(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    } else {\n                        while (nodeGridPos > nodeBaryCenter) {\n                            if (!this.moveLeft(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    }\n                }, this);\n                if (iconsidered > 0) {\n                    this.calcDownData(iconsidered - 1);\n                }\n                if (iconsidered < this.layers.length - 1) {\n                    this.calcUpData(iconsidered + 1);\n                }\n            },\n            moveRight: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === layer.length - 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                var rightNode = layer[index + 1];\n                var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n                if (rightNode.gridPosition > node.gridPosition + 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                if (rightNodePriority > priority || Math.abs(rightNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveRight(rightNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                return false;\n            },\n            moveLeft: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === 0) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                var leftNode = layer[index - 1];\n                var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n                if (leftNode.gridPosition < node.gridPosition - 1) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                if (leftNodePriority > priority || Math.abs(leftNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveLeft(leftNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                return false;\n            },\n            mapVirtualNode: function (node, link) {\n                this.nodeToLinkMap.set(node, link);\n                if (!this.linkToNodeMap.containsKey(link)) {\n                    this.linkToNodeMap.set(link, []);\n                }\n                this.linkToNodeMap.get(link).push(node);\n            },\n            _nodesInLink: function (node) {\n                return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n            },\n            _dummify: function () {\n                this.linkToNodeMap = new Dictionary();\n                this.nodeToLinkMap = new Dictionary();\n                var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n                var layers = this.layers;\n                var addLinkBetweenLayers = function (upLayer, downLayer, link) {\n                    layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                    layers[upLayer].linksTo[downLayer].push(link);\n                };\n                for (l = 0; l < links.length; l++) {\n                    var link = links[l];\n                    var o = link.source;\n                    var d = link.target;\n                    var oLayer = o.layer;\n                    var dLayer = d.layer;\n                    var oPos = o.gridPosition;\n                    var dPos = d.gridPosition;\n                    var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n                    var p = o;\n                    if (oLayer - dLayer > 1) {\n                        for (i = oLayer - 1; i > dLayer; i--) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - dLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                        link.changeSource(p);\n                        link.depthOfDumminess = oLayer - dLayer - 1;\n                    } else if (oLayer - dLayer < -1) {\n                        for (i = oLayer + 1; i < dLayer; i++) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - oLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            pos &= pos;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, link);\n                        link.changeSource(p);\n                        link.depthOfDumminess = dLayer - oLayer - 1;\n                    } else {\n                        addLinkBetweenLayers(oLayer, dLayer, link);\n                    }\n                }\n            },\n            _dedummify: function () {\n                var dedum = true;\n                while (dedum) {\n                    dedum = false;\n                    for (var l = 0; l < this.graph.links.length; l++) {\n                        var link = this.graph.links[l];\n                        if (!link.depthOfDumminess) {\n                            continue;\n                        }\n                        var points = [];\n                        points.unshift({\n                            x: link.target.x,\n                            y: link.target.y\n                        });\n                        points.unshift({\n                            x: link.source.x,\n                            y: link.source.y\n                        });\n                        var temp = link;\n                        var depthOfDumminess = link.depthOfDumminess;\n                        for (var d = 0; d < depthOfDumminess; d++) {\n                            var node = temp.source;\n                            var prevLink = node.incoming[0];\n                            points.unshift({\n                                x: prevLink.source.x,\n                                y: prevLink.source.y\n                            });\n                            temp = prevLink;\n                        }\n                        link.changeSource(temp.source);\n                        link.depthOfDumminess = 0;\n                        if (points.length > 2) {\n                            points.splice(0, 1);\n                            points.splice(points.length - 1);\n                            link.points = points;\n                        } else {\n                            link.points = [];\n                        }\n                        dedum = true;\n                        break;\n                    }\n                }\n            },\n            _optimizeCrossings: function () {\n                var moves = -1, i;\n                var maxIterations = 3;\n                var iter = 0;\n                while (moves !== 0) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    moves = 0;\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        moves += this.optimizeLayerCrossings(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        moves += this.optimizeLayerCrossings(true, i);\n                    }\n                }\n            },\n            calcUpData: function (layer) {\n                if (layer === 0) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var upLayer = new Set();\n                var temp = this.layers[layer - 1];\n                for (i = 0; i < temp.length; i++) {\n                    upLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (upLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (upLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.uBaryCenter = sum / total;\n                        node.upstreamLinkCount = total;\n                    } else {\n                        node.uBaryCenter = i;\n                        node.upstreamLinkCount = 0;\n                    }\n                }\n            },\n            calcDownData: function (layer) {\n                if (layer === this.layers.length - 1) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var downLayer = new Set();\n                var temp = this.layers[layer + 1];\n                for (i = 0; i < temp.length; i++) {\n                    downLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (downLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (downLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.dBaryCenter = sum / total;\n                        node.downstreamLinkCount = total;\n                    } else {\n                        node.dBaryCenter = i;\n                        node.downstreamLinkCount = 0;\n                    }\n                }\n            },\n            optimizeLayerCrossings: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var presorted = considered.slice(0);\n                if (down) {\n                    this.calcUpData(iconsidered);\n                } else {\n                    this.calcDownData(iconsidered);\n                }\n                var that = this;\n                considered.sort(function (n1, n2) {\n                    var n1BaryCenter = that.calcBaryCenter(n1), n2BaryCenter = that.calcBaryCenter(n2);\n                    if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                        if (n1.degree() === n2.degree()) {\n                            return that.compareByIndex(n1, n2);\n                        } else if (n1.degree() < n2.degree()) {\n                            return 1;\n                        }\n                        return -1;\n                    }\n                    var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                    if (compareValue > 0) {\n                        return -1;\n                    } else if (compareValue < 0) {\n                        return 1;\n                    }\n                    return that.compareByIndex(n1, n2);\n                });\n                var i, moves = 0;\n                for (i = 0; i < considered.length; i++) {\n                    if (considered[i] !== presorted[i]) {\n                        moves++;\n                    }\n                }\n                if (moves > 0) {\n                    var inode = 0;\n                    for (i = 0; i < considered.length; i++) {\n                        var node = considered[i];\n                        node.gridPosition = inode++;\n                    }\n                }\n                return moves;\n            },\n            _swapPairs: function () {\n                var maxIterations = this.options.layeredIterations;\n                var iter = 0;\n                while (true) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    var downwards = iter % 4 <= 1;\n                    var secondPass = iter % 4 === 1;\n                    for (var l = downwards ? 0 : this.layers.length - 1; downwards ? l <= this.layers.length - 1 : l >= 0; l += downwards ? 1 : -1) {\n                        var layer = this.layers[l];\n                        var hasSwapped = false;\n                        var calcCrossings = true;\n                        var memCrossings = 0;\n                        for (var n = 0; n < layer.length - 1; n++) {\n                            var up = 0;\n                            var down = 0;\n                            var crossBefore = 0;\n                            if (calcCrossings) {\n                                if (l !== 0) {\n                                    up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                                }\n                                if (l !== this.layers.length - 1) {\n                                    down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                                }\n                                if (downwards) {\n                                    up *= 2;\n                                } else {\n                                    down *= 2;\n                                }\n                                crossBefore = up + down;\n                            } else {\n                                crossBefore = memCrossings;\n                            }\n                            if (crossBefore === 0) {\n                                continue;\n                            }\n                            var node1 = layer[n];\n                            var node2 = layer[n + 1];\n                            var node1GridPos = node1.gridPosition;\n                            var node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n                            up = 0;\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            down = 0;\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            } else {\n                                down *= 2;\n                            }\n                            var crossAfter = up + down;\n                            var revert = false;\n                            if (secondPass) {\n                                revert = crossAfter >= crossBefore;\n                            } else {\n                                revert = crossAfter > crossBefore;\n                            }\n                            if (revert) {\n                                node1 = layer[n];\n                                node2 = layer[n + 1];\n                                node1GridPos = node1.gridPosition;\n                                node2GridPos = node2.gridPosition;\n                                layer[n] = node2;\n                                layer[n + 1] = node1;\n                                node1.gridPosition = node2GridPos;\n                                node2.gridPosition = node1GridPos;\n                                memCrossings = crossBefore;\n                                calcCrossings = false;\n                            } else {\n                                hasSwapped = true;\n                                calcCrossings = true;\n                            }\n                        }\n                        if (hasSwapped) {\n                            if (l !== this.layers.length - 1) {\n                                this.calcUpData(l + 1);\n                            }\n                            if (l !== 0) {\n                                this.calcDownData(l - 1);\n                            }\n                        }\n                    }\n                }\n            },\n            countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n                var links = this.layers[ulayer].linksTo[dlayer];\n                var link1, link2, n11, n12, n21, n22, l1, l2;\n                var crossings = 0;\n                var length = links.length;\n                for (l1 = 0; l1 < length; l1++) {\n                    link1 = links[l1];\n                    for (l2 = l1 + 1; l2 < length; l2++) {\n                        link2 = links[l2];\n                        if (link1.target.layer === dlayer) {\n                            n11 = link1.source;\n                            n12 = link1.target;\n                        } else {\n                            n11 = link1.target;\n                            n12 = link1.source;\n                        }\n                        if (link2.target.layer === dlayer) {\n                            n21 = link2.source;\n                            n22 = link2.target;\n                        } else {\n                            n21 = link2.target;\n                            n22 = link2.source;\n                        }\n                        var n11gp = n11.gridPosition;\n                        var n12gp = n12.gridPosition;\n                        var n21gp = n21.gridPosition;\n                        var n22gp = n22.gridPosition;\n                        if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                            crossings++;\n                        }\n                    }\n                }\n                return crossings;\n            },\n            calcBaryCenter: function (node) {\n                var upstreamLinkCount = node.upstreamLinkCount;\n                var downstreamLinkCount = node.downstreamLinkCount;\n                var uBaryCenter = node.uBaryCenter;\n                var dBaryCenter = node.dBaryCenter;\n                if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                    return (uBaryCenter + dBaryCenter) / 2;\n                }\n                if (upstreamLinkCount > 0) {\n                    return uBaryCenter;\n                }\n                if (downstreamLinkCount > 0) {\n                    return dBaryCenter;\n                }\n                return 0;\n            },\n            _gridPositionComparer: function (x, y) {\n                if (x.gridPosition < y.gridPosition) {\n                    return -1;\n                }\n                if (x.gridPosition > y.gridPosition) {\n                    return 1;\n                }\n                return 0;\n            },\n            _positionAscendingComparer: function (x, y) {\n                return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n            },\n            _positionDescendingComparer: function (x, y) {\n                return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n            },\n            _firstVirtualNode: function (layer) {\n                for (var c = 0; c < layer.length; c++) {\n                    if (layer[c].isVirtual) {\n                        return c;\n                    }\n                }\n                return -1;\n            },\n            compareByIndex: function (o1, o2) {\n                var i1 = o1.index;\n                var i2 = o2.index;\n                if (i1 < i2) {\n                    return 1;\n                }\n                if (i1 > i2) {\n                    return -1;\n                }\n                return 0;\n            },\n            intDiv: function (numerator, denominator) {\n                return (numerator - numerator % denominator) / denominator;\n            },\n            nextVirtualNode: function (layer, node) {\n                var nodeIndex = node.layerIndex;\n                for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                    if (layer[i].isVirtual) {\n                        return layer[i];\n                    }\n                }\n                return null;\n            }\n        });\n        var LayoutState = kendo.Class.extend({\n            init: function (diagram, graphOrNodes) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram given';\n                }\n                this.diagram = diagram;\n                this.nodeMap = new Dictionary();\n                this.linkMap = new Dictionary();\n                this.capture(graphOrNodes ? graphOrNodes : diagram);\n            },\n            capture: function (diagramOrGraphOrNodes) {\n                var node, nodes, shape, i, conn, link, links;\n                if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n                    for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                        node = diagramOrGraphOrNodes.nodes[i];\n                        shape = node.associatedShape;\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                    for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                        link = diagramOrGraphOrNodes.links[i];\n                        conn = link.associatedConnection;\n                        this.linkMap.set(conn.visual.id, link.points());\n                    }\n                } else if (diagramOrGraphOrNodes instanceof Array) {\n                    nodes = diagramOrGraphOrNodes;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                } else if (diagramOrGraphOrNodes.hasOwnProperty('links') && diagramOrGraphOrNodes.hasOwnProperty('nodes')) {\n                    nodes = diagramOrGraphOrNodes.nodes;\n                    links = diagramOrGraphOrNodes.links;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                    for (i = 0; i < links.length; i++) {\n                        link = links[i];\n                        conn = link.associatedConnection;\n                        if (conn) {\n                            this.linkMap.set(conn.visual.id, link.points);\n                        }\n                    }\n                } else {\n                    var shapes = this.diagram.shapes;\n                    var connections = this.diagram.connections;\n                    for (i = 0; i < shapes.length; i++) {\n                        shape = shapes[i];\n                        this.nodeMap.set(shape.visual.id, shape.bounds());\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        conn = connections[i];\n                        this.linkMap.set(conn.visual.id, conn.points());\n                    }\n                }\n            }\n        });\n        deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            SpringLayout: SpringLayout,\n            TreeLayout: TreeLayout,\n            GraphAdapter: DiagramToHyperTreeAdapter,\n            LayeredLayout: LayeredLayout,\n            LayoutBase: LayoutBase,\n            LayoutState: LayoutState\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/dom', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.toolbar',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.dropdownlist',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var dataviz = kendo.dataviz, draw = kendo.drawing, geom = kendo.geometry, diagram = dataviz.diagram, Widget = kendo.ui.Widget, Class = kendo.Class, proxy = $.proxy, deepExtend = kendo.deepExtend, extend = $.extend, HierarchicalDataSource = kendo.data.HierarchicalDataSource, Canvas = diagram.Canvas, Group = diagram.Group, Rectangle = diagram.Rectangle, Circle = diagram.Circle, CompositeTransform = diagram.CompositeTransform, Rect = diagram.Rect, Path = diagram.Path, DeleteShapeUnit = diagram.DeleteShapeUnit, DeleteConnectionUnit = diagram.DeleteConnectionUnit, TextBlock = diagram.TextBlock, Image = diagram.Image, Point = diagram.Point, Intersect = diagram.Intersect, ConnectionEditAdorner = diagram.ConnectionEditAdorner, UndoRedoService = diagram.UndoRedoService, ToolService = diagram.ToolService, Selector = diagram.Selector, ResizingAdorner = diagram.ResizingAdorner, ConnectorsAdorner = diagram.ConnectorsAdorner, Cursors = diagram.Cursors, Utils = diagram.Utils, Observable = kendo.Observable, ToBackUnit = diagram.ToBackUnit, ToFrontUnit = diagram.ToFrontUnit, PolylineRouter = diagram.PolylineRouter, CascadingRouter = diagram.CascadingRouter, isUndefined = Utils.isUndefined, isDefined = Utils.isDefined, defined = kendo.util.defined, isArray = $.isArray, isFunction = kendo.isFunction, isString = Utils.isString, isPlainObject = $.isPlainObject, math = Math;\n        var NS = '.kendoDiagram', CASCADING = 'cascading', ITEMBOUNDSCHANGE = 'itemBoundsChange', CHANGE = 'change', CLICK = 'click', DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ERROR = 'error', AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', MAXINT = 9007199254740992, SELECT = 'select', ITEMROTATE = 'itemRotate', PAN = 'pan', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', NONE = 'none', DEFAULT_CANVAS_WIDTH = 600, DEFAULT_CANVAS_HEIGHT = 600, DEFAULT_SHAPE_TYPE = 'rectangle', DEFAULT_SHAPE_WIDTH = 100, DEFAULT_SHAPE_HEIGHT = 100, DEFAULT_SHAPE_MINWIDTH = 20, DEFAULT_SHAPE_MINHEIGHT = 20, DEFAULT_SHAPE_POSITION = 0, DEFAULT_CONNECTION_BACKGROUND = 'Yellow', MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, ABSOLUTE = 'absolute', TRANSFORMED = 'transformed', ROTATED = 'rotated', TRANSPARENT = 'transparent', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y', MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, MOBILE_ZOOM_RATE = 0.05, MOBILE_PAN_DISTANCE = 5, BUTTON_TEMPLATE = '<a class=\"k-button k-button-icontext #=className#\" href=\"\\\\#\"><span class=\"#=iconClass# #=imageClass#\"></span>#=text#</a>', CONNECTION_CONTENT_OFFSET = 5;\n        diagram.DefaultConnectors = [\n            { name: TOP },\n            { name: BOTTOM },\n            { name: LEFT },\n            { name: RIGHT },\n            {\n                name: AUTO,\n                position: function (shape) {\n                    return shape.getPosition('center');\n                }\n            }\n        ];\n        var defaultButtons = {\n            cancel: {\n                text: 'Cancel',\n                imageClass: 'k-cancel',\n                className: 'k-diagram-cancel',\n                iconClass: 'k-icon'\n            },\n            update: {\n                text: 'Update',\n                imageClass: 'k-update',\n                className: 'k-diagram-update',\n                iconClass: 'k-icon'\n            }\n        };\n        diagram.shapeDefaults = function (extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: '',\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: { angle: 0 }\n            };\n            Utils.simpleExtend(defaults, extra);\n            return defaults;\n        };\n        function mwDelta(e) {\n            var origEvent = e.originalEvent, delta = 0;\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n            return delta;\n        }\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n        function closestConnector(point, shape) {\n            var minimumDistance = MAXINT, resCtr, ctrs = shape.connectors;\n            for (var i = 0; i < ctrs.length; i++) {\n                var ctr = ctrs[i];\n                if (!isAutoConnector(ctr)) {\n                    var dist = point.distanceTo(ctr.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = ctr;\n                    }\n                }\n            }\n            return resCtr;\n        }\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: { align: 'center middle' },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n            bounds: function () {\n            },\n            refresh: function () {\n                this.visual.redraw();\n            },\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n            toString: function () {\n                return this.options.id;\n            },\n            serialize: function () {\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n                return this.options.content.text;\n            },\n            _createContentVisual: function (options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n            _updateContentVisual: function (options) {\n                this._contentVisual.redraw(options);\n            },\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {}, elementTemplate = kendo.template(that.options.content.template, { paramName: 'dataItem' });\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n            toJSON: function () {\n                return { id: this.options.id };\n            }\n        });\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: { color: DEFAULT_CONNECTION_BACKGROUND },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(':'), id = tempStr[0], name = tempStr[1] || AUTO;\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n                that._createConnectors();\n            },\n            options: diagram.shapeDefaults(),\n            _setOptionsFromModel: function (model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n                this.redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n            updateOptionsFromModel: function (model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\n                                'x',\n                                'y',\n                                'width',\n                                'height'\n                            ])) {\n                            if (this.options.visual) {\n                                this.redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this.redrawVisual();\n                            }\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n            redrawVisual: function () {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n            updateModel: function (syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set('x', bounds.x);\n                        }\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set('y', bounds.y);\n                        }\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set('width', bounds.width);\n                        }\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set('height', bounds.height);\n                        }\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n            updateBounds: function () {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n            content: function (content) {\n                var result = this._content(content);\n                this._alignContent();\n                return result;\n            },\n            _alignContent: function () {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n            _createConnectors: function () {\n                var options = this.options, length = options.connectors.length, connectorDefaults = options.connectorDefaults, connector, i;\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(this, deepExtend({}, connectorDefaults, options.connectors[i]));\n                    this.connectors.push(connector);\n                }\n            },\n            bounds: function (value) {\n                var bounds;\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                        case TRANSFORMED:\n                            bounds = this._transformedBounds();\n                            break;\n                        case ABSOLUTE:\n                            bounds = this._transformedBounds();\n                            var pan = this.diagram._pan;\n                            bounds.x += pan.x;\n                            bounds.y += pan.y;\n                            break;\n                        case ROTATED:\n                            bounds = this._rotatedBounds();\n                            break;\n                        default:\n                            bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n                return bounds;\n            },\n            _setBounds: function (rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n                this._bounds = new Rect(x, y, width, height);\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                json.options.id = diagram.randomId();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Shape(json.options);\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            rotate: function (angle, center, undoable) {\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n                    var b = this.bounds(), sc = new Point(b.width / 2, b.height / 2), deltaAngle, newPosition;\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n                    this.refreshConnections();\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n                return rotate;\n            },\n            connections: function (type) {\n                var result = [], i, j, con, cons, ctr;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == 'out') {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == 'in') {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n                return result;\n            },\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n            getPosition: function (side) {\n                var b = this.bounds(), fnName = side.charAt(0).toLowerCase() + side.slice(1);\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n                return b.center();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n                    this.shapeVisual.redraw(this._visualOptions(options));\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n                    shapeOptions = deepExtend(shapeOptions, options);\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n            _updateConnectors: function () {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n            _diffNumericOptions: diagram.diffNumericOptions,\n            _visualOptions: function (options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {\n                        item: this,\n                        bounds: this._bounds.clone()\n                    });\n                }\n            },\n            _transformPoint: function (point) {\n                var rotate = this.rotate(), bounds = this.bounds(), tl = bounds.topLeft();\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n                return point;\n            },\n            _transformedBounds: function () {\n                var bounds = this.bounds(), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(tl, br);\n            },\n            _rotate: function () {\n                var rotation = this.options.rotation;\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n                this._rotationOffset = new Point();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint, angle = this.rotate().angle;\n                    if (value.isEmpty && !value.isEmpty()) {\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else {\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle);\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n            toJSON: function () {\n                return { shapeId: this.options.id };\n            },\n            createShapeVisual: function () {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + '').toLocaleLowerCase();\n                var shapeVisual;\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n                if (isFunction(visualTemplate)) {\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == 'rectangle') {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == 'circle') {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == 'text') {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == 'image') {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n            options: {\n                hover: { stroke: {} },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConenctor: AUTO\n            },\n            _setOptionsFromModel: function (model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n            updateOptionsFromModel: function (model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                                from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n                        this.dataItem = model;\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n            updateModel: function (syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField('from', model);\n                                clearField('fromConnector', model);\n                                model.set('fromX', this.options.fromX);\n                                model.set('fromY', this.options.fromY);\n                            } else {\n                                model.set('from', this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set('fromConnector', this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField('fromX', model);\n                                clearField('fromY', model);\n                            }\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField('to', model);\n                                clearField('toConnector', model);\n                                model.set('toX', this.options.toX);\n                                model.set('toY', this.options.toY);\n                            } else {\n                                model.set('to', this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set('toConnector', this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField('toX', model);\n                                clearField('toY', model);\n                            }\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set('type', this.options.type);\n                            }\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n            _setSource: function (source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (source !== undefined) {\n                    this.from = source;\n                }\n                this._removeFromSourceConnector();\n                if (source === null) {\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n            _setFromOptions: function (from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n            _setTarget: function (target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (target !== undefined) {\n                    this.to = target;\n                }\n                this._removeFromTargetConnector();\n                if (target === null) {\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n            _setToOptions: function (to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n            _updateConnectors: function () {\n                this._updateConnector(this.source(), 'source');\n                this._updateConnector(this.target(), 'target');\n            },\n            _updateConnector: function (instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function () {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                        setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n            content: function (content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n            _createContentVisual: function (options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n                return visual;\n            },\n            _updateContentVisual: function (options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n            _alignContent: function () {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n                    if (alignToPath && points.length > 2 && distance > 0 && (startPoint.y === endPoint.y && distance < width || startPoint.x === endPoint.x && distance < height)) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n                    var point;\n                    if (alignToPath) {\n                        var angle = kendo.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || 0 < angle && angle < 90) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n                    this._contentVisual.position(point);\n                }\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n            _initRouter: function () {\n                var type = (this.options.type || '').toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty('x') && definition.hasOwnProperty('y')) {\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw 'A Connection point needs to be a Point or an object with x and y properties.';\n                        }\n                    }\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n            _resolveConnectors: function () {\n                var connection = this, sourcePoint, targetPoint, source = connection.source(), target = connection.target(), autoSourceShape, autoTargetShape;\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        autoSourceShape = source.shape;\n                    } else {\n                        connection._resolvedSourceConnector = source;\n                        sourcePoint = source.position();\n                    }\n                }\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        autoTargetShape = target.shape;\n                    } else {\n                        connection._resolvedTargetConnector = target;\n                        targetPoint = target.position();\n                    }\n                }\n                if (sourcePoint) {\n                    if (autoTargetShape) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, autoTargetShape);\n                    }\n                } else if (autoSourceShape) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, autoSourceShape);\n                    } else if (autoTargetShape) {\n                        this._resolveAutoConnectors(autoSourceShape, autoTargetShape);\n                    }\n                }\n            },\n            _resolveAutoConnectors: function (autoSourceShape, autoTargetShape) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var sourceConnectors = autoSourceShape.connectors;\n                var targetConnectors;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n                        targetConnectors = autoTargetShape.connectors;\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n            _testRoutePoints: function (sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector), start, end, rect;\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y), math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n                    var points = this.options.points;\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n                    if (options && options.content || options.text) {\n                        this.content(options.content);\n                    }\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Connection(this.from, this.to, json.options);\n            },\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(), to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                json.options.points = this.points();\n                return json;\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n                this.path.redraw({ stroke: { color: color } });\n            },\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route();\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n                this.path.redraw({ points: [source].concat(points, [target]) });\n            },\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n            _removeFromSourceConnector: function () {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n            _removeFromTargetConnector: function () {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n            toJSON: function () {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n                that._initTheme();\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._initCanvas();\n                that.mainLayer = new Group({ id: 'main-layer' });\n                that.canvas.append(that.mainLayer);\n                that._shapesQuadTree = new ShapesQuadTree(that);\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({ id: 'adorner-layer' });\n                that.canvas.append(that.adornerLayer);\n                that._createHandlers();\n                that._initialize();\n                that._fetchFreshData();\n                that._createGlobalToolBar();\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n                that.selector = new Selector(that);\n                that._clipboard = [];\n                that.pauseMouseHandlers = false;\n                that._createOptionElements();\n                that.zoom(that.options.zoom);\n                that.canvas.draw();\n            },\n            options: {\n                name: 'Diagram',\n                theme: 'default',\n                layout: '',\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: '',\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: { key: 'ctrl' },\n                selectable: { key: 'none' },\n                tooltip: {\n                    enabled: true,\n                    format: '{0}'\n                },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: { tools: [] },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN,\n                SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                'toolBarClick',\n                'save',\n                'cancel',\n                'edit',\n                'remove',\n                'add',\n                'dataBound',\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n            items: function () {\n                return $();\n            },\n            _createGlobalToolBar: function () {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\n                            'createShape',\n                            'undo',\n                            'redo',\n                            'rotateClockwise',\n                            'rotateAnticlockwise'\n                        ];\n                    }\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n                        this.toolBar.element.css({ textAlign: 'left' });\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n            createShape: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n                    if (!this.trigger('add', { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n            _createShape: function (dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n            createConnection: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n            _createConnection: function (dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n                return connection;\n            },\n            editModel: function (dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n                if (editorType == 'shape') {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == 'connection') {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, {\n                        from: connectionSelectorHandler,\n                        to: connectionSelectorHandler\n                    }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n                this.trigger('edit', this._editArgs());\n            },\n            edit: function (item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? 'shape' : 'connection';\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n            cancelEdit: function () {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n                    this._destroyEditor();\n                }\n            },\n            saveEdit: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n            _update: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n            _cancel: function () {\n                if (this.editor && !this.trigger('cancel', this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n            _getEditDataSource: function () {\n                return this.editor.options.type === 'shape' ? this.dataSource : this.connectionsDataSource;\n            },\n            _editArgs: function () {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n            _destroyEditor: function () {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n            _initElements: function () {\n                this.wrapper = this.element.empty().css('position', 'relative').attr('tabindex', 0).addClass('k-widget k-diagram');\n                this.scrollable = $('<div />').appendTo(this.element);\n            },\n            _initDefaults: function (userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\n                        'drag',\n                        'remove',\n                        'connect'\n                    ]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\n                        'drag',\n                        'remove'\n                    ]);\n                }\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n            _initCanvas: function () {\n                var canvasContainer = $('<div class=\\'k-layer\\'></div>').appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that));\n                if (!kendo.support.touch && !kendo.support.mobileOS) {\n                    that.toolService = new ToolService(that);\n                    this.scroller.wrapper.on('mousemove' + NS, proxy(that._mouseMove, that)).on('mouseup' + NS, proxy(that._mouseUp, that)).on('mousedown' + NS, proxy(that._mouseDown, that)).on('mouseover' + NS, proxy(that._mouseover, that)).on('mouseout' + NS, proxy(that._mouseout, that));\n                    element.on('keydown' + NS, proxy(that._keydown, that));\n                } else {\n                    that._userEvents = new kendo.UserEvents(element, {\n                        multiTouch: true,\n                        tap: proxy(that._tap, that)\n                    });\n                    that._userEvents.bind([\n                        'gesturestart',\n                        'gesturechange',\n                        'gestureend'\n                    ], {\n                        gesturestart: proxy(that._gestureStart, that),\n                        gesturechange: proxy(that._gestureChange, that),\n                        gestureend: proxy(that._gestureEnd, that)\n                    });\n                    that.toolService = new ToolService(that);\n                    if (that.options.pannable !== false) {\n                        that.scroller.enable();\n                    }\n                }\n                this._syncHandler = proxy(that._syncChanges, that);\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n            _tap: function (e) {\n                var toolService = this.toolService;\n                var p = this._caculateMobilePosition(e);\n                toolService._updateHoveredItem(p);\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n                    if (this.options.selectable !== false) {\n                        this._destroyToolBar();\n                        if (item.isSelected) {\n                            item.select(false);\n                        } else {\n                            this.select(item, { addToSelection: true });\n                        }\n                        this._createToolBar();\n                    }\n                    this.trigger('click', {\n                        item: item,\n                        point: p\n                    });\n                }\n            },\n            _caculateMobilePosition: function (e) {\n                return this.documentToModel(Point(e.x.location, e.y.location));\n            },\n            _gestureStart: function (e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n            _gestureChange: function (e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n                e.preventDefault();\n            },\n            _gestureEnd: function () {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n            _resize: function () {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n            _mouseover: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n            _mouseout: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n            _initTheme: function () {\n                var that = this, themes = dataviz.ui.themes || {}, themeName = ((that.options || {}).theme || '').toLowerCase(), themeOptions = (themes[themeName] || {}).diagram;\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, { editable: (themeOptions || {}).editable });\n                }\n            },\n            _createOptionElements: function () {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n                if (shapesLength) {\n                    this._createShapes();\n                }\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n            _createShapes: function () {\n                var that = this, options = that.options, shapes = options.shapes, shape, i;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n            _createConnections: function () {\n                var diagram = this, options = diagram.options, defaults = options.connectionDefaults, connections = options.connections, conn, source, target, i;\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n            _findConnectionTarget: function (options) {\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n                return target;\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n            destroyScroller: function () {\n                var scroller = this.scroller;\n                if (!scroller) {\n                    return;\n                }\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n                return json;\n            },\n            focus: function () {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element, scrollContainer = element[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n                    element.focus();\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                }\n            },\n            load: function (options) {\n                this.clear();\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n            setOptions: function (options) {\n                deepExtend(this.options, options);\n            },\n            clear: function () {\n                var that = this;\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target, deepExtend({}, this.options.connectionDefaults, options));\n                    this.addConnection(connection);\n                }\n                return connection;\n            },\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddConnectionUnit(connection, this), false);\n                }\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n                return connection;\n            },\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n                        return connection;\n                    }\n                } else if (!this.trigger('add', { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n            addShape: function (item, undoable) {\n                var shape, shapeDefaults = this.options.shapeDefaults;\n                if (item instanceof Shape) {\n                    shape = item;\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                } else {\n                    return;\n                }\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n                return shape;\n            },\n            _addShape: function (shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n                    if (!this.trigger('add', { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger('add', { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n            remove: function (items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                    this._removeItem(shapes[i], undoable, connections);\n                }\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n                this._resumeModelRefresh();\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n            _removeShapeDataItem: function (item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n            _removeConnectionDataItem: function (item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n            _triggerRemove: function (items) {\n                var toRemove = [];\n                var item, args, editable;\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger('remove', args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n                    var addToSelection = options.addToSelection, items = [], selected = [], i, element;\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n                    this._internalSelection = true;\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [item];\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n                    this._selectionChanged(selected, []);\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n            selectAll: function () {\n                this.select(this.shapes.concat(this.connections));\n            },\n            selectArea: function (rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n            deselect: function (item) {\n                this._internalSelection = true;\n                var deselected = [], items = [], element, i;\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            bringIntoView: function (item, options) {\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n                options = deepExtend({\n                    animate: false,\n                    align: 'center middle'\n                }, options);\n                if (options.align == 'none') {\n                    options.align = 'center middle';\n                }\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n                original = rect.clone();\n                rect.zoom(this._zoom);\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n                this._zoomMainLayer();\n                current = rect.clone();\n                aligner.align(rect, options.align);\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = 'Left';\n                }\n                var items = this.select(), val, item, i;\n                if (items.length === 0) {\n                    return;\n                }\n                switch (direction.toLowerCase()) {\n                case 'left':\n                case 'top':\n                    val = MAX_VALUE;\n                    break;\n                case 'right':\n                case 'bottom':\n                    val = MIN_VALUE;\n                    break;\n                }\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                            val = math.min(val, item.options.x);\n                            break;\n                        case 'top':\n                            val = math.min(val, item.options.y);\n                            break;\n                        case 'right':\n                            val = math.max(val, item.options.x);\n                            break;\n                        case 'bottom':\n                            val = math.max(val, item.options.y);\n                            break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                        case 'right':\n                            item.position(new Point(val, item.options.y));\n                            break;\n                        case 'top':\n                        case 'bottom':\n                            item.position(new Point(item.options.x, val));\n                            break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    zoom = this._zoom = this._getValidZoom(zoom);\n                    if (!isUndefined(staticPoint)) {\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n                    this._panTransform();\n                    this._updateAdorners();\n                }\n                return this._zoom;\n            },\n            _getPan: function (pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function () {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                }\n            },\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n                if (this.toolBar) {\n                    height -= this.toolBar.element.outerHeight();\n                }\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, 'source', mapping, offset);\n                            this._updateCopiedConnection(copied, item, 'target', mapping, offset);\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n                    this._syncChanges();\n                    this._copyOffset += 1;\n                }\n            },\n            _updateCopiedConnection: function (connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function (item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + 'Point']().x + offset.x, sourceConnection[connectorName + 'Point']().y + offset.y));\n                }\n            },\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp, di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n            _containerOffset: function () {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += this.toolBar.element.outerHeight();\n                }\n                return containerOffset;\n            },\n            documentToView: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function (point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function (point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function (point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function (point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function (point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                } else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix), br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            setConnectionsDataSource: function (dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n            layout: function (options) {\n                this._layouting = true;\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = 'Tree';\n                } else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                case 'tree':\n                    l = new diagram.TreeLayout(this);\n                    break;\n                case 'layered':\n                    l = new diagram.LayeredLayout(this);\n                    break;\n                case 'forcedirected':\n                case 'force':\n                case 'spring':\n                case 'springembedder':\n                    l = new diagram.SpringLayout(this);\n                    break;\n                default:\n                    throw 'Layout algorithm \\'' + type + '\\' is not supported.';\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n            _extendLayoutOptions: function (options) {\n                if (options.layout) {\n                    options.layout = deepExtend(diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, {\n                        selected: selected,\n                        deselected: deselected\n                    });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this, pan = pos || diagram._pan;\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n            _finishPan: function () {\n                this.trigger(PAN, {\n                    total: this._pan,\n                    delta: Number.NaN\n                });\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function (canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0, conPos = toFront ? this.connections.length - 1 : 0, i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n                return result;\n            },\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n                this.mainLayer.remove(item.visual);\n            },\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector, sources = [], targets = [];\n                this.toolService._removeHover();\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n                Utils.remove(this.connections, connection);\n            },\n            _removeDataItems: function (items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n            _removeShapeConnections: function (shape) {\n                var connections = shape.connections();\n                var idx;\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n            _addDataItem: function (dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n            _addDataItemByUid: function (dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n            _addDataItems: function (items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) {\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n            _refreshSource: function (e) {\n                var that = this, node = e.node, action = e.action, items = e.items, options = that.options, idx, dataBound;\n                if (e.field) {\n                    return;\n                }\n                if (action == 'remove') {\n                    this._removeDataItems(e.items, true);\n                } else {\n                    if ((!action || action === 'itemloaded') && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n                    if (!action && !node) {\n                        that.clear();\n                    }\n                    this._addDataItems(items, node);\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n                if (options.layout && (dataBound || action == 'remove' || action == 'add')) {\n                    that.layout(options.layout);\n                }\n                if (dataBound) {\n                    this.trigger('dataBound');\n                    this._bindingRoots = false;\n                }\n            },\n            _mouseDown: function (e) {\n                var p = this._calculatePosition(e);\n                if (e.which == 1 && this.toolService.start(p, this._meta(e))) {\n                    this._destroyToolBar();\n                    e.preventDefault();\n                }\n            },\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n            _mouseUp: function (e) {\n                var p = this._calculatePosition(e);\n                if (e.which == 1 && this.toolService.end(p, this._meta(e))) {\n                    this._createToolBar();\n                    e.preventDefault();\n                }\n            },\n            _createToolBar: function () {\n                var diagram = this.toolService.diagram;\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\n                                    'edit',\n                                    'rotateClockwise',\n                                    'rotateAnticlockwise'\n                                ];\n                            } else if (element instanceof Connection) {\n                                tools = ['edit'];\n                            }\n                            if (editable && editable.remove !== false) {\n                                tools.push('delete');\n                            }\n                        }\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true\n                            });\n                            var popupWidth = this.singleToolBar._popup.element.outerWidth();\n                            var popupHeight = this.singleToolBar._popup.element.outerHeight();\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = Point(shapeBounds.x, shapeBounds.y).minus(Point((popupWidth - shapeBounds.width) / 2, popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n                                point = Point(connectionBounds.x, connectionBounds.y).minus(Point((popupWidth - connectionBounds.width - 20) / 2, popupHeight + padding));\n                            }\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n            _toolBarClick: function (e) {\n                this.trigger('toolBarClick', e);\n                this._destroyToolBar();\n            },\n            _mouseMove: function (e) {\n                if (this.pauseMouseHandlers) {\n                    return;\n                }\n                var p = this._calculatePosition(e);\n                if ((e.which === 0 || e.which == 1) && this.toolService.move(p, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _wheel: function (e) {\n                var delta = mwDelta(e), p = this._calculatePosition(e), meta = deepExtend(this._meta(e), { delta: delta });\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n            _meta: function (e) {\n                return {\n                    ctrlKey: e.ctrlKey,\n                    metaKey: e.metaKey,\n                    altKey: e.altKey,\n                    shiftKey: e.shiftKey\n                };\n            },\n            _calculatePosition: function (e) {\n                var pointEvent = e.pageX === undefined ? e.originalEvent : e, point = new Point(pointEvent.pageX, pointEvent.pageY), offset = this.documentToModel(point);\n                return offset;\n            },\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n            _dataSource: function () {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource.unbind('change', this._shapesRefreshHandler).unbind('requestStart', this._shapesRequestStartHandler).unbind('error', this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n                    this.dataSource = kendo.data.DataSource.create(ds).bind('change', this._shapesRefreshHandler).bind('requestStart', this._shapesRequestStartHandler).bind('error', this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n            _connectionDataSource: function () {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource.unbind('change', this._connectionsRefreshHandler).unbind('requestStart', this._connectionsRequestStartHandler).unbind('error', this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds).bind('change', this._connectionsRefreshHandler).bind('requestStart', this._connectionsRequestStartHandler).bind('error', this._connectionsErrorHandler);\n                }\n            },\n            _shapesRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingShapes = true;\n                }\n            },\n            _connectionsRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingConnections = true;\n                }\n            },\n            _error: function () {\n                this._loadingShapes = false;\n            },\n            _connectionsError: function () {\n                this._loadingConnections = false;\n            },\n            _refreshShapes: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === 'add') {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === 'sync') {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n            _shouldRefresh: function () {\n                return !this._suspended;\n            },\n            _suspendModelRefresh: function () {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n            _resumeModelRefresh: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n            refresh: function () {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _rebindShapesAndConnections: function () {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger('dataBound');\n            },\n            refreshConnections: function () {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _redrawConnections: function () {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n            _removeShapes: function (items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n            _syncShapes: function () {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function (inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n            _updateShapes: function (items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n            _addShapes: function (dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n            _refreshConnections: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === 'add') {\n                    this._addConnections(e.items);\n                } else if (e.action === 'sync') {\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n            _removeConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n            _updateConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n            _addConnections: function (connections, undoable) {\n                var length = connections.length;\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n            _addConnectionDataItem: function (dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n            _validateConnector: function (value) {\n                var connector;\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n                return connector;\n            },\n            _treeDataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n                that.dataSource = HierarchicalDataSource.create(dataSource).bind(CHANGE, that._refreshHandler).bind(ERROR, that._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    } else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n            _updateAdorners: function () {\n                var adorners = this._adorners;\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n            _destroyToolBar: function () {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n            _destroyGlobalToolBar: function () {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n            exportDOMVisual: function () {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform().translate(-viewBox.x, -viewBox.y);\n                var viewRect = new geom.Rect([\n                    0,\n                    0\n                ], [\n                    viewBox.width,\n                    viewBox.height\n                ]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n                clipWrap.append(wrap);\n                wrap.children.push(root);\n                return clipWrap;\n            },\n            exportVisual: function () {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({ transform: scale });\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n                return wrap;\n            },\n            _syncChanges: function () {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n            _syncShapeChanges: function () {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n            _syncConnectionChanges: function () {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function () {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            return result;\n        }\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n            return result;\n        }\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function (diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n                this.bind(this.events, options);\n            },\n            events: ['click'],\n            createPopup: function () {\n                this.container = $('<div/>').append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n            appendTools: function () {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n            createToolBar: function () {\n                this.element = $('<div/>');\n                this._toolBar = this.element.kendoToolBar({\n                    click: proxy(this.click, this),\n                    resizable: false\n                }).getKendoToolBar();\n                this.element.css('border', 'none');\n            },\n            createTools: function () {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n            createTool: function (tool) {\n                var toolName = (isPlainObject(tool) ? tool.name : tool) + 'Tool';\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(tool);\n                }\n            },\n            showAt: function (point) {\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n                }\n            },\n            hide: function () {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n            newGroup: function () {\n                return {\n                    type: 'buttonGroup',\n                    buttons: []\n                };\n            },\n            editTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-pencil',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Edit',\n                    attributes: this._setAttributes({ action: 'edit' })\n                });\n            },\n            deleteTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-close',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Delete',\n                    attributes: this._setAttributes({ action: 'delete' })\n                });\n            },\n            rotateAnticlockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotateccw',\n                    showText: 'overflow',\n                    text: 'RotateAnticlockwise',\n                    group: 'rotate',\n                    attributes: this._setAttributes({\n                        action: 'rotateAnticlockwise',\n                        step: options.step\n                    })\n                });\n            },\n            rotateClockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotatecw',\n                    attributes: this._setAttributes({\n                        action: 'rotateClockwise',\n                        step: options.step\n                    }),\n                    showText: 'overflow',\n                    text: 'RotateClockwise',\n                    group: 'rotate'\n                });\n            },\n            createShapeTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-shape',\n                    showText: 'overflow',\n                    text: 'CreateShape',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createShape' })\n                });\n            },\n            createConnectionTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-connector',\n                    showText: 'overflow',\n                    text: 'CreateConnection',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createConnection' })\n                });\n            },\n            undoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-undo',\n                    showText: 'overflow',\n                    text: 'Undo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'undo' })\n                });\n            },\n            redoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-redo',\n                    showText: 'overflow',\n                    text: 'Redo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'redo' })\n                });\n            },\n            _appendGroup: function (name) {\n                var prop = '_' + name + 'Group';\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n            _setAttributes: function (attributes) {\n                var attr = {};\n                if (attributes.action) {\n                    attr[kendo.attr('action')] = attributes.action;\n                }\n                if (attributes.step) {\n                    attr[kendo.attr('step')] = attributes.step;\n                }\n                return attr;\n            },\n            _getAttributes: function (element) {\n                var attr = {};\n                var action = element.attr(kendo.attr('action'));\n                if (action) {\n                    attr.action = action;\n                }\n                var step = element.attr(kendo.attr('step'));\n                if (step) {\n                    attr.step = step;\n                }\n                return attr;\n            },\n            click: function (e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n                if (action) {\n                    this[action](attributes);\n                }\n                this.trigger('click', this.eventData(action));\n            },\n            eventData: function (action) {\n                var element = this.selectedElements(), shapes = [], connections = [];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action\n                };\n            },\n            'delete': function () {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n            edit: function () {\n                this.diagram.edit(this.selectedElements()[0]);\n            },\n            rotateClockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n            rotateAnticlockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n            _rotate: function (angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n            selectedElements: function () {\n                return this.diagram.select();\n            },\n            createShape: function () {\n                this.diagram.createShape();\n            },\n            createConnection: function () {\n                this.diagram.createConnection();\n            },\n            undo: function () {\n                this.diagram.undo();\n            },\n            redo: function () {\n                this.diagram.redo();\n            },\n            destroy: function () {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n            options: { editors: {} },\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n            _isEditable: function (field) {\n                return this.model.editable && this.model.editable(field);\n            },\n            _getFields: function () {\n                var fields = [];\n                var modelFields = this.model.fields;\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n                this.open();\n            },\n            events: [\n                'update',\n                'cancel'\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid);\n                var formContent = '';\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n                formContent += this._renderButtons();\n                this.wrapper.append($('<div class=\"k-edit-form-container\"/>').append(formContent));\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        e.sender.element.focus();\n                        that._cancelClick(e);\n                    }\n                });\n                this._attachButtonEvents();\n            },\n            _renderTemplate: function () {\n                var template = this.options.template;\n                if (typeof template === 'string') {\n                    template = window.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                return template;\n            },\n            _renderFields: function () {\n                var form = '';\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || '') + '</label></div>';\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr('container-for') + '=\"' + field.field + '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n                return form;\n            },\n            _renderButtons: function () {\n                var form = '<div class=\"k-edit-buttons k-state-default\">';\n                form += this._createButton('update');\n                form += this._createButton('cancel');\n                form += '</div>';\n                return form;\n            },\n            _createButton: function (name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n            _attachButtonEvents: function () {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n            },\n            _updateClick: function (e) {\n                e.preventDefault();\n                this.trigger('update');\n            },\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger('cancel');\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? 'text' : model.idField;\n                $('<input name=\\'' + options.field + '\\' />').appendTo(container).kendoDropDownList({\n                    dataValueField: model.idField,\n                    dataTextField: textField,\n                    dataSource: this.dataSource.data().toJSON(),\n                    optionLabel: ' ',\n                    valuePrimitive: true\n                });\n            }\n        }\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function (callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n            activate: function () {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function (items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n            forEach: function (callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n            getByUid: function (uid) {\n                return this.items[uid];\n            },\n            remove: function (item) {\n                delete this.items[item.uid];\n            }\n        };\n        var QuadRoot = Class.extend({\n            init: function () {\n                this.shapes = [];\n            },\n            _add: function (shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n            insert: function (shape, bounds) {\n                this._add(shape, bounds);\n            },\n            remove: function (shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect)) {\n                        return true;\n                    }\n                }\n            },\n            _testRect: function (shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n        var QuadNode = QuadRoot.extend({\n            init: function (rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n            inBounds: function (rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n            overlapsBounds: function (rect) {\n                return this.rect.overlaps(rect);\n            },\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n                return inserted;\n            },\n            _initChildren: function () {\n                var rect = this.rect, children = this.children, shapes = this.shapes, center = rect.center(), halfWidth = rect.width / 2, halfHeight = rect.height / 2, childIdx, shapeIdx;\n                children.push(new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight)));\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect)) {\n                        hit = true;\n                    } else {\n                        for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect)) {\n                                hit = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return hit;\n            }\n        });\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n            init: function (diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n            initRoots: function () {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n            clear: function () {\n                this.initRoots();\n            },\n            _boundsChange: function (e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n            insert: function (shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(new Rect(x * rootSize, y * rootSize, rootSize, rootSize));\n                    }\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n            remove: function (shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n            inRoot: function (sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n            getSectors: function (rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [\n                    [],\n                    []\n                ];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n            hitTestRect: function (rect) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n                if (this.root.hitTestRect(rect)) {\n                    return true;\n                }\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n            return new kendo.data.ObservableObject(model);\n        }\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n        dataviz.ui.plugin(Diagram);\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.diagram', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.userevents',\n        'kendo.mobile.scroller',\n        'kendo.drawing',\n        'dataviz/diagram/utils',\n        'dataviz/diagram/math',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout',\n        'dataviz/diagram/dom'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.diagram',\n        name: 'Diagram',\n        category: 'dataviz',\n        description: 'The Kendo DataViz Diagram ',\n        depends: [\n            'data',\n            'userevents',\n            'mobile.scroller',\n            'draganddrop',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes',\n            'toolbar'\n        ],\n        features: [\n            {\n                id: 'dataviz.diagram-pdf-export',\n                name: 'PDF export',\n                description: 'Export Diagram as PDF',\n                depends: ['pdf']\n            },\n            {\n                id: 'dataviz.diagram-editing',\n                name: 'Editing',\n                description: 'Support for model editing',\n                depends: [\n                    'editable',\n                    'window',\n                    'dropdownlist'\n                ]\n            }\n        ]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}